//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets
{
	public enum msdyn_locale
	{
		/// <summary>
		/// ar-SA = 1025
		/// </summary>
		ar_SA = 1025,
		/// <summary>
		/// bg-BG = 1026
		/// </summary>
		bg_BG = 1026,
		/// <summary>
		/// ca-ES = 1027
		/// </summary>
		ca_ES = 1027,
		/// <summary>
		/// cs-CZ = 1029
		/// </summary>
		cs_CZ = 1029,
		/// <summary>
		/// da-DK = 1030
		/// </summary>
		da_DK = 1030,
		/// <summary>
		/// de-DE = 1031
		/// </summary>
		de_DE = 1031,
		/// <summary>
		/// el-GR = 1032
		/// </summary>
		el_GR = 1032,
		/// <summary>
		/// en-US = 1033
		/// </summary>
		en_US = 1033,
		/// <summary>
		/// es-ES = 3082
		/// </summary>
		es_ES = 3082,
		/// <summary>
		/// et-EE = 1061
		/// </summary>
		et_EE = 1061,
		/// <summary>
		/// eu-ES = 1069
		/// </summary>
		eu_ES = 1069,
		/// <summary>
		/// fi-FI = 1035
		/// </summary>
		fi_FI = 1035,
		/// <summary>
		/// fr-FR = 1036
		/// </summary>
		fr_FR = 1036,
		/// <summary>
		/// gl-ES = 1110
		/// </summary>
		gl_ES = 1110,
		/// <summary>
		/// he-IL = 1037
		/// </summary>
		he_IL = 1037,
		/// <summary>
		/// hi-IN = 1081
		/// </summary>
		hi_IN = 1081,
		/// <summary>
		/// hr-HR = 1050
		/// </summary>
		hr_HR = 1050,
		/// <summary>
		/// hu-HU = 1038
		/// </summary>
		hu_HU = 1038,
		/// <summary>
		/// id-ID = 1057
		/// </summary>
		id_ID = 1057,
		/// <summary>
		/// it-IT = 1040
		/// </summary>
		it_IT = 1040,
		/// <summary>
		/// ja-JP = 1041
		/// </summary>
		ja_JP = 1041,
		/// <summary>
		/// kk-KZ = 1087
		/// </summary>
		kk_KZ = 1087,
		/// <summary>
		/// ko-KR = 1042
		/// </summary>
		ko_KR = 1042,
		/// <summary>
		/// lt-LT = 1063
		/// </summary>
		lt_LT = 1063,
		/// <summary>
		/// lv-LV = 1062
		/// </summary>
		lv_LV = 1062,
		/// <summary>
		/// ms-MY = 1086
		/// </summary>
		ms_MY = 1086,
		/// <summary>
		/// nb-NO = 1044
		/// </summary>
		nb_NO = 1044,
		/// <summary>
		/// nl-NL = 1043
		/// </summary>
		nl_NL = 1043,
		/// <summary>
		/// pl-PL = 1045
		/// </summary>
		pl_PL = 1045,
		/// <summary>
		/// pt-BR = 1046
		/// </summary>
		pt_BR = 1046,
		/// <summary>
		/// pt-PT = 2070
		/// </summary>
		pt_PT = 2070,
		/// <summary>
		/// ro-RO = 1048
		/// </summary>
		ro_RO = 1048,
		/// <summary>
		/// ru-RU = 1049
		/// </summary>
		ru_RU = 1049,
		/// <summary>
		/// sk-SK = 1051
		/// </summary>
		sk_SK = 1051,
		/// <summary>
		/// sl-SI = 1060
		/// </summary>
		sl_SI = 1060,
		/// <summary>
		/// sr-Cyrl-CS = 3098
		/// </summary>
		sr_Cyrl_CS = 3098,
		/// <summary>
		/// sr-Latn-CS = 2074
		/// </summary>
		sr_Latn_CS = 2074,
		/// <summary>
		/// sv-SE = 1053
		/// </summary>
		sv_SE = 1053,
		/// <summary>
		/// th-TH = 1054
		/// </summary>
		th_TH = 1054,
		/// <summary>
		/// tr-TR = 1055
		/// </summary>
		tr_TR = 1055,
		/// <summary>
		/// uk-UA = 1058
		/// </summary>
		uk_UA = 1058,
		/// <summary>
		/// vi-VN = 1066
		/// </summary>
		vi_VN = 1066,
		/// <summary>
		/// zh-CN = 2052
		/// </summary>
		zh_CN = 2052,
		/// <summary>
		/// zh-HK = 3076
		/// </summary>
		zh_HK = 3076,
		/// <summary>
		/// zh-TW = 1028
		/// </summary>
		zh_TW = 1028
	}

	public enum msdyn_ocrichobjecttype
	{
		/// <summary>
		/// Apple Pay = 192350006
		/// </summary>
		Apple_Pay = 192350006,
		/// <summary>
		/// Authentication = 192350007
		/// </summary>
		Authentication = 192350007,
		/// <summary>
		/// Custom JSON = 192350004
		/// </summary>
		Custom_JSON = 192350004,
		/// <summary>
		/// List Picker = 192350002
		/// </summary>
		List_Picker = 192350002,
		/// <summary>
		/// Suggested Reply = 192350005
		/// </summary>
		Suggested_Reply = 192350005,
		/// <summary>
		/// Time Picker = 192350003
		/// </summary>
		Time_Picker = 192350003,
		/// <summary>
		/// Video Rich Link = 192350001
		/// </summary>
		Video_Rich_Link = 192350001,
		/// <summary>
		/// Website Rich Link = 192350000
		/// </summary>
		Website_Rich_Link = 192350000
	}

	public enum msdyn_streamsource
	{
		/// <summary>
		/// Apple Messages for Business = 192450000
		/// </summary>
		Apple_Messages_for_Business = 192450000,
		/// <summary>
		/// Co-browse = 192390000
		/// </summary>
		Co_browse = 192390000,
		/// <summary>
		/// Custom = 192350002
		/// </summary>
		Custom = 192350002,
		/// <summary>
		/// Entity Records = 192350000
		/// </summary>
		Entity_Records = 192350000,
		/// <summary>
		/// Facebook = 192330000
		/// </summary>
		Facebook = 192330000,
		/// <summary>
		/// LINE = 192310000
		/// </summary>
		LINE = 192310000,
		/// <summary>
		/// Live chat = 192360000
		/// </summary>
		Live_chat = 192360000,
		/// <summary>
		/// Microsoft Teams = 19241000
		/// </summary>
		Microsoft_Teams = 19241000,
		/// <summary>
		/// Screen sharing = 192400000
		/// </summary>
		Screen_sharing = 192400000,
		/// <summary>
		/// SMS = 192340000
		/// </summary>
		SMS = 192340000,
		/// <summary>
		/// Twitter = 192350001
		/// </summary>
		Twitter = 192350001,
		/// <summary>
		/// Video = 192380000
		/// </summary>
		Video = 192380000,
		/// <summary>
		/// Voice = 192370000
		/// </summary>
		Voice = 192370000,
		/// <summary>
		/// WeChat = 192320000
		/// </summary>
		WeChat = 192320000,
		/// <summary>
		/// WhatsApp = 192300000
		/// </summary>
		WhatsApp = 192300000
	}

	public enum statecode
	{
		/// <summary>
		/// Active = 0
		/// </summary>
		Active = 0,
		/// <summary>
		/// Inactive = 1
		/// </summary>
		Inactive = 1
	}

	public enum statuscode
	{
		/// <summary>
		/// Active = 1
		/// </summary>
		Active = 1,
		/// <summary>
		/// Inactive = 2
		/// </summary>
		Inactive = 2
	}
}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_ocrichobject : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_allowagenttoedit = "msdyn_allowagenttoedit";
			public const string msdyn_locale = "msdyn_locale";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_objectjson = "msdyn_objectjson";
			public const string msdyn_ocrichobjectId = "msdyn_ocrichobjectid";
			public const string msdyn_ocrichobjecttype = "msdyn_ocrichobjecttype";
			public const string msdyn_streamsource = "msdyn_streamsource";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}

		public const string EntityLogicalName = "msdyn_ocrichobject";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10754;

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Guid msdyn_ocrichobjectId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_ocrichobjectId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Unique identifier of the user who created the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Created By</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}

		/// <summary>
		/// <para>Date and time when the record was created.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Created On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}

		/// <summary>
		/// <para>Unique identifier of the delegate user who created the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Created By (Delegate)</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}

		/// <summary>
		/// <para>Sequence number of the import that created this record.</para>
		/// <para>Integer - MinValue: -2,147,483,648 - MaxValue: 2,147,483,647</para>
		/// <para>Import Sequence Number</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the user who modified the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Modified By</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}

		/// <summary>
		/// <para>Date and time when the record was modified.</para>
		/// <para>ReadOnly - DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Modified On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}

		/// <summary>
		/// <para>Unique identifier of the delegate user who modified the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Modified By (Delegate)</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}

		/// <summary>
		/// <para>Indicates if the rich message can be edited by the agent</para>
		/// <para>Required - Boolean</para>
		/// <para>Indicates if the rich message can be edited by the agent</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_allowagenttoedit
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_allowagenttoedit); }
			set { Entity.Attributes[Fields.msdyn_allowagenttoedit] = value; }
		}

		/// <summary>
		/// <para>The locale of a rich message</para>
		/// <para>Required - Picklist</para>
		/// <para>Rich message Locale</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_locale? msdyn_locale
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_locale);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_locale)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_locale] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_locale] = null;
			}
		}

		/// <summary>
		/// <para>The name of the custom entity.</para>
		/// <para>Required - String - MaxLength: 100</para>
		/// <para>Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}

		/// <summary>
		/// <para>Rich message json</para>
		/// <para>Required - Memo - MaxLength: 9999</para>
		/// <para>Rich message json</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_objectjson
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_objectjson); }
			set { Entity.Attributes[Fields.msdyn_objectjson] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>Identifies a rich message instance</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_ocrichobjectId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_ocrichobjectId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>The rich message type</para>
		/// <para>Required - Picklist</para>
		/// <para>Rich message type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_ocrichobjecttype? msdyn_ocrichobjecttype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_ocrichobjecttype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_ocrichobjecttype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_ocrichobjecttype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_ocrichobjecttype] = null;
			}
		}

		/// <summary>
		/// <para>The channel to which this rich message is attached</para>
		/// <para>Required - Picklist</para>
		/// <para>Channel Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_streamsource? msdyn_streamsource
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_streamsource);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_streamsource)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_streamsource] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_streamsource] = null;
			}
		}

		/// <summary>
		/// <para>Date and time that the record was migrated.</para>
		/// <para>DateTimeBehavior: UserLocal - DateTimeFormat: DateOnly</para>
		/// <para>Record Created On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}

		/// <summary>
		/// <para>Owner Id</para>
		/// <para>Lookup to systemuser, team</para>
		/// <para>Owner</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for the business unit that owns the record</para>
		/// <para>ReadOnly - Lookup to businessunit</para>
		/// <para>Owning Business Unit</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}

		/// <summary>
		/// <para>Unique identifier for the team that owns the record.</para>
		/// <para>ReadOnly - Lookup to team</para>
		/// <para>Owning Team</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}

		/// <summary>
		/// <para>Unique identifier for the user that owns the record.</para>
		/// <para>ReadOnly - Lookup to systemuser</para>
		/// <para>Owning User</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}

		/// <summary>
		/// <para>Status of the Line Channel</para>
		/// <para>State</para>
		/// <para>Status</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}

		/// <summary>
		/// <para>Reason for the status of the rich message</para>
		/// <para>Status</para>
		/// <para>Status Reason</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>Integer - MinValue: -1 - MaxValue: 2,147,483,647</para>
		/// <para>Time Zone Rule Version Number</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}

		/// <summary>
		/// <para>Time zone code that was in use when the record was created.</para>
		/// <para>Integer - MinValue: -1 - MaxValue: 2,147,483,647</para>
		/// <para>UTC Conversion Time Zone Code</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}

		/// <summary>
		/// <para>Version Number</para>
		/// <para>ReadOnly - BigInt</para>
		/// <para>Version Number</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}
