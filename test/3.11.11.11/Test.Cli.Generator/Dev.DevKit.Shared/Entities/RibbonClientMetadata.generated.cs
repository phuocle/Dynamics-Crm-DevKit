//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.RibbonClientMetadataOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class RibbonClientMetadata : EntityBase
	{
		public struct Fields
		{
			public const string ComponentState = "componentstate";
			public const string EntityLogicalName = "entitylogicalname";
			public const string RibbonContext = "ribboncontext";
			public const string RibbonId = "ribbonid";
			public const string RibbonIdUnique = "ribbonidunique";
			public const string RibbonJson = "ribbonjson";
			public const string RibbonJsonFileRef = "ribbonjsonfileref";
			public const string SolutionId = "solutionid";
			public const string VersionNumber = "versionnumber";
		}

		public const string EntityLogicalName = "ribbonclientmetadata";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 4579;

		[DebuggerNonUserCode()]
		public RibbonClientMetadata()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public RibbonClientMetadata(Guid RibbonClientMetadataId)
		{
			Entity = new Entity(EntityLogicalName, RibbonClientMetadataId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public RibbonClientMetadata(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public RibbonClientMetadata(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public RibbonClientMetadata(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public RibbonClientMetadata(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Integer - MinValue: 0 - MaxValue: 3</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ComponentState
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ComponentState); }
		}

		/// <summary>
		/// <para>Entity logical name</para>
		/// <para>Required - String - MaxLength: 128</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string EntityLogicalName1
		{
			get { return Entity.GetAttributeValue<string>(Fields.EntityLogicalName); }
			set { Entity.Attributes[Fields.EntityLogicalName] = value; }
		}

		/// <summary>
		/// <para>Ribbon context</para>
		/// <para>Required - String - MaxLength: 32</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RibbonContext
		{
			get { return Entity.GetAttributeValue<string>(Fields.RibbonContext); }
			set { Entity.Attributes[Fields.RibbonContext] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of a ribbon client metadata.</para>
		/// <para>Uniqueidentifier</para>
		/// <para>Ribbon Client Metadata Identifier.</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? RibbonId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.RibbonId); }
			set { Entity.Attributes[Fields.RibbonId] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the Ribbon client Metadata</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? RibbonIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.RibbonIdUnique); }
		}

		/// <summary>
		/// <para>Ribbon representation in JSON format.</para>
		/// <para>Required - Memo - MaxLength: 1073741823</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RibbonJson
		{
			get { return Entity.GetAttributeValue<string>(Fields.RibbonJson); }
			set { Entity.Attributes[Fields.RibbonJson] = value; }
		}

		/// <summary>
		/// <para>Reference to the Ribbon JSON file on Azure.</para>
		/// <para>ReadOnly - Virtual</para>
		/// <para>RibbonJsonFileRef</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RibbonJsonFileRef
		{
			get { return Entity.GetAttributeValue<string>(Fields.RibbonJsonFileRef); }
		}

		/// <summary>
		/// <para>Unique identifier of the associated solution.</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para>Solution</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}

		/// <summary>
		/// <para>ReadOnly - BigInt</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}
