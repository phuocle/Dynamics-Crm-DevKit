//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.virtualresourcegroupresourceOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class virtualresourcegroupresource : EntityBase
	{
		public struct Fields
		{
			public const string businessunit = "businessunit";
			public const string constraintbasedgroupid = "constraintbasedgroupid";
			public const string name = "name";
			public const string resourceentitylogicalname = "resourceentitylogicalname";
			public const string resourceentityname = "resourceentityname";
			public const string resourcegroupId = "resourcegroupid";
			public const string virtualresourcegroupresourceId = "virtualresourcegroupresourceid";
		}

		public const string EntityLogicalName = "virtualresourcegroupresource";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10147;

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource(Guid virtualresourcegroupresourceId)
		{
			Entity = new Entity(EntityLogicalName, virtualresourcegroupresourceId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public virtualresourcegroupresource(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Business Unit</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string businessunit
		{
			get { return Entity.GetAttributeValue<string>(Fields.businessunit); }
			set { Entity.Attributes[Fields.businessunit] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>constraintbasedgroupid</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string constraintbasedgroupid
		{
			get { return Entity.GetAttributeValue<string>(Fields.constraintbasedgroupid); }
			set { Entity.Attributes[Fields.constraintbasedgroupid] = value; }
		}

		/// <summary>
		/// <para>The name of the custom entity.</para>
		/// <para>Required - String - MaxLength: 100</para>
		/// <para>Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string name
		{
			get { return Entity.GetAttributeValue<string>(Fields.name); }
			set { Entity.Attributes[Fields.name] = value; }
		}

		/// <summary>
		/// <para>Entity type logical name of resource</para>
		/// <para>String - MaxLength: 100</para>
		/// <para>Entity type logical name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string resourceentitylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.resourceentitylogicalname); }
			set { Entity.Attributes[Fields.resourceentitylogicalname] = value; }
		}

		/// <summary>
		/// <para>Entity type of resource</para>
		/// <para>String - MaxLength: 100</para>
		/// <para>Entity Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string resourceentityname
		{
			get { return Entity.GetAttributeValue<string>(Fields.resourceentityname); }
			set { Entity.Attributes[Fields.resourceentityname] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for Resource Group associated with virtualresourcegroupresource.</para>
		/// <para>Lookup to constraintbasedgroup</para>
		/// <para>resourcegroup</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference resourcegroupId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.resourcegroupId); }
			set { Entity.Attributes[Fields.resourcegroupId] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>virtualresourcegroupresource</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid virtualresourcegroupresourceId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.virtualresourcegroupresourceId] = value;
				Entity.Id = value;
			}
		}
	}
}
