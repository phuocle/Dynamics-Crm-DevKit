//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.msdyn_solutioncomponentsummaryOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_solutioncomponentsummary : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_canvasappuniqueid = "msdyn_canvasappuniqueid";
			public const string msdyn_componentlogicalname = "msdyn_componentlogicalname";
			public const string msdyn_componenttype = "msdyn_componenttype";
			public const string msdyn_componenttypename = "msdyn_componenttypename";
			public const string msdyn_connectorinternalid = "msdyn_connectorinternalid";
			public const string msdyn_createdon = "msdyn_createdon";
			public const string msdyn_culture = "msdyn_culture";
			public const string msdyn_deployment = "msdyn_deployment";
			public const string msdyn_description = "msdyn_description";
			public const string msdyn_displayname = "msdyn_displayname";
			public const string msdyn_eventhandler = "msdyn_eventhandler";
			public const string msdyn_executionorder = "msdyn_executionorder";
			public const string msdyn_executionstage = "msdyn_executionstage";
			public const string msdyn_fieldsecurity = "msdyn_fieldsecurity";
			public const string msdyn_fieldtype = "msdyn_fieldtype";
			public const string msdyn_isappaware = "msdyn_isappaware";
			public const string msdyn_isappawarename = "msdyn_isappawarename";
			public const string msdyn_isauditenabled = "msdyn_isauditenabled";
			public const string msdyn_isauditenabledname = "msdyn_isauditenabledname";
			public const string msdyn_iscustom = "msdyn_iscustom";
			public const string msdyn_iscustomizable = "msdyn_iscustomizable";
			public const string msdyn_iscustomizablename = "msdyn_iscustomizablename";
			public const string msdyn_iscustomname = "msdyn_iscustomname";
			public const string msdyn_isdefault = "msdyn_isdefault";
			public const string msdyn_isdefaultname = "msdyn_isdefaultname";
			public const string msdyn_ismanaged = "msdyn_ismanaged";
			public const string msdyn_ismanagedname = "msdyn_ismanagedname";
			public const string msdyn_isolationmode = "msdyn_isolationmode";
			public const string msdyn_istableenabled = "msdyn_istableenabled";
			public const string msdyn_logicalcollectionname = "msdyn_logicalcollectionname";
			public const string msdyn_modifiedon = "msdyn_modifiedon";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_objectid = "msdyn_objectid";
			public const string msdyn_objecttypecode = "msdyn_objecttypecode";
			public const string msdyn_owner = "msdyn_owner";
			public const string msdyn_owningbusinessunit = "msdyn_owningbusinessunit";
			public const string msdyn_primaryentityname = "msdyn_primaryentityname";
			public const string msdyn_primaryidattribute = "msdyn_primaryidattribute";
			public const string msdyn_publickeytoken = "msdyn_publickeytoken";
			public const string msdyn_relatedentity = "msdyn_relatedentity";
			public const string msdyn_relatedentityattribute = "msdyn_relatedentityattribute";
			public const string msdyn_schemaname = "msdyn_schemaname";
			public const string msdyn_sdkmessagename = "msdyn_sdkmessagename";
			public const string msdyn_solutioncomponentsummaryId = "msdyn_solutioncomponentsummaryid";
			public const string msdyn_solutionid = "msdyn_solutionid";
			public const string msdyn_standardstatus = "msdyn_standardstatus";
			public const string msdyn_status = "msdyn_status";
			public const string msdyn_statusname = "msdyn_statusname";
			public const string msdyn_subtype = "msdyn_subtype";
			public const string msdyn_synctoexternalsearchindex = "msdyn_synctoexternalsearchindex";
			public const string msdyn_total = "msdyn_total";
			public const string msdyn_typename = "msdyn_typename";
			public const string msdyn_uniquename = "msdyn_uniquename";
			public const string msdyn_version = "msdyn_version";
			public const string msdyn_workflowcategory = "msdyn_workflowcategory";
			public const string msdyn_workflowcategoryname = "msdyn_workflowcategoryname";
			public const string msdyn_workflowidunique = "msdyn_workflowidunique";
			public const string OrganizationId = "organizationid";
		}

		public const string EntityLogicalName = "msdyn_solutioncomponentsummary";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10013;

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary(Guid msdyn_solutioncomponentsummaryId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_solutioncomponentsummaryId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentsummary(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Canvas App Unique Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_canvasappuniqueid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_canvasappuniqueid); }
			set { Entity.Attributes[Fields.msdyn_canvasappuniqueid] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Component Logical Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_componentlogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_componentlogicalname); }
			set { Entity.Attributes[Fields.msdyn_componentlogicalname] = value; }
		}

		/// <summary>
		/// <para>Decimal - MinValue: -100,000,000,000 - MaxValue: 100,000,000,000</para>
		/// <para>msdyn_componenttype</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public decimal? msdyn_componenttype
		{
			get { return Entity.GetAttributeValue<decimal?>(Fields.msdyn_componenttype); }
			set { Entity.Attributes[Fields.msdyn_componenttype] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Component Type Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_componenttypename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_componenttypename); }
			set { Entity.Attributes[Fields.msdyn_componenttypename] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Connector Internal Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_connectorinternalid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_connectorinternalid); }
			set { Entity.Attributes[Fields.msdyn_connectorinternalid] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_createdon</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_createdon
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_createdon); }
			set { Entity.Attributes[Fields.msdyn_createdon] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_culture</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_culture
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_culture); }
			set { Entity.Attributes[Fields.msdyn_culture] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_deployment</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_deployment
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_deployment); }
			set { Entity.Attributes[Fields.msdyn_deployment] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_description</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_description); }
			set { Entity.Attributes[Fields.msdyn_description] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_displayname</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_displayname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_displayname); }
			set { Entity.Attributes[Fields.msdyn_displayname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_eventhandler</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_eventhandler
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_eventhandler); }
			set { Entity.Attributes[Fields.msdyn_eventhandler] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_executionorder</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_executionorder
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_executionorder); }
			set { Entity.Attributes[Fields.msdyn_executionorder] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_executionstage</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_executionstage
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_executionstage); }
			set { Entity.Attributes[Fields.msdyn_executionstage] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Field Security</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_fieldsecurity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_fieldsecurity); }
			set { Entity.Attributes[Fields.msdyn_fieldsecurity] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Field Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_fieldtype
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_fieldtype); }
			set { Entity.Attributes[Fields.msdyn_fieldtype] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_isappaware</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isappaware
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isappaware); }
			set { Entity.Attributes[Fields.msdyn_isappaware] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>App Aware Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isappawarename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isappawarename); }
			set { Entity.Attributes[Fields.msdyn_isappawarename] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_isauditenabled</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isauditenabled
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isauditenabled); }
			set { Entity.Attributes[Fields.msdyn_isauditenabled] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Audit Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isauditenabledname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isauditenabledname); }
			set { Entity.Attributes[Fields.msdyn_isauditenabledname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_iscustom</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_iscustom
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_iscustom); }
			set { Entity.Attributes[Fields.msdyn_iscustom] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_iscustomizable</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_iscustomizable
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_iscustomizable); }
			set { Entity.Attributes[Fields.msdyn_iscustomizable] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Customizable Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_iscustomizablename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_iscustomizablename); }
			set { Entity.Attributes[Fields.msdyn_iscustomizablename] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Is Custom Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_iscustomname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_iscustomname); }
			set { Entity.Attributes[Fields.msdyn_iscustomname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Default</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isdefault
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isdefault); }
			set { Entity.Attributes[Fields.msdyn_isdefault] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Default Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isdefaultname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isdefaultname); }
			set { Entity.Attributes[Fields.msdyn_isdefaultname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_ismanaged</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_ismanaged
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_ismanaged); }
			set { Entity.Attributes[Fields.msdyn_ismanaged] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Managed Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_ismanagedname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_ismanagedname); }
			set { Entity.Attributes[Fields.msdyn_ismanagedname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_isolationmode</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_isolationmode
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_isolationmode); }
			set { Entity.Attributes[Fields.msdyn_isolationmode] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_istableenabled</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_istableenabled
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_istableenabled); }
			set { Entity.Attributes[Fields.msdyn_istableenabled] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Logical Collection Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_logicalcollectionname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_logicalcollectionname); }
			set { Entity.Attributes[Fields.msdyn_logicalcollectionname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_modifiedon</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_modifiedon
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_modifiedon); }
			set { Entity.Attributes[Fields.msdyn_modifiedon] = value; }
		}

		/// <summary>
		/// <para>The name of the custom entity.</para>
		/// <para>Required - String - MaxLength: 100</para>
		/// <para>msdyn_name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_objectid</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_objectid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_objectid); }
			set { Entity.Attributes[Fields.msdyn_objectid] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_objecttypecode</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_objecttypecode
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_objecttypecode); }
			set { Entity.Attributes[Fields.msdyn_objecttypecode] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_owner</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_owner
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_owner); }
			set { Entity.Attributes[Fields.msdyn_owner] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>owning business unit</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_owningbusinessunit
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_owningbusinessunit); }
			set { Entity.Attributes[Fields.msdyn_owningbusinessunit] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Primary Entity Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_primaryentityname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_primaryentityname); }
			set { Entity.Attributes[Fields.msdyn_primaryentityname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Name of the primary id attribute</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_primaryidattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_primaryidattribute); }
			set { Entity.Attributes[Fields.msdyn_primaryidattribute] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_publickeytoken</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_publickeytoken
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_publickeytoken); }
			set { Entity.Attributes[Fields.msdyn_publickeytoken] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Related Entity</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_relatedentity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_relatedentity); }
			set { Entity.Attributes[Fields.msdyn_relatedentity] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Related Entity Attribute Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_relatedentityattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_relatedentityattribute); }
			set { Entity.Attributes[Fields.msdyn_relatedentityattribute] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_schemaname</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_schemaname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_schemaname); }
			set { Entity.Attributes[Fields.msdyn_schemaname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_sdkmessagename</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_sdkmessagename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_sdkmessagename); }
			set { Entity.Attributes[Fields.msdyn_sdkmessagename] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>SolutionComponentSummary</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_solutioncomponentsummaryId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_solutioncomponentsummaryId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_solutionid</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_solutionid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_solutionid); }
			set { Entity.Attributes[Fields.msdyn_solutionid] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_standardstatus</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_standardstatus
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_standardstatus); }
			set { Entity.Attributes[Fields.msdyn_standardstatus] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_status</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_status
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_status); }
			set { Entity.Attributes[Fields.msdyn_status] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Status Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_statusname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_statusname); }
			set { Entity.Attributes[Fields.msdyn_statusname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_subtype</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_subtype
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_subtype); }
			set { Entity.Attributes[Fields.msdyn_subtype] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_synctoexternalsearchindex</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_synctoexternalsearchindex
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_synctoexternalsearchindex); }
			set { Entity.Attributes[Fields.msdyn_synctoexternalsearchindex] = value; }
		}

		/// <summary>
		/// <para>Decimal - MinValue: -100,000,000,000 - MaxValue: 100,000,000,000</para>
		/// <para>msdyn_total</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public decimal? msdyn_total
		{
			get { return Entity.GetAttributeValue<decimal?>(Fields.msdyn_total); }
			set { Entity.Attributes[Fields.msdyn_total] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_typename</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_typename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_typename); }
			set { Entity.Attributes[Fields.msdyn_typename] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_uniquename</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_uniquename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_uniquename); }
			set { Entity.Attributes[Fields.msdyn_uniquename] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_version</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_version
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_version); }
			set { Entity.Attributes[Fields.msdyn_version] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_workflowcategory</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_workflowcategory
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_workflowcategory); }
			set { Entity.Attributes[Fields.msdyn_workflowcategory] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Workflow Category Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_workflowcategoryname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_workflowcategoryname); }
			set { Entity.Attributes[Fields.msdyn_workflowcategoryname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Workflow Id Unique</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_workflowidunique
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_workflowidunique); }
			set { Entity.Attributes[Fields.msdyn_workflowidunique] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for the organization</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para>Organization Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? OrganizationId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.OrganizationId); }
		}
	}
}
