//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.SubscriptionManuallyTrackedObjectOptionSets
{
	public enum ObjectTypeCode
	{
		/// <summary>
		/// Contact = 2
		/// </summary>
		Contact = 2,
		/// <summary>
		/// Task = 4212
		/// </summary>
		Task = 4212
	}
}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class SubscriptionManuallyTrackedObject : EntityBase
	{
		public struct Fields
		{
			public const string ObjectId = "objectid";
			public const string ObjectTypeCode = "objecttypecode";
			public const string SubscriptionId = "subscriptionid";
			public const string SubscriptionManuallyTrackedObjectId = "subscriptionmanuallytrackedobjectid";
			public const string Track = "track";
			public const string VersionNumber = "versionnumber";
		}

		public const string EntityLogicalName = "subscriptionmanuallytrackedobject";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 37;

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject(Guid SubscriptionManuallyTrackedObjectId)
		{
			Entity = new Entity(EntityLogicalName, SubscriptionManuallyTrackedObjectId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionManuallyTrackedObject(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Unique identifier of the object with which the subscription is associated.</para>
		/// <para>Uniqueidentifier</para>
		/// <para>Object Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ObjectId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ObjectId); }
			set { Entity.Attributes[Fields.ObjectId] = value; }
		}

		/// <summary>
		/// <para>Type code of the object with which the subscription is associated.</para>
		/// <para>EntityName</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ObjectTypeCode
		{
			get { return Entity.GetAttributeValue<string>(Fields.ObjectTypeCode); }
			set { Entity.Attributes[Fields.ObjectTypeCode] = value; }
		}

		/// <summary>
		/// <para>Unique identifier of the subscription.</para>
		/// <para>Uniqueidentifier</para>
		/// <para>Subscription Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SubscriptionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SubscriptionId); }
			set { Entity.Attributes[Fields.SubscriptionId] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid SubscriptionManuallyTrackedObjectId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.SubscriptionManuallyTrackedObjectId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>Information that specifies if the object is tracked.</para>
		/// <para>Boolean</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? Track
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.Track); }
			set { Entity.Attributes[Fields.Track] = value; }
		}

		/// <summary>
		/// <para>Version number of the subscription manually tracked object.</para>
		/// <para>ReadOnly - BigInt</para>
		/// <para>Version number</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}
