//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.SubscriptionClientsOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class SubscriptionClients : EntityBase
	{
		public struct Fields
		{
			public const string ClientId = "clientid";
			public const string IsPrimaryClient = "isprimaryclient";
			public const string MachineName = "machinename";
			public const string SubscriptionClientId = "subscriptionclientid";
			public const string SubscriptionId = "subscriptionid";
		}

		public const string EntityLogicalName = "subscriptionclients";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 1072;

		[DebuggerNonUserCode()]
		public SubscriptionClients()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionClients(Guid SubscriptionClientsId)
		{
			Entity = new Entity(EntityLogicalName, SubscriptionClientsId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionClients(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionClients(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionClients(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionClients(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ClientId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ClientId); }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Boolean</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsPrimaryClient
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsPrimaryClient); }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>String - MaxLength: 200</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string MachineName
		{
			get { return Entity.GetAttributeValue<string>(Fields.MachineName); }
			set { Entity.Attributes[Fields.MachineName] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SubscriptionClientId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SubscriptionClientId); }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SubscriptionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SubscriptionId); }
			set { Entity.Attributes[Fields.SubscriptionId] = value; }
		}
	}
}
