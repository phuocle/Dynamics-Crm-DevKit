//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.SubscriptionTrackingDeletedObjectOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class SubscriptionTrackingDeletedObject : EntityBase
	{
		public struct Fields
		{
			public const string CrmCreatedOn = "crmcreatedon";
			public const string DeleteTime = "deletetime";
			public const string IsArchivalDelete = "isarchivaldelete";
			public const string IsLogicalDelete = "islogicaldelete";
			public const string ObjectId = "objectid";
			public const string TimeStamp = "timestamp";
		}

		public const string EntityLogicalName = "subscriptiontrackingdeletedobject";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 35;

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject(Guid SubscriptionTrackingDeletedObjectId)
		{
			Entity = new Entity(EntityLogicalName, SubscriptionTrackingDeletedObjectId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public SubscriptionTrackingDeletedObject(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Shows the date and time when the record was created in CRM. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
		/// <para>DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Crm Created On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CrmCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CrmCreatedOn); }
			set { Entity.Attributes[Fields.CrmCreatedOn] = value; }
		}

		/// <summary>
		/// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
		/// <para>DateTimeBehavior: UserLocal - DateTimeFormat: DateAndTime</para>
		/// <para>Created On</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? DeleteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.DeleteTime); }
			set { Entity.Attributes[Fields.DeleteTime] = value; }
		}

		/// <summary>
		/// <para>Indicates that the record is deleted by Archival or not</para>
		/// <para>Boolean</para>
		/// <para>Is Archival Delete</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsArchivalDelete
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsArchivalDelete); }
			set { Entity.Attributes[Fields.IsArchivalDelete] = value; }
		}

		/// <summary>
		/// <para>Indicates whether solution aware entity record is logical delete or not</para>
		/// <para>Boolean</para>
		/// <para>Is Logical Delete</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsLogicalDelete
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsLogicalDelete); }
			set { Entity.Attributes[Fields.IsLogicalDelete] = value; }
		}

		/// <summary>
		/// <para>ReadOnly - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ObjectId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ObjectId); }
		}

		/// <summary>
		/// <para>ReadOnly - BigInt</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? TimeStamp
		{
			get { return Entity.GetAttributeValue<long?>(Fields.TimeStamp); }
		}
	}
}
