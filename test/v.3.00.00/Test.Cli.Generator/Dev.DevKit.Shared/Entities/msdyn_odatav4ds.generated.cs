//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.msdyn_odatav4dsOptionSets
{
	public enum msdyn_paginationtype
	{
		/// <summary>
		/// Client-side Paging = 0
		/// </summary>
		Client_side_Paging = 0,
		/// <summary>
		/// Server-side Paging = 1
		/// </summary>
		Server_side_Paging = 1
	}
}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_odatav4ds : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_description = "msdyn_description";
			public const string msdyn_isparameter10header = "msdyn_isparameter10header";
			public const string msdyn_isparameter1header = "msdyn_isparameter1header";
			public const string msdyn_isparameter2header = "msdyn_isparameter2header";
			public const string msdyn_isparameter3header = "msdyn_isparameter3header";
			public const string msdyn_isparameter4header = "msdyn_isparameter4header";
			public const string msdyn_isparameter5header = "msdyn_isparameter5header";
			public const string msdyn_isparameter6header = "msdyn_isparameter6header";
			public const string msdyn_isparameter7header = "msdyn_isparameter7header";
			public const string msdyn_isparameter8header = "msdyn_isparameter8header";
			public const string msdyn_isparameter9header = "msdyn_isparameter9header";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_odatav4dsId = "msdyn_odatav4dsid";
			public const string msdyn_paginationmode = "msdyn_paginationmode";
			public const string msdyn_paginationtype = "msdyn_paginationtype";
			public const string msdyn_parameter10name = "msdyn_parameter10name";
			public const string msdyn_parameter10value = "msdyn_parameter10value";
			public const string msdyn_parameter1name = "msdyn_parameter1name";
			public const string msdyn_parameter1value = "msdyn_parameter1value";
			public const string msdyn_parameter2name = "msdyn_parameter2name";
			public const string msdyn_parameter2value = "msdyn_parameter2value";
			public const string msdyn_parameter3name = "msdyn_parameter3name";
			public const string msdyn_parameter3value = "msdyn_parameter3value";
			public const string msdyn_parameter4name = "msdyn_parameter4name";
			public const string msdyn_parameter4value = "msdyn_parameter4value";
			public const string msdyn_parameter5name = "msdyn_parameter5name";
			public const string msdyn_parameter5value = "msdyn_parameter5value";
			public const string msdyn_parameter6name = "msdyn_parameter6name";
			public const string msdyn_parameter6value = "msdyn_parameter6value";
			public const string msdyn_parameter7name = "msdyn_parameter7name";
			public const string msdyn_parameter7value = "msdyn_parameter7value";
			public const string msdyn_parameter8name = "msdyn_parameter8name";
			public const string msdyn_parameter8value = "msdyn_parameter8value";
			public const string msdyn_parameter9name = "msdyn_parameter9name";
			public const string msdyn_parameter9value = "msdyn_parameter9value";
			public const string msdyn_returninlinecount = "msdyn_returninlinecount";
			public const string msdyn_timeout = "msdyn_timeout";
			public const string msdyn_uri = "msdyn_uri";
		}

		public const string EntityLogicalName = "msdyn_odatav4ds";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10055;

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds(Guid msdyn_odatav4dsId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_odatav4dsId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_odatav4ds(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Type additional information to describe this OData v4 data source. What environment does this data source target and what is the purpose of this system ?</para>
		/// <para>String - MaxLength: 1024</para>
		/// <para>Description</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_description); }
			set { Entity.Attributes[Fields.msdyn_description] = value; }
		}

		/// <summary>
		/// <para>Parameter10 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter10 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter10header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter10header); }
			set { Entity.Attributes[Fields.msdyn_isparameter10header] = value; }
		}

		/// <summary>
		/// <para>Parameter1 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter1 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter1header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter1header); }
			set { Entity.Attributes[Fields.msdyn_isparameter1header] = value; }
		}

		/// <summary>
		/// <para>Parameter2 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter2 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter2header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter2header); }
			set { Entity.Attributes[Fields.msdyn_isparameter2header] = value; }
		}

		/// <summary>
		/// <para>Parameter3 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter3 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter3header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter3header); }
			set { Entity.Attributes[Fields.msdyn_isparameter3header] = value; }
		}

		/// <summary>
		/// <para>Parameter4 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter4 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter4header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter4header); }
			set { Entity.Attributes[Fields.msdyn_isparameter4header] = value; }
		}

		/// <summary>
		/// <para>Parameter5 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter5 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter5header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter5header); }
			set { Entity.Attributes[Fields.msdyn_isparameter5header] = value; }
		}

		/// <summary>
		/// <para>Parameter6 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter6 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter6header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter6header); }
			set { Entity.Attributes[Fields.msdyn_isparameter6header] = value; }
		}

		/// <summary>
		/// <para>Parameter7 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter7 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter7header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter7header); }
			set { Entity.Attributes[Fields.msdyn_isparameter7header] = value; }
		}

		/// <summary>
		/// <para>Parameter8 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter8 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter8header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter8header); }
			set { Entity.Attributes[Fields.msdyn_isparameter8header] = value; }
		}

		/// <summary>
		/// <para>Parameter9 Type</para>
		/// <para>Boolean</para>
		/// <para>Parameter9 Type</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_isparameter9header
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_isparameter9header); }
			set { Entity.Attributes[Fields.msdyn_isparameter9header] = value; }
		}

		/// <summary>
		/// <para>Name of the OData v4 data source. This name appears in the data source drop-down list when creating a new entity.</para>
		/// <para>Required - String - MaxLength: 100</para>
		/// <para>Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>OData v4 Data Source</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_odatav4dsId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_odatav4dsId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>Boolean</para>
		/// <para>Pagination Mode</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_paginationmode
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_paginationmode); }
			set { Entity.Attributes[Fields.msdyn_paginationmode] = value; }
		}

		/// <summary>
		/// <para>Required - Picklist</para>
		/// <para>Pagination Mode</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_odatav4dsOptionSets.msdyn_paginationtype? msdyn_paginationtype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_paginationtype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_odatav4dsOptionSets.msdyn_paginationtype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_paginationtype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_paginationtype] = null;
			}
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter10name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter10name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter10name); }
			set { Entity.Attributes[Fields.msdyn_parameter10name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter10value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter10value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter10value); }
			set { Entity.Attributes[Fields.msdyn_parameter10value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter1name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter1name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter1name); }
			set { Entity.Attributes[Fields.msdyn_parameter1name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter1value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter1value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter1value); }
			set { Entity.Attributes[Fields.msdyn_parameter1value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter2name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter2name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter2name); }
			set { Entity.Attributes[Fields.msdyn_parameter2name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter2value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter2value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter2value); }
			set { Entity.Attributes[Fields.msdyn_parameter2value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter3name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter3name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter3name); }
			set { Entity.Attributes[Fields.msdyn_parameter3name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter3value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter3value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter3value); }
			set { Entity.Attributes[Fields.msdyn_parameter3value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter4name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter4name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter4name); }
			set { Entity.Attributes[Fields.msdyn_parameter4name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter4value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter4value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter4value); }
			set { Entity.Attributes[Fields.msdyn_parameter4value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter5name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter5name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter5name); }
			set { Entity.Attributes[Fields.msdyn_parameter5name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter5value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter5value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter5value); }
			set { Entity.Attributes[Fields.msdyn_parameter5value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter6name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter6name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter6name); }
			set { Entity.Attributes[Fields.msdyn_parameter6name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter6value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter6value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter6value); }
			set { Entity.Attributes[Fields.msdyn_parameter6value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter7name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter7name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter7name); }
			set { Entity.Attributes[Fields.msdyn_parameter7name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter7value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter7value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter7value); }
			set { Entity.Attributes[Fields.msdyn_parameter7value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter8name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter8name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter8name); }
			set { Entity.Attributes[Fields.msdyn_parameter8name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter8value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter8value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter8value); }
			set { Entity.Attributes[Fields.msdyn_parameter8value] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter9name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter9name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter9name); }
			set { Entity.Attributes[Fields.msdyn_parameter9name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 1024</para>
		/// <para>parameter9value</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_parameter9value
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_parameter9value); }
			set { Entity.Attributes[Fields.msdyn_parameter9value] = value; }
		}

		/// <summary>
		/// <para>Boolean</para>
		/// <para>Return Inline Count</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_returninlinecount
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_returninlinecount); }
			set { Entity.Attributes[Fields.msdyn_returninlinecount] = value; }
		}

		/// <summary>
		/// <para>Amount of time to wait, in seconds, before timing out an OData v4 request.</para>
		/// <para>Integer - MinValue: 0 - MaxValue: 120</para>
		/// <para>Timeout</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyn_timeout
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyn_timeout); }
			set { Entity.Attributes[Fields.msdyn_timeout] = value; }
		}

		/// <summary>
		/// <para>URL of the OData v4 web service endpoint this data source will target.</para>
		/// <para>Required - String - MaxLength: 1024</para>
		/// <para>URL</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_uri
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_uri); }
			set { Entity.Attributes[Fields.msdyn_uri] = value; }
		}
	}
}
