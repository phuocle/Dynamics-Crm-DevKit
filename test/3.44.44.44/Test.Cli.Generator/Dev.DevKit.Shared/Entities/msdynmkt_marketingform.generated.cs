//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:39
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Deleted = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted Unpublished</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Deleted_Unpublished = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Published</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Published = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Unpublished</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Unpublished = 1
	}
	public enum msdynmkt_createcontact
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: No</para>
		/// <para><strong>Value</strong>: 810,180,001</para>
		/// </summary>
		No = 810_180_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Yes</para>
		/// <para><strong>Value</strong>: 810,180,000</para>
		/// </summary>
		Yes = 810_180_000
	}
	public enum msdynmkt_createlead
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: No</para>
		/// <para><strong>Value</strong>: 810,180,001</para>
		/// </summary>
		No = 810_180_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Yes</para>
		/// <para><strong>Value</strong>: 810,180,000</para>
		/// </summary>
		Yes = 810_180_000
	}
	public enum msdynmkt_handlingduplicatecontacts
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Always create new contact</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Always_create_new_contact = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Use a rule to match an existing contact</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Use_a_rule_to_match_an_existing_contact = 100_000_000
	}
	public enum msdynmkt_handlingduplicateleads
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Always create new lead</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Always_create_new_lead = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Use a rule to match an existing lead</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Use_a_rule_to_match_an_existing_lead = 100_000_000
	}
	public enum msdynmkt_marketingformtype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Marketing form</para>
		/// <para><strong>Value</strong>: 534,120,000</para>
		/// </summary>
		Marketing_form = 534_120_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Registration form</para>
		/// <para><strong>Value</strong>: 534,120,001</para>
		/// </summary>
		Registration_form = 534_120_001
	}
	public enum msdynmkt_portalpublishingstatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Failed</para>
		/// <para><strong>Value</strong>: 534,120,003</para>
		/// </summary>
		Failed = 534_120_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: NotStarted</para>
		/// <para><strong>Value</strong>: 534,120,001</para>
		/// </summary>
		NotStarted = 534_120_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Publishing</para>
		/// <para><strong>Value</strong>: 534,120,002</para>
		/// </summary>
		Publishing = 534_120_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Succeeded</para>
		/// <para><strong>Value</strong>: 534,120,004</para>
		/// </summary>
		Succeeded = 534_120_004
	}
	public enum msdynmkt_standalonepublishstatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Failed</para>
		/// <para><strong>Value</strong>: 534,120,003</para>
		/// </summary>
		Failed = 534_120_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: InProgress</para>
		/// <para><strong>Value</strong>: 534,120,002</para>
		/// </summary>
		InProgress = 534_120_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: NotStarted</para>
		/// <para><strong>Value</strong>: 534,120,001</para>
		/// </summary>
		NotStarted = 534_120_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Succeeded</para>
		/// <para><strong>Value</strong>: 534,120,004</para>
		/// </summary>
		Succeeded = 534_120_004
	}
	public enum msdynmkt_updatecontact
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: No</para>
		/// <para><strong>Value</strong>: 810,180,001</para>
		/// </summary>
		No = 810_180_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Yes</para>
		/// <para><strong>Value</strong>: 810,180,000</para>
		/// </summary>
		Yes = 810_180_000
	}
	public enum msdynmkt_updatelead
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: No</para>
		/// <para><strong>Value</strong>: 810,180,001</para>
		/// </summary>
		No = 810_180_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Yes</para>
		/// <para><strong>Value</strong>: 810,180,000</para>
		/// </summary>
		Yes = 810_180_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Draft</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Draft = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Live</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Live = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Live, Editing</para>
		/// <para><strong>Value</strong>: 3</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Live_Editing = 3
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdynmkt_marketingform : EntityBase
	{
		public struct Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsManaged = "ismanaged";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdynmkt_compliancesettings4id = "msdynmkt_compliancesettings4id";
			public const string msdynmkt_conditionalcontent = "msdynmkt_conditionalcontent";
			public const string msdynmkt_contactmatchingrule = "msdynmkt_contactmatchingrule";
			public const string msdynmkt_createcontact = "msdynmkt_createcontact";
			public const string msdynmkt_createlead = "msdynmkt_createlead";
			public const string msdynmkt_createnewparentcontactonnomatch = "msdynmkt_createnewparentcontactonnomatch";
			public const string msdynmkt_designerhtml = "msdynmkt_designerhtml";
			public const string msdynmkt_doubleoptintogglemodifiedby = "msdynmkt_doubleoptintogglemodifiedby";
			public const string msdynmkt_doubleoptintogglemodifiedon = "msdynmkt_doubleoptintogglemodifiedon";
			public const string msdynmkt_errormessage = "msdynmkt_errormessage";
			public const string msdynmkt_formhtml = "msdynmkt_formhtml";
			public const string msdynmkt_handlingduplicatecontacts = "msdynmkt_handlingduplicatecontacts";
			public const string msdynmkt_handlingduplicateleads = "msdynmkt_handlingduplicateleads";
			public const string msdynmkt_isdoiforciblydisabled = "msdynmkt_isdoiforciblydisabled";
			public const string msdynmkt_leadmatchingrule = "msdynmkt_leadmatchingrule";
			public const string msdynmkt_linkleadtoparentcontact = "msdynmkt_linkleadtoparentcontact";
			public const string msdynmkt_marketingformId = "msdynmkt_marketingformid";
			public const string msdynmkt_marketingformtemplateid = "msdynmkt_marketingformtemplateid";
			public const string msdynmkt_marketingformtype = "msdynmkt_marketingformtype";
			public const string msdynmkt_matchingstrategyid = "msdynmkt_matchingstrategyid";
			public const string msdynmkt_name = "msdynmkt_name";
			public const string msdynmkt_parentcontactmatchingstrategyid = "msdynmkt_parentcontactmatchingstrategyid";
			public const string msdynmkt_placeholders = "msdynmkt_placeholders";
			public const string msdynmkt_portalpublishingstatus = "msdynmkt_portalpublishingstatus";
			public const string msdynmkt_portalurl = "msdynmkt_portalurl";
			public const string msdynmkt_prefillfields = "msdynmkt_prefillfields";
			public const string msdynmkt_redirectenabled = "msdynmkt_redirectenabled";
			public const string msdynmkt_redirecturl = "msdynmkt_redirecturl";
			public const string msdynmkt_standalonehtml = "msdynmkt_standalonehtml";
			public const string msdynmkt_standalonepublishstatus = "msdynmkt_standalonepublishstatus";
			public const string msdynmkt_successmessage = "msdynmkt_successmessage";
			public const string msdynmkt_targetaudience = "msdynmkt_targetaudience";
			public const string msdynmkt_targetentity = "msdynmkt_targetentity";
			public const string msdynmkt_uniquename = "msdynmkt_uniquename";
			public const string msdynmkt_updatecontact = "msdynmkt_updatecontact";
			public const string msdynmkt_updatelead = "msdynmkt_updatelead";
			public const string msdynmkt_updateparentcontact = "msdynmkt_updateparentcontact";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdynmkt_marketingform";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11355;
		public const string EntityCollectionSchemaName = "msdynmkt_marketingforms";
		public const string EntityDisplayCollectionName = "Forms";
		public const string DisplayName = "Form";
		public const string EntitySetName = "msdynmkt_marketingforms";
		public const string EntityLogicalCollectionName = "msdynmkt_marketingforms";
		public const string EntityPrimaryIdAttribute = "msdynmkt_marketingformid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdynmkt_name";
		public const string EntitySchemaName = "msdynmkt_marketingform";
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(Guid msdynmkt_marketingformId)
		{
			Entity = new Entity(EntityLogicalName, msdynmkt_marketingformId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_marketingform"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_marketingform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_marketingform(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_marketingform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_marketingform(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_marketingform(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Row id unique</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ComponentIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ComponentIdUnique); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Component State</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.ComponentState"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.ComponentState)value.Value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is Managed</para>
		/// <para><strong>Description</strong>: Indicates whether the solution component is part of a managed solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Managed</strong>]: true - [<strong>Unmanaged</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Unmanaged</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Compliance profile</para>
		/// <para><strong>Description</strong>: Unique identifier for Compliance profile associated with Form.</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_compliancesettings4"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_compliancesettings4id
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_compliancesettings4id); }
			set { Entity.Attributes[Fields.msdynmkt_compliancesettings4id] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Conditional Content</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 500,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_conditionalcontent
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_conditionalcontent); }
			set { Entity.Attributes[Fields.msdynmkt_conditionalcontent] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Contact matching rule</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_matchingstrategy"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_contactmatchingrule
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_contactmatchingrule); }
			set { Entity.Attributes[Fields.msdynmkt_contactmatchingrule] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Create a new contact</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createcontact"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createcontact.Yes"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createcontact? msdynmkt_createcontact
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_createcontact);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createcontact)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_createcontact] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_createcontact] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Create a new lead</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createlead"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createlead.Yes"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createlead? msdynmkt_createlead
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_createlead);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_createlead)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_createlead] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_createlead] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Create a new contact if there was no match to an existing one</para>
		/// <para><strong>Description</strong>: When selected we&apos;ll try to create a new contact if there was no match to an existing one</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_createnewparentcontactonnomatch
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_createnewparentcontactonnomatch); }
			set { Entity.Attributes[Fields.msdynmkt_createnewparentcontactonnomatch] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Designer HTML</para>
		/// <para><strong>Description</strong>: Marked-up HTML used by Form Editor</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_designerhtml
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_designerhtml); }
			set { Entity.Attributes[Fields.msdynmkt_designerhtml] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Double Opt-In Override Toggle Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the Is Double Opt-In Forcibly Disabled column.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_doubleoptintogglemodifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_doubleoptintogglemodifiedby); }
			set { Entity.Attributes[Fields.msdynmkt_doubleoptintogglemodifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Double Opt-In Override Toggle Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the Is Double Opt-In Forcibly Disabled column was modified.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdynmkt_doubleoptintogglemodifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdynmkt_doubleoptintogglemodifiedon); }
			set { Entity.Attributes[Fields.msdynmkt_doubleoptintogglemodifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Error message</para>
		/// <para><strong>Description</strong>: Error message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_errormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_errormessage); }
			set { Entity.Attributes[Fields.msdynmkt_errormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form HTML</para>
		/// <para><strong>Description</strong>: Finilized HTML served to C2</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_formhtml
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_formhtml); }
			set { Entity.Attributes[Fields.msdynmkt_formhtml] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Handling duplicate contacts</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicatecontacts"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicatecontacts.Use_a_rule_to_match_an_existing_contact"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicatecontacts? msdynmkt_handlingduplicatecontacts
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_handlingduplicatecontacts);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicatecontacts)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_handlingduplicatecontacts] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_handlingduplicatecontacts] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Handling duplicate leads</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicateleads"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicateleads.Use_a_rule_to_match_an_existing_lead"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicateleads? msdynmkt_handlingduplicateleads
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_handlingduplicateleads);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_handlingduplicateleads)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_handlingduplicateleads] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_handlingduplicateleads] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is Double Opt-In Forcibly Disabled</para>
		/// <para><strong>Description</strong>: If yes, Double Opt-In will be disabled for this marketing form, even if the form&apos;s compliance profile has Double Opt-In enabled.</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_isdoiforciblydisabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_isdoiforciblydisabled); }
			set { Entity.Attributes[Fields.msdynmkt_isdoiforciblydisabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lead matching rule</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_matchingstrategy"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_leadmatchingrule
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_leadmatchingrule); }
			set { Entity.Attributes[Fields.msdynmkt_leadmatchingrule] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Link lead to parent contact</para>
		/// <para><strong>Description</strong>: When selected we&apos;ll try to find a parent contact for a lead</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_linkleadtoparentcontact
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_linkleadtoparentcontact); }
			set { Entity.Attributes[Fields.msdynmkt_linkleadtoparentcontact] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form ID</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdynmkt_marketingformId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdynmkt_marketingformId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form template</para>
		/// <para><strong>Description</strong>: Form template</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_marketingformtemplate"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_marketingformtemplateid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_marketingformtemplateid); }
			set { Entity.Attributes[Fields.msdynmkt_marketingformtemplateid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Marketing form type</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_marketingformtype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_marketingformtype.Marketing_form"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_marketingformtype? msdynmkt_marketingformtype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_marketingformtype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_marketingformtype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_marketingformtype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_marketingformtype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Matching Rule</para>
		/// <para><strong>Description</strong>: Matching Strategy associated with Form.</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_matchingstrategy"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_matchingstrategyid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_matchingstrategyid); }
			set { Entity.Attributes[Fields.msdynmkt_matchingstrategyid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: Name of the Form</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_name); }
			set { Entity.Attributes[Fields.msdynmkt_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: How to match existing contact</para>
		/// <para><strong>Description</strong>: When selected it specified how to match existing contact</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_matchingstrategy"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_parentcontactmatchingstrategyid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_parentcontactmatchingstrategyid); }
			set { Entity.Attributes[Fields.msdynmkt_parentcontactmatchingstrategyid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Placeholders</para>
		/// <para><strong>Description</strong>: Placeholders</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 500,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_placeholders
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_placeholders); }
			set { Entity.Attributes[Fields.msdynmkt_placeholders] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: (Deprecated) PortalPublishingStatus</para>
		/// <para><strong>Description</strong>: (Deprecated) PortalPublishingStatus - use standalonepublishstatus instead</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_portalpublishingstatus"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_portalpublishingstatus.NotStarted"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_portalpublishingstatus? msdynmkt_portalpublishingstatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_portalpublishingstatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_portalpublishingstatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_portalpublishingstatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_portalpublishingstatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: (Deprecated) Portal Url</para>
		/// <para><strong>Description</strong>: (Deprecated) Portal Url</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_portalurl
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_portalurl); }
			set { Entity.Attributes[Fields.msdynmkt_portalurl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Prefill fields</para>
		/// <para><strong>Description</strong>: If enabled, form fields are prefilled by default.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_prefillfields
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_prefillfields); }
			set { Entity.Attributes[Fields.msdynmkt_prefillfields] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Redirect after submission</para>
		/// <para><strong>Description</strong>: Redirect after submission</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_redirectenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_redirectenabled); }
			set { Entity.Attributes[Fields.msdynmkt_redirectenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Redirect URL</para>
		/// <para><strong>Description</strong>: Redirect URL</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_redirecturl
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_redirecturl); }
			set { Entity.Attributes[Fields.msdynmkt_redirecturl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Standalone page HTML</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_standalonehtml
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_standalonehtml); }
			set { Entity.Attributes[Fields.msdynmkt_standalonehtml] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Standalone page publish status</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_standalonepublishstatus"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_standalonepublishstatus? msdynmkt_standalonepublishstatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_standalonepublishstatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_standalonepublishstatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_standalonepublishstatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_standalonepublishstatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thank you message</para>
		/// <para><strong>Description</strong>: Thank you message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_successmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_successmessage); }
			set { Entity.Attributes[Fields.msdynmkt_successmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target audience</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_formtargetaudience"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_targetaudience
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_targetaudience); }
			set { Entity.Attributes[Fields.msdynmkt_targetaudience] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Audience</para>
		/// <para><strong>Description</strong>: Audience</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_targetentity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_targetentity); }
			set { Entity.Attributes[Fields.msdynmkt_targetentity] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Unique Name</para>
		/// <para><strong>Description</strong>: Unique Name for the entity.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 128</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_uniquename
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_uniquename); }
			set { Entity.Attributes[Fields.msdynmkt_uniquename] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Update matched contact</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatecontact"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatecontact.Yes"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatecontact? msdynmkt_updatecontact
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_updatecontact);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatecontact)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_updatecontact] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_updatecontact] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Update matched lead</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatelead"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatelead.Yes"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatelead? msdynmkt_updatelead
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_updatelead);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.msdynmkt_updatelead)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_updatelead] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_updatelead] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Update parent contact with submitted data</para>
		/// <para><strong>Description</strong>: When selected we&apos;ll try to update parent contact with submitted data</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_updateparentcontact
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_updateparentcontact); }
			set { Entity.Attributes[Fields.msdynmkt_updateparentcontact] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Overwrite Time</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner Id</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Business Unit</para>
		/// <para><strong>Description</strong>: Unique identifier for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Team</para>
		/// <para><strong>Description</strong>: Unique identifier for the team that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning User</para>
		/// <para><strong>Description</strong>: Unique identifier for the user that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: Unique identifier of the associated solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Form</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Form</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_marketingformOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Zone Rule Version Number</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC Conversion Time Zone Code</para>
		/// <para><strong>Description</strong>: Time zone code that was in use when the record was created.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}