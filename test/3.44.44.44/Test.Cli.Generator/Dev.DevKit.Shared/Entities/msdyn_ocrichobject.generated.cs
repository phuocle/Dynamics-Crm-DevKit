//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:48:39
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Deleted = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted Unpublished</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Deleted_Unpublished = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Published</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Published = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Unpublished</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Unpublished = 1
	}
	public enum msdyn_locale
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: ar-SA</para>
		/// <para><strong>Value</strong>: 1,025</para>
		/// </summary>
		ar_SA = 1_025,
		/// <summary>
		/// <para><strong>Display Name</strong>: bg-BG</para>
		/// <para><strong>Value</strong>: 1,026</para>
		/// </summary>
		bg_BG = 1_026,
		/// <summary>
		/// <para><strong>Display Name</strong>: ca-ES</para>
		/// <para><strong>Value</strong>: 1,027</para>
		/// </summary>
		ca_ES = 1_027,
		/// <summary>
		/// <para><strong>Display Name</strong>: cs-CZ</para>
		/// <para><strong>Value</strong>: 1,029</para>
		/// </summary>
		cs_CZ = 1_029,
		/// <summary>
		/// <para><strong>Display Name</strong>: da-DK</para>
		/// <para><strong>Value</strong>: 1,030</para>
		/// </summary>
		da_DK = 1_030,
		/// <summary>
		/// <para><strong>Display Name</strong>: de-DE</para>
		/// <para><strong>Value</strong>: 1,031</para>
		/// </summary>
		de_DE = 1_031,
		/// <summary>
		/// <para><strong>Display Name</strong>: el-GR</para>
		/// <para><strong>Value</strong>: 1,032</para>
		/// </summary>
		el_GR = 1_032,
		/// <summary>
		/// <para><strong>Display Name</strong>: en-US</para>
		/// <para><strong>Value</strong>: 1,033</para>
		/// </summary>
		en_US = 1_033,
		/// <summary>
		/// <para><strong>Display Name</strong>: es-ES</para>
		/// <para><strong>Value</strong>: 3,082</para>
		/// </summary>
		es_ES = 3_082,
		/// <summary>
		/// <para><strong>Display Name</strong>: et-EE</para>
		/// <para><strong>Value</strong>: 1,061</para>
		/// </summary>
		et_EE = 1_061,
		/// <summary>
		/// <para><strong>Display Name</strong>: eu-ES</para>
		/// <para><strong>Value</strong>: 1,069</para>
		/// </summary>
		eu_ES = 1_069,
		/// <summary>
		/// <para><strong>Display Name</strong>: fi-FI</para>
		/// <para><strong>Value</strong>: 1,035</para>
		/// </summary>
		fi_FI = 1_035,
		/// <summary>
		/// <para><strong>Display Name</strong>: fr-FR</para>
		/// <para><strong>Value</strong>: 1,036</para>
		/// </summary>
		fr_FR = 1_036,
		/// <summary>
		/// <para><strong>Display Name</strong>: gl-ES</para>
		/// <para><strong>Value</strong>: 1,110</para>
		/// </summary>
		gl_ES = 1_110,
		/// <summary>
		/// <para><strong>Display Name</strong>: he-IL</para>
		/// <para><strong>Value</strong>: 1,037</para>
		/// </summary>
		he_IL = 1_037,
		/// <summary>
		/// <para><strong>Display Name</strong>: hi-IN</para>
		/// <para><strong>Value</strong>: 1,081</para>
		/// </summary>
		hi_IN = 1_081,
		/// <summary>
		/// <para><strong>Display Name</strong>: hr-HR</para>
		/// <para><strong>Value</strong>: 1,050</para>
		/// </summary>
		hr_HR = 1_050,
		/// <summary>
		/// <para><strong>Display Name</strong>: hu-HU</para>
		/// <para><strong>Value</strong>: 1,038</para>
		/// </summary>
		hu_HU = 1_038,
		/// <summary>
		/// <para><strong>Display Name</strong>: id-ID</para>
		/// <para><strong>Value</strong>: 1,057</para>
		/// </summary>
		id_ID = 1_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: it-IT</para>
		/// <para><strong>Value</strong>: 1,040</para>
		/// </summary>
		it_IT = 1_040,
		/// <summary>
		/// <para><strong>Display Name</strong>: ja-JP</para>
		/// <para><strong>Value</strong>: 1,041</para>
		/// </summary>
		ja_JP = 1_041,
		/// <summary>
		/// <para><strong>Display Name</strong>: kk-KZ</para>
		/// <para><strong>Value</strong>: 1,087</para>
		/// </summary>
		kk_KZ = 1_087,
		/// <summary>
		/// <para><strong>Display Name</strong>: ko-KR</para>
		/// <para><strong>Value</strong>: 1,042</para>
		/// </summary>
		ko_KR = 1_042,
		/// <summary>
		/// <para><strong>Display Name</strong>: lt-LT</para>
		/// <para><strong>Value</strong>: 1,063</para>
		/// </summary>
		lt_LT = 1_063,
		/// <summary>
		/// <para><strong>Display Name</strong>: lv-LV</para>
		/// <para><strong>Value</strong>: 1,062</para>
		/// </summary>
		lv_LV = 1_062,
		/// <summary>
		/// <para><strong>Display Name</strong>: ms-MY</para>
		/// <para><strong>Value</strong>: 1,086</para>
		/// </summary>
		ms_MY = 1_086,
		/// <summary>
		/// <para><strong>Display Name</strong>: nb-NO</para>
		/// <para><strong>Value</strong>: 1,044</para>
		/// </summary>
		nb_NO = 1_044,
		/// <summary>
		/// <para><strong>Display Name</strong>: nl-NL</para>
		/// <para><strong>Value</strong>: 1,043</para>
		/// </summary>
		nl_NL = 1_043,
		/// <summary>
		/// <para><strong>Display Name</strong>: pl-PL</para>
		/// <para><strong>Value</strong>: 1,045</para>
		/// </summary>
		pl_PL = 1_045,
		/// <summary>
		/// <para><strong>Display Name</strong>: pt-BR</para>
		/// <para><strong>Value</strong>: 1,046</para>
		/// </summary>
		pt_BR = 1_046,
		/// <summary>
		/// <para><strong>Display Name</strong>: pt-PT</para>
		/// <para><strong>Value</strong>: 2,070</para>
		/// </summary>
		pt_PT = 2_070,
		/// <summary>
		/// <para><strong>Display Name</strong>: ro-RO</para>
		/// <para><strong>Value</strong>: 1,048</para>
		/// </summary>
		ro_RO = 1_048,
		/// <summary>
		/// <para><strong>Display Name</strong>: ru-RU</para>
		/// <para><strong>Value</strong>: 1,049</para>
		/// </summary>
		ru_RU = 1_049,
		/// <summary>
		/// <para><strong>Display Name</strong>: sk-SK</para>
		/// <para><strong>Value</strong>: 1,051</para>
		/// </summary>
		sk_SK = 1_051,
		/// <summary>
		/// <para><strong>Display Name</strong>: sl-SI</para>
		/// <para><strong>Value</strong>: 1,060</para>
		/// </summary>
		sl_SI = 1_060,
		/// <summary>
		/// <para><strong>Display Name</strong>: sr-Cyrl-CS</para>
		/// <para><strong>Value</strong>: 3,098</para>
		/// </summary>
		sr_Cyrl_CS = 3_098,
		/// <summary>
		/// <para><strong>Display Name</strong>: sr-Latn-CS</para>
		/// <para><strong>Value</strong>: 2,074</para>
		/// </summary>
		sr_Latn_CS = 2_074,
		/// <summary>
		/// <para><strong>Display Name</strong>: sv-SE</para>
		/// <para><strong>Value</strong>: 1,053</para>
		/// </summary>
		sv_SE = 1_053,
		/// <summary>
		/// <para><strong>Display Name</strong>: th-TH</para>
		/// <para><strong>Value</strong>: 1,054</para>
		/// </summary>
		th_TH = 1_054,
		/// <summary>
		/// <para><strong>Display Name</strong>: tr-TR</para>
		/// <para><strong>Value</strong>: 1,055</para>
		/// </summary>
		tr_TR = 1_055,
		/// <summary>
		/// <para><strong>Display Name</strong>: uk-UA</para>
		/// <para><strong>Value</strong>: 1,058</para>
		/// </summary>
		uk_UA = 1_058,
		/// <summary>
		/// <para><strong>Display Name</strong>: vi-VN</para>
		/// <para><strong>Value</strong>: 1,066</para>
		/// </summary>
		vi_VN = 1_066,
		/// <summary>
		/// <para><strong>Display Name</strong>: zh-CN</para>
		/// <para><strong>Value</strong>: 2,052</para>
		/// </summary>
		zh_CN = 2_052,
		/// <summary>
		/// <para><strong>Display Name</strong>: zh-HK</para>
		/// <para><strong>Value</strong>: 3,076</para>
		/// </summary>
		zh_HK = 3_076,
		/// <summary>
		/// <para><strong>Display Name</strong>: zh-TW</para>
		/// <para><strong>Value</strong>: 1,028</para>
		/// </summary>
		zh_TW = 1_028
	}
	public enum msdyn_ocrichobjecttype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Apple Pay</para>
		/// <para><strong>Value</strong>: 192,350,006</para>
		/// </summary>
		Apple_Pay = 192_350_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Authentication</para>
		/// <para><strong>Value</strong>: 192,350,007</para>
		/// </summary>
		Authentication = 192_350_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Custom JSON</para>
		/// <para><strong>Value</strong>: 192,350,004</para>
		/// </summary>
		Custom_JSON = 192_350_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Forms</para>
		/// <para><strong>Value</strong>: 192,350,009</para>
		/// </summary>
		Forms = 192_350_009,
		/// <summary>
		/// <para><strong>Display Name</strong>: List Picker</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		List_Picker = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Suggested Reply</para>
		/// <para><strong>Value</strong>: 192,350,005</para>
		/// </summary>
		Suggested_Reply = 192_350_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Picker</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Time_Picker = 192_350_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Video Rich Link</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Video_Rich_Link = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Website Rich Link</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Website_Rich_Link = 192_350_000
	}
	public enum msdyn_streamsource
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Apple Messages for Business</para>
		/// <para><strong>Value</strong>: 192,450,000</para>
		/// </summary>
		Apple_Messages_for_Business = 192_450_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Co-browse</para>
		/// <para><strong>Value</strong>: 192,390,000</para>
		/// </summary>
		Co_browse = 192_390_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Custom</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Custom = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Entity Records</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Entity_Records = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Facebook</para>
		/// <para><strong>Value</strong>: 192,330,000</para>
		/// </summary>
		Facebook = 192_330_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Google's Business Messages</para>
		/// <para><strong>Value</strong>: 192,450,001</para>
		/// </summary>
		Googles_Business_Messages = 192_450_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: LINE</para>
		/// <para><strong>Value</strong>: 192,310,000</para>
		/// </summary>
		LINE = 192_310_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Live chat</para>
		/// <para><strong>Value</strong>: 192,360,000</para>
		/// </summary>
		Live_chat = 192_360_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Microsoft Teams</para>
		/// <para><strong>Value</strong>: 19,241,000</para>
		/// </summary>
		Microsoft_Teams = 19_241_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Screen sharing</para>
		/// <para><strong>Value</strong>: 192,400,000</para>
		/// </summary>
		Screen_sharing = 192_400_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: SMS</para>
		/// <para><strong>Value</strong>: 192,340,000</para>
		/// </summary>
		SMS = 192_340_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Twitter</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Twitter = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Video</para>
		/// <para><strong>Value</strong>: 192,380,000</para>
		/// </summary>
		Video = 192_380_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Voice</para>
		/// <para><strong>Value</strong>: 192,370,000</para>
		/// </summary>
		Voice = 192_370_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Voice call</para>
		/// <para><strong>Value</strong>: 192,440,000</para>
		/// </summary>
		Voice_call = 192_440_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: WeChat</para>
		/// <para><strong>Value</strong>: 192,320,000</para>
		/// </summary>
		WeChat = 192_320_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: WhatsApp</para>
		/// <para><strong>Value</strong>: 192,300,000</para>
		/// </summary>
		WhatsApp = 192_300_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_ocrichobject : EntityBase
	{
		public struct Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsManaged = "ismanaged";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_allowagenttoedit = "msdyn_allowagenttoedit";
			public const string msdyn_locale = "msdyn_locale";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_objectjson = "msdyn_objectjson";
			public const string msdyn_objectjsonfile = "msdyn_objectjsonfile";
			public const string msdyn_objectjsonfile_name = "msdyn_objectjsonfile_name";
			public const string msdyn_ocrichobjectId = "msdyn_ocrichobjectid";
			public const string msdyn_ocrichobjecttype = "msdyn_ocrichobjecttype";
			public const string msdyn_streamsource = "msdyn_streamsource";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyn_ocrichobject";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10702;
		public const string EntityCollectionSchemaName = "msdyn_ocrichobjects";
		public const string EntityDisplayCollectionName = "Rich messages";
		public const string DisplayName = "Rich message";
		public const string EntitySetName = "msdyn_ocrichobjects";
		public const string EntityLogicalCollectionName = "msdyn_ocrichobjects";
		public const string EntityPrimaryIdAttribute = "msdyn_ocrichobjectid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_name";
		public const string EntitySchemaName = "msdyn_ocrichobject";
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Guid msdyn_ocrichobjectId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_ocrichobjectId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocrichobject"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocrichobject"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_ocrichobject(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocrichobject"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_ocrichobject(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocrichobject(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Row id unique</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ComponentIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ComponentIdUnique); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Component State</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.ComponentState"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.ComponentState)value.Value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is Managed</para>
		/// <para><strong>Description</strong>: Indicates whether the solution component is part of a managed solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Managed</strong>]: true - [<strong>Unmanaged</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Unmanaged</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Indicates if the rich message can be edited by the agent</para>
		/// <para><strong>Description</strong>: Indicates if the rich message can be edited by the agent</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_allowagenttoedit
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_allowagenttoedit); }
			set { Entity.Attributes[Fields.msdyn_allowagenttoedit] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Rich message Locale</para>
		/// <para><strong>Description</strong>: The locale of a rich message</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_locale"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_locale? msdyn_locale
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_locale);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_locale)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_locale] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_locale] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Rich message json</para>
		/// <para><strong>Description</strong>: Rich message json</para>
		/// <para>Required - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 9,999</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_objectjson
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_objectjson); }
			set { Entity.Attributes[Fields.msdyn_objectjson] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Object Json file</para>
		/// <para><strong>Description</strong>: Use this field to store Object Json file to the system</para>
		/// <para><strong>ReadOnly</strong> - <strong>Virtual</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_objectjsonfile_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_objectjsonfile_name); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Identifies a rich message instance</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_ocrichobjectId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_ocrichobjectId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Rich message type</para>
		/// <para><strong>Description</strong>: The rich message type</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_ocrichobjecttype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_ocrichobjecttype? msdyn_ocrichobjecttype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_ocrichobjecttype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_ocrichobjecttype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_ocrichobjecttype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_ocrichobjecttype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Channel Type</para>
		/// <para><strong>Description</strong>: The channel to which this rich message is attached</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_streamsource"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_streamsource? msdyn_streamsource
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_streamsource);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.msdyn_streamsource)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_streamsource] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_streamsource] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Overwrite Time</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner Id</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Business Unit</para>
		/// <para><strong>Description</strong>: Unique identifier for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Team</para>
		/// <para><strong>Description</strong>: Unique identifier for the team that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning User</para>
		/// <para><strong>Description</strong>: Unique identifier for the user that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: Unique identifier of the associated solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Line Channel</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the rich message</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocrichobjectOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Zone Rule Version Number</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC Conversion Time Zone Code</para>
		/// <para><strong>Description</strong>: Time zone code that was in use when the record was created.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}