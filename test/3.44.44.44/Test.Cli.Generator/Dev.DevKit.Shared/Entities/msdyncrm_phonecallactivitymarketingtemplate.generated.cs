//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:36
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets
{
	public enum msdyncrm_prioritycode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: High</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		High = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Low</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Low = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Normal</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Normal = 1
	}
	public enum msdyncrm_scheduletype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Delay (in days)</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Delay_in_days = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Fixed date</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Fixed_date = 0
	}
	public enum msdyncrm_starttimehour
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: 00</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		_00 = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: 01</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		_01 = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: 02</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		_02 = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: 03</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		_03 = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: 04</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		_04 = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: 05</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		_05 = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: 06</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		_06 = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: 07</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		_07 = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: 08</para>
		/// <para><strong>Value</strong>: 8</para>
		/// </summary>
		_08 = 8,
		/// <summary>
		/// <para><strong>Display Name</strong>: 09</para>
		/// <para><strong>Value</strong>: 9</para>
		/// </summary>
		_09 = 9,
		/// <summary>
		/// <para><strong>Display Name</strong>: 10</para>
		/// <para><strong>Value</strong>: 10</para>
		/// </summary>
		_10 = 10,
		/// <summary>
		/// <para><strong>Display Name</strong>: 11</para>
		/// <para><strong>Value</strong>: 11</para>
		/// </summary>
		_11 = 11,
		/// <summary>
		/// <para><strong>Display Name</strong>: 12</para>
		/// <para><strong>Value</strong>: 12</para>
		/// </summary>
		_12 = 12,
		/// <summary>
		/// <para><strong>Display Name</strong>: 13</para>
		/// <para><strong>Value</strong>: 13</para>
		/// </summary>
		_13 = 13,
		/// <summary>
		/// <para><strong>Display Name</strong>: 14</para>
		/// <para><strong>Value</strong>: 14</para>
		/// </summary>
		_14 = 14,
		/// <summary>
		/// <para><strong>Display Name</strong>: 15</para>
		/// <para><strong>Value</strong>: 15</para>
		/// </summary>
		_15 = 15,
		/// <summary>
		/// <para><strong>Display Name</strong>: 16</para>
		/// <para><strong>Value</strong>: 16</para>
		/// </summary>
		_16 = 16,
		/// <summary>
		/// <para><strong>Display Name</strong>: 17</para>
		/// <para><strong>Value</strong>: 17</para>
		/// </summary>
		_17 = 17,
		/// <summary>
		/// <para><strong>Display Name</strong>: 18</para>
		/// <para><strong>Value</strong>: 18</para>
		/// </summary>
		_18 = 18,
		/// <summary>
		/// <para><strong>Display Name</strong>: 19</para>
		/// <para><strong>Value</strong>: 19</para>
		/// </summary>
		_19 = 19,
		/// <summary>
		/// <para><strong>Display Name</strong>: 20</para>
		/// <para><strong>Value</strong>: 20</para>
		/// </summary>
		_20 = 20,
		/// <summary>
		/// <para><strong>Display Name</strong>: 21</para>
		/// <para><strong>Value</strong>: 21</para>
		/// </summary>
		_21 = 21,
		/// <summary>
		/// <para><strong>Display Name</strong>: 22</para>
		/// <para><strong>Value</strong>: 22</para>
		/// </summary>
		_22 = 22,
		/// <summary>
		/// <para><strong>Display Name</strong>: 23</para>
		/// <para><strong>Value</strong>: 23</para>
		/// </summary>
		_23 = 23
	}
	public enum msdyncrm_starttimeminute
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: 00</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		_00 = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: 15</para>
		/// <para><strong>Value</strong>: 15</para>
		/// </summary>
		_15 = 15,
		/// <summary>
		/// <para><strong>Display Name</strong>: 30</para>
		/// <para><strong>Value</strong>: 30</para>
		/// </summary>
		_30 = 30,
		/// <summary>
		/// <para><strong>Display Name</strong>: 45</para>
		/// <para><strong>Value</strong>: 45</para>
		/// </summary>
		_45 = 45
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyncrm_phonecallactivitymarketingtemplate : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyncrm_description = "msdyncrm_description";
			public const string msdyncrm_name = "msdyncrm_name";
			public const string msdyncrm_phonecallactivitymarketingtemplateId = "msdyncrm_phonecallactivitymarketingtemplateid";
			public const string msdyncrm_prioritycode = "msdyncrm_prioritycode";
			public const string msdyncrm_scheduleddurationminutes = "msdyncrm_scheduleddurationminutes";
			public const string msdyncrm_scheduletype = "msdyncrm_scheduletype";
			public const string msdyncrm_startdate = "msdyncrm_startdate";
			public const string msdyncrm_startdelay = "msdyncrm_startdelay";
			public const string msdyncrm_starttimehour = "msdyncrm_starttimehour";
			public const string msdyncrm_starttimeminute = "msdyncrm_starttimeminute";
			public const string msdyncrm_subject = "msdyncrm_subject";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyncrm_phonecallactivitymarketingtemplate";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11176;
		public const string EntityCollectionSchemaName = "msdyncrm_phonecallactivitymarketingtemplates";
		public const string EntityDisplayCollectionName = "Phone-call activity marketing templates";
		public const string DisplayName = "Phone-call activity marketing template";
		public const string EntitySetName = "msdyncrm_phonecallactivitymarketingtemplates";
		public const string EntityLogicalCollectionName = "msdyncrm_phonecallactivitymarketingtemplates";
		public const string EntityPrimaryIdAttribute = "msdyncrm_phonecallactivitymarketingtemplateid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyncrm_name";
		public const string EntitySchemaName = "msdyncrm_phonecallactivitymarketingtemplate";
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(Guid msdyncrm_phonecallactivitymarketingtemplateId)
		{
			Entity = new Entity(EntityLogicalName, msdyncrm_phonecallactivitymarketingtemplateId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_phonecallactivitymarketingtemplate"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_phonecallactivitymarketingtemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_phonecallactivitymarketingtemplate(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_phonecallactivitymarketingtemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_phonecallactivitymarketingtemplate(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_phonecallactivitymarketingtemplate(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by</para>
		/// <para><strong>Description</strong>: Indicates the person who created this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created on</para>
		/// <para><strong>Description</strong>: Date and time when the record was created</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who created this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import sequence number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified on</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Description</strong>: Enter additional information to describe the phone call, such as the primary message or the products and services discussed</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_description); }
			set { Entity.Attributes[Fields.msdyncrm_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_name); }
			set { Entity.Attributes[Fields.msdyncrm_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phone-call activity marketing template</para>
		/// <para><strong>Description</strong>: Unique ID for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyncrm_phonecallactivitymarketingtemplateId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyncrm_phonecallactivitymarketingtemplateId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Priority</para>
		/// <para><strong>Description</strong>: Select the priority so that preferred customers or critical issues are handled quickly</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_prioritycode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_prioritycode.Normal"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_prioritycode? msdyncrm_prioritycode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_prioritycode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_prioritycode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_prioritycode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_prioritycode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Duration</para>
		/// <para><strong>Description</strong>: Shows the expected duration of the phone call, in minutes</para>
		/// <para><strong>ReadOnly</strong> - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyncrm_scheduleddurationminutes
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyncrm_scheduleddurationminutes); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Schedule type</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_scheduletype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_scheduletype.Fixed_date"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_scheduletype? msdyncrm_scheduletype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_scheduletype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_scheduletype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_scheduletype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_scheduletype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start date</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: DateOnly - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Date? msdyncrm_startdate
		{
			get
			{
				var dateTime = Entity.GetAttributeValue<DateTime?>(Fields.msdyncrm_startdate);
				if (dateTime == null) return null;
				return dateTime.Value.ToDate();
			}
			set
			{
				if (value.HasValue)
				{
					DateTime dateTime = value.Value.ToDateTime();
					Entity.Attributes[Fields.msdyncrm_startdate] = dateTime;
				}
				else
					Entity.Attributes[Fields.msdyncrm_startdate] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start delay</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyncrm_startdelay
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyncrm_startdelay); }
			set { Entity.Attributes[Fields.msdyncrm_startdelay] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start-time hour</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimehour"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimehour? msdyncrm_starttimehour
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_starttimehour);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimehour)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_starttimehour] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_starttimehour] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start-time minute</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimeminute"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimeminute? msdyncrm_starttimeminute
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_starttimeminute);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.msdyncrm_starttimeminute)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_starttimeminute] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_starttimeminute] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Subject</para>
		/// <para><strong>Description</strong>: Enter a short description about the objective or primary topic of the phone call</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_subject
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_subject); }
			set { Entity.Attributes[Fields.msdyncrm_subject] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record created on</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner ID</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning business unit</para>
		/// <para><strong>Description</strong>: Indicates the business unit that owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning team</para>
		/// <para><strong>Description</strong>: Indicates the team that owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning user</para>
		/// <para><strong>Description</strong>: Indicates the person who owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the phone-call activity marketing template</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the phone-call activity marketing template</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_phonecallactivitymarketingtemplateOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time-zone rule version number</para>
		/// <para><strong>Description</strong>: For internal use only</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC conversion time-zone code</para>
		/// <para><strong>Description</strong>: Time-zone code that was in use when the record was created</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}