//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:36
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets
{
	public enum msdyncrm_format
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Date</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Date = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Date and time</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		Date_and_time = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Email = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phone</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Phone = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Text</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Text = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Text area</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Text_area = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: URL</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		URL = 4
	}
	public enum msdyncrm_marketingformfieldtype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Currency</para>
		/// <para><strong>Value</strong>: 9</para>
		/// </summary>
		Currency = 9,
		/// <summary>
		/// <para><strong>Display Name</strong>: Date and time</para>
		/// <para><strong>Value</strong>: 8</para>
		/// </summary>
		Date_and_time = 8,
		/// <summary>
		/// <para><strong>Display Name</strong>: Decimal number</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		Decimal_number = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: Floating point number</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Floating_point_number = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lookup</para>
		/// <para><strong>Value</strong>: 11</para>
		/// </summary>
		Lookup = 11,
		/// <summary>
		/// <para><strong>Display Name</strong>: Multi-select option set</para>
		/// <para><strong>Value</strong>: 10</para>
		/// </summary>
		Multi_select_option_set = 10,
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple lines of text</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Multiple_lines_of_text = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Option set</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Option_set = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Single line of text</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Single_line_of_text = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Two options</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Two_options = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Whole number</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Whole_number = 5
	}
	public enum msdyncrm_renderas
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Checkbox</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		Checkbox = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: Checkbox list</para>
		/// <para><strong>Value</strong>: 12</para>
		/// </summary>
		Checkbox_list = 12,
		/// <summary>
		/// <para><strong>Display Name</strong>: Date picker</para>
		/// <para><strong>Value</strong>: 10</para>
		/// </summary>
		Date_picker = 10,
		/// <summary>
		/// <para><strong>Display Name</strong>: Date time picker</para>
		/// <para><strong>Value</strong>: 11</para>
		/// </summary>
		Date_time_picker = 11,
		/// <summary>
		/// <para><strong>Display Name</strong>: Drop-down</para>
		/// <para><strong>Value</strong>: 8</para>
		/// </summary>
		Drop_down = 8,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email input</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Email_input = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lookup</para>
		/// <para><strong>Value</strong>: 13</para>
		/// </summary>
		Lookup = 13,
		/// <summary>
		/// <para><strong>Display Name</strong>: Number input</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Number_input = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phone input</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Phone_input = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Radio buttons</para>
		/// <para><strong>Value</strong>: 9</para>
		/// </summary>
		Radio_buttons = 9,
		/// <summary>
		/// <para><strong>Display Name</strong>: Text area</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Text_area = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Text box</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Text_box = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: URL input</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		URL_input = 3
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyncrm_marketingformfield : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyncrm_contactmapping = "msdyncrm_contactmapping";
			public const string msdyncrm_contactmapping_target = "msdyncrm_contactmapping_target";
			public const string msdyncrm_defaultformlabel = "msdyncrm_defaultformlabel";
			public const string msdyncrm_defaultformplaceholder = "msdyncrm_defaultformplaceholder";
			public const string msdyncrm_format = "msdyncrm_format";
			public const string msdyncrm_leadmapping = "msdyncrm_leadmapping";
			public const string msdyncrm_leadmapping_target = "msdyncrm_leadmapping_target";
			public const string msdyncrm_lookup_target = "msdyncrm_lookup_target";
			public const string msdyncrm_marketingformfieldId = "msdyncrm_marketingformfieldid";
			public const string msdyncrm_marketingformfieldtype = "msdyncrm_marketingformfieldtype";
			public const string msdyncrm_marketingprovided = "msdyncrm_marketingprovided";
			public const string msdyncrm_name = "msdyncrm_name";
			public const string msdyncrm_prototype_attribute = "msdyncrm_prototype_attribute";
			public const string msdyncrm_prototype_entity = "msdyncrm_prototype_entity";
			public const string msdyncrm_prototype_target = "msdyncrm_prototype_target";
			public const string msdyncrm_PublicVisibility = "msdyncrm_publicvisibility";
			public const string msdyncrm_renderas = "msdyncrm_renderas";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyncrm_marketingformfield";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11166;
		public const string EntityCollectionSchemaName = "msdyncrm_marketingformfields";
		public const string EntityDisplayCollectionName = "Marketing form fields";
		public const string DisplayName = "Marketing form field";
		public const string EntitySetName = "msdyncrm_marketingformfields";
		public const string EntityLogicalCollectionName = "msdyncrm_marketingformfields";
		public const string EntityPrimaryIdAttribute = "msdyncrm_marketingformfieldid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyncrm_name";
		public const string EntitySchemaName = "msdyncrm_marketingformfield";
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(Guid msdyncrm_marketingformfieldId)
		{
			Entity = new Entity(EntityLogicalName, msdyncrm_marketingformfieldId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_marketingformfield"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_marketingformfield"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_marketingformfield(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_marketingformfield"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_marketingformfield(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_marketingformfield(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by</para>
		/// <para><strong>Description</strong>: Indicates the person who created this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created on</para>
		/// <para><strong>Description</strong>: Date and time when the record was created</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who created this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import sequence number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified on</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Contact mapping</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_contactmapping
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_contactmapping); }
			set { Entity.Attributes[Fields.msdyncrm_contactmapping] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Contact mapping targets</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_contactmapping_target
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_contactmapping_target); }
			set { Entity.Attributes[Fields.msdyncrm_contactmapping_target] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Label</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_defaultformlabel
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_defaultformlabel); }
			set { Entity.Attributes[Fields.msdyncrm_defaultformlabel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Placeholder</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_defaultformplaceholder
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_defaultformplaceholder); }
			set { Entity.Attributes[Fields.msdyncrm_defaultformplaceholder] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Format</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_format"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_format? msdyncrm_format
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_format);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_format)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_format] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_format] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lead mapping</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_leadmapping
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_leadmapping); }
			set { Entity.Attributes[Fields.msdyncrm_leadmapping] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lead mapping targets</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_leadmapping_target
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_leadmapping_target); }
			set { Entity.Attributes[Fields.msdyncrm_leadmapping_target] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lookup targets</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_lookup_target
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_lookup_target); }
			set { Entity.Attributes[Fields.msdyncrm_lookup_target] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Marketing form field</para>
		/// <para><strong>Description</strong>: Unique ID for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyncrm_marketingformfieldId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyncrm_marketingformfieldId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Field type</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_marketingformfieldtype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_marketingformfieldtype? msdyncrm_marketingformfieldtype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_marketingformfieldtype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_marketingformfieldtype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_marketingformfieldtype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_marketingformfieldtype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Marketing Provided</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyncrm_marketingprovided
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyncrm_marketingprovided); }
			set { Entity.Attributes[Fields.msdyncrm_marketingprovided] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_name); }
			set { Entity.Attributes[Fields.msdyncrm_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Unmapped attribute</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_prototype_attribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_prototype_attribute); }
			set { Entity.Attributes[Fields.msdyncrm_prototype_attribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Unmapped entity</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_prototype_entity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_prototype_entity); }
			set { Entity.Attributes[Fields.msdyncrm_prototype_entity] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Unmapped targets</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_prototype_target
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_prototype_target); }
			set { Entity.Attributes[Fields.msdyncrm_prototype_target] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lookup will be visible to public</para>
		/// <para><strong>Description</strong>: I acknowledge the select lookup will be visible to public</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyncrm_PublicVisibility
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyncrm_PublicVisibility); }
			set { Entity.Attributes[Fields.msdyncrm_PublicVisibility] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Rendering control</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_renderas"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_renderas? msdyncrm_renderas
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_renderas);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.msdyncrm_renderas)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_renderas] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_renderas] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record created on</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner ID</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning business unit</para>
		/// <para><strong>Description</strong>: Unique ID for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning team</para>
		/// <para><strong>Description</strong>: Indicates the team that owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning user</para>
		/// <para><strong>Description</strong>: Indicates the person who owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the marketing form field</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the marketing form field</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_marketingformfieldOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time-zone rule version number</para>
		/// <para><strong>Description</strong>: For internal use only</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC conversion time-zone code</para>
		/// <para><strong>Description</strong>: The time-zone code that was in use when the record was created</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}