//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:39
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdynmkt_optimizationdecisionOptionSets
{

}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdynmkt_optimizationdecision : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdynmkt_actionid = "msdynmkt_actionid";
			public const string msdynmkt_customerid = "msdynmkt_customerid";
			public const string msdynmkt_decisionstatus = "msdynmkt_decisionstatus";
			public const string msdynmkt_eventid = "msdynmkt_eventid";
			public const string msdynmkt_journeyid = "msdynmkt_journeyid";
			public const string msdynmkt_journeyrunid = "msdynmkt_journeyrunid";
			public const string msdynmkt_name = "msdynmkt_name";
			public const string msdynmkt_optimizationdecisionId = "msdynmkt_optimizationdecisionid";
			public const string msdynmkt_optimizationversion = "msdynmkt_optimizationversion";
			public const string msdynmkt_selectedactionid = "msdynmkt_selectedactionid";
			public const string msdynmkt_targetentity = "msdynmkt_targetentity";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PartitionId = "partitionid";
			public const string TTLInSeconds = "ttlinseconds";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdynmkt_optimizationdecision";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11297;
		public const string EntityCollectionSchemaName = "msdynmkt_optimizationdecisions";
		public const string EntityDisplayCollectionName = "Optimization Decisions";
		public const string DisplayName = "Optimization Decision";
		public const string EntitySetName = "msdynmkt_optimizationdecisions";
		public const string EntityLogicalCollectionName = "msdynmkt_optimizationdecisions";
		public const string EntityPrimaryIdAttribute = "msdynmkt_optimizationdecisionid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdynmkt_name";
		public const string EntitySchemaName = "msdynmkt_optimizationdecision";
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(Guid msdynmkt_optimizationdecisionId)
		{
			Entity = new Entity(EntityLogicalName, msdynmkt_optimizationdecisionId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_optimizationdecision"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_optimizationdecision"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_optimizationdecision(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_optimizationdecision"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_optimizationdecision(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_optimizationdecision(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Action Id</para>
		/// <para><strong>Description</strong>: This field stores the action id of the optimization card</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_actionid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_actionid); }
			set { Entity.Attributes[Fields.msdynmkt_actionid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: customerid</para>
		/// <para><strong>Description</strong>: C2 customer id for whom optimization decision was made</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_customerid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_customerid); }
			set { Entity.Attributes[Fields.msdynmkt_customerid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Decision Status</para>
		/// <para><strong>Description</strong>: Status of the decision made</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_decisionstatus
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_decisionstatus); }
			set { Entity.Attributes[Fields.msdynmkt_decisionstatus] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Event id</para>
		/// <para><strong>Description</strong>: The event id used for the predict call in the AI service</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_eventid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_eventid); }
			set { Entity.Attributes[Fields.msdynmkt_eventid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Journey Id</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_journeyid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_journeyid); }
			set { Entity.Attributes[Fields.msdynmkt_journeyid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Journey Run Id</para>
		/// <para><strong>Description</strong>: Journey run id for which optimization decision was made</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_journeyrunid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_journeyrunid); }
			set { Entity.Attributes[Fields.msdynmkt_journeyrunid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_name); }
			set { Entity.Attributes[Fields.msdynmkt_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Optimization Decision</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdynmkt_optimizationdecisionId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdynmkt_optimizationdecisionId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Optimization version</para>
		/// <para><strong>Description</strong>: The version of optimization (v1 or v2)</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: 1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdynmkt_optimizationversion
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdynmkt_optimizationversion); }
			set { Entity.Attributes[Fields.msdynmkt_optimizationversion] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Selected Action Id</para>
		/// <para><strong>Description</strong>: Id of the selected action</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_selectedactionid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_selectedactionid); }
			set { Entity.Attributes[Fields.msdynmkt_selectedactionid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target Entity</para>
		/// <para><strong>Description</strong>: Name of entity associated with the target customer for whom the optimization decision is made.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_targetentity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_targetentity); }
			set { Entity.Attributes[Fields.msdynmkt_targetentity] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Partition Id</para>
		/// <para><strong>Description</strong>: Logical partition id. A logical partition consists of a set of records with same partition id.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string PartitionId
		{
			get { return Entity.GetAttributeValue<string>(Fields.PartitionId); }
			set { Entity.Attributes[Fields.PartitionId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time to live</para>
		/// <para><strong>Description</strong>: Time to live in seconds.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: 1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TTLInSeconds
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TTLInSeconds); }
			set { Entity.Attributes[Fields.TTLInSeconds] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}