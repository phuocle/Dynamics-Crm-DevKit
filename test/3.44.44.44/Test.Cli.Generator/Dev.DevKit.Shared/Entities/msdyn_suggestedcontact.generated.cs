//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:34
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_suggestedcontactOptionSets
{

}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_suggestedcontact : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_accountid = "msdyn_accountid";
			public const string msdyn_accountidname = "msdyn_accountidname";
			public const string msdyn_accountname = "msdyn_accountname";
			public const string msdyn_addresscity = "msdyn_addresscity";
			public const string msdyn_addressline1 = "msdyn_addressline1";
			public const string msdyn_addressline2 = "msdyn_addressline2";
			public const string msdyn_addresspostalcode = "msdyn_addresspostalcode";
			public const string msdyn_companyname = "msdyn_companyname";
			public const string msdyn_createdon = "msdyn_createdon";
			public const string msdyn_description = "msdyn_description";
			public const string msdyn_email = "msdyn_email";
			public const string msdyn_firstname = "msdyn_firstname";
			public const string msdyn_fullname = "msdyn_fullname";
			public const string msdyn_jobtitle = "msdyn_jobtitle";
			public const string msdyn_lastname = "msdyn_lastname";
			public const string msdyn_mobilephone = "msdyn_mobilephone";
			public const string msdyn_preferredcontactmethodcode = "msdyn_preferredcontactmethodcode";
			public const string msdyn_suggestedcontactId = "msdyn_suggestedcontactid";
			public const string msdyn_telephone = "msdyn_telephone";
		}
		public const string EntityLogicalName = "msdyn_suggestedcontact";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10557;
		public const string EntityCollectionSchemaName = "msdyn_suggestedcontacts";
		public const string EntityDisplayCollectionName = "Contact Suggestions";
		public const string DisplayName = "Suggested Contact";
		public const string EntitySetName = "msdyn_suggestedcontacts";
		public const string EntityLogicalCollectionName = "msdyn_suggestedcontacts";
		public const string EntityPrimaryIdAttribute = "msdyn_suggestedcontactid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_fullname";
		public const string EntitySchemaName = "msdyn_suggestedcontact";
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(Guid msdyn_suggestedcontactId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_suggestedcontactId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_suggestedcontact"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_suggestedcontact"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_suggestedcontact(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_suggestedcontact"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_suggestedcontact(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_suggestedcontact(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Account Name</para>
		/// <para><strong>Description</strong>: Account Name</para>
		/// <para><strong>Lookup</strong>:</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_accountid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_accountid); }
			set { Entity.Attributes[Fields.msdyn_accountid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Account Name</para>
		/// <para><strong>Description</strong>: Account Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_accountidname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_accountidname); }
			set { Entity.Attributes[Fields.msdyn_accountidname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Account Name</para>
		/// <para><strong>Description</strong>: Account Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_accountname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_accountname); }
			set { Entity.Attributes[Fields.msdyn_accountname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Address City</para>
		/// <para><strong>Description</strong>: Address City</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_addresscity
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_addresscity); }
			set { Entity.Attributes[Fields.msdyn_addresscity] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: AddressLine1</para>
		/// <para><strong>Description</strong>: AddressLine1</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_addressline1
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_addressline1); }
			set { Entity.Attributes[Fields.msdyn_addressline1] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: AddressLine2</para>
		/// <para><strong>Description</strong>: AddressLine2</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_addressline2
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_addressline2); }
			set { Entity.Attributes[Fields.msdyn_addressline2] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Address Postal Code</para>
		/// <para><strong>Description</strong>: Address Postal Code</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_addresspostalcode
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_addresspostalcode); }
			set { Entity.Attributes[Fields.msdyn_addresspostalcode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Company Name</para>
		/// <para><strong>Description</strong>: Company Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_companyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_companyname); }
			set { Entity.Attributes[Fields.msdyn_companyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Date</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdyn_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdyn_createdon); }
			set { Entity.Attributes[Fields.msdyn_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Description</strong>: Description</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_description); }
			set { Entity.Attributes[Fields.msdyn_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email</para>
		/// <para><strong>Description</strong>: Email</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_email
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_email); }
			set { Entity.Attributes[Fields.msdyn_email] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: First Name</para>
		/// <para><strong>Description</strong>: first name</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_firstname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_firstname); }
			set { Entity.Attributes[Fields.msdyn_firstname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Full Name</para>
		/// <para><strong>Description</strong>: Full Name</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 250</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_fullname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_fullname); }
			set { Entity.Attributes[Fields.msdyn_fullname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Job Title</para>
		/// <para><strong>Description</strong>: Job Title</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_jobtitle
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_jobtitle); }
			set { Entity.Attributes[Fields.msdyn_jobtitle] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Last Name</para>
		/// <para><strong>Description</strong>: Last Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_lastname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_lastname); }
			set { Entity.Attributes[Fields.msdyn_lastname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mobile Phone</para>
		/// <para><strong>Description</strong>: Mobile Phone</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_mobilephone
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_mobilephone); }
			set { Entity.Attributes[Fields.msdyn_mobilephone] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Preferred Contact Method Code</para>
		/// <para><strong>Description</strong>: Preferred Contact Method Code</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_preferredcontactmethodcode
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_preferredcontactmethodcode); }
			set { Entity.Attributes[Fields.msdyn_preferredcontactmethodcode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Suggested Contact</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_suggestedcontactId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_suggestedcontactId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Telephone</para>
		/// <para><strong>Description</strong>: Telephone</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_telephone
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_telephone); }
			set { Entity.Attributes[Fields.msdyn_telephone] = value; }
		}
	}
}