//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:42
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webformOptionSets
{
	public enum mspp_progressindicatorposition
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bottom</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Bottom = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Left</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Left = 756_150_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Right</para>
		/// <para><strong>Value</strong>: 756,150,003</para>
		/// </summary>
		Right = 756_150_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Top</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Top = 756_150_000
	}
	public enum mspp_progressindicatortype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Numeric (Step 1 of N)</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Numeric_Step_1_of_N = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Progress Bar</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Progress_Bar = 756_150_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Title</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Title = 756_150_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webform : EntityBase
	{
		public struct Fields
		{
			public const string mspp_authenticationrequired = "mspp_authenticationrequired";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_editexistingrecordpermitted = "mspp_editexistingrecordpermitted";
			public const string mspp_editexpiredmessage = "mspp_editexpiredmessage";
			public const string mspp_editexpiredstatecode = "mspp_editexpiredstatecode";
			public const string mspp_editexpiredstatuscode = "mspp_editexpiredstatuscode";
			public const string mspp_editnotpermittedmessage = "mspp_editnotpermittedmessage";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_multiplerecordsperuserpermitted = "mspp_multiplerecordsperuserpermitted";
			public const string mspp_name = "mspp_name";
			public const string mspp_progressindicatorenabled = "mspp_progressindicatorenabled";
			public const string mspp_progressindicatorignorelaststep = "mspp_progressindicatorignorelaststep";
			public const string mspp_progressindicatorposition = "mspp_progressindicatorposition";
			public const string mspp_progressindicatorprependstepnum = "mspp_progressindicatorprependstepnum";
			public const string mspp_progressindicatortype = "mspp_progressindicatortype";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_savechangeswarningmessage = "mspp_savechangeswarningmessage";
			public const string mspp_savechangeswarningonclose = "mspp_savechangeswarningonclose";
			public const string mspp_startnewsessiononload = "mspp_startnewsessiononload";
			public const string mspp_startstep = "mspp_startstep";
			public const string mspp_webformId = "mspp_webformid";
			public const string mspp_websiteid = "mspp_websiteid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webform";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10335;
		public const string EntityCollectionSchemaName = "mspp_webforms";
		public const string EntityDisplayCollectionName = "Multistep Forms";
		public const string DisplayName = "Multistep Form";
		public const string EntitySetName = "mspp_webforms";
		public const string EntityLogicalCollectionName = "mspp_webforms";
		public const string EntityPrimaryIdAttribute = "mspp_webformid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_webform";
		[DebuggerNonUserCode()]
		public mspp_webform()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(Guid mspp_webformId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webformId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webform(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webform(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Authentication Required</para>
		/// <para><strong>Description</strong>: Redirect to sign in if the user is anonymous.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_authenticationrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_authenticationrequired); }
			set { Entity.Attributes[Fields.mspp_authenticationrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Shows who created the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was created.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Edit Existing Record Permitted</para>
		/// <para><strong>Description</strong>: Determines if an existing record can be edited. This setting is ignored If the form mode on the form step is set to edit mode. Otherwise, an edit form wouldn&apos;t function properly.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Yes</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_editexistingrecordpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_editexistingrecordpermitted); }
			set { Entity.Attributes[Fields.mspp_editexistingrecordpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Edit Expired Message</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editexpiredmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editexpiredmessage); }
			set { Entity.Attributes[Fields.mspp_editexpiredmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Edit Expired State Code</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatecode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatecode); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatecode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Edit Expired Status Code</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatuscode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatuscode); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatuscode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Edit Not Permitted Message</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editnotpermittedmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editnotpermittedmessage); }
			set { Entity.Attributes[Fields.mspp_editnotpermittedmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Shows who last updated the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was modified.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Records Per User Permitted</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Yes</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_multiplerecordsperuserpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_multiplerecordsperuserpermitted); }
			set { Entity.Attributes[Fields.mspp_multiplerecordsperuserpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Enabled</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorenabled); }
			set { Entity.Attributes[Fields.mspp_progressindicatorenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ignore Last Step In Progress Count</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorignorelaststep
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorignorelaststep); }
			set { Entity.Attributes[Fields.mspp_progressindicatorignorelaststep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Position</para>
		/// <para><strong>Description</strong>: Location of the progress indicator relative to the form</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition.Top"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition? mspp_progressindicatorposition
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_progressindicatorposition);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_progressindicatorposition] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_progressindicatorposition] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Prepend Step Number to Step Title</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorprependstepnum
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorprependstepnum); }
			set { Entity.Attributes[Fields.mspp_progressindicatorprependstepnum] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Type</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype.Title"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype? mspp_progressindicatortype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_progressindicatortype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_progressindicatortype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_progressindicatortype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Provisioned Languages</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Save Changes Warning Message</para>
		/// <para><strong>Description</strong>: Default message: Your changes have not been saved. To stay on the page so that you can save your changes, click Cancel.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_savechangeswarningmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_savechangeswarningmessage); }
			set { Entity.Attributes[Fields.mspp_savechangeswarningmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Display Save Changes Warning On Close</para>
		/// <para><strong>Description</strong>: Displays a warning message to the user if they close the browser, or refresh the page, or click the previous button in a multiple step form and they have changes that haven&apos;t been saved.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_savechangeswarningonclose
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_savechangeswarningonclose); }
			set { Entity.Attributes[Fields.mspp_savechangeswarningonclose] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start New Session On Load</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_startnewsessiononload
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_startnewsessiononload); }
			set { Entity.Attributes[Fields.mspp_startnewsessiononload] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Start Step</para>
		/// <para><strong>Description</strong>: Unique identifier for Form Step associated with Multistep Form.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_startstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_startstep); }
			set { Entity.Attributes[Fields.mspp_startstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multistep Form</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webformId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webformId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Website</para>
		/// <para><strong>Description</strong>: Unique identifier for Website entity associated with this record</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_website"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_websiteid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_websiteid); }
			set { Entity.Attributes[Fields.mspp_websiteid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Multistep Form</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Multistep Form</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}