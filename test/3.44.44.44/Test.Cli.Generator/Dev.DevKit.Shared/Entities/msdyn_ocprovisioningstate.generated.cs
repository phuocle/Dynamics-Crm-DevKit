//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:48:39
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets
{
	public enum msdyn_AutomatedCallingStatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Failure</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Failure = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: InProgress</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		InProgress = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: NotTested</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		NotTested = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Success</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Success = 1
	}
	public enum msdyn_gatekeeperstatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 715,240,000</para>
		/// </summary>
		Active = 715_240_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 715,240,001</para>
		/// </summary>
		Inactive = 715_240_001
	}
	public enum msdyn_gatekeeperstatusreason
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deprovisioned</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Deprovisioned = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Error</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Error = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Running</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Running = 0
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deprovisioned</para>
		/// <para><strong>Value</strong>: 192,350,006</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Deprovisioned = 192_350_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Deprovisioning</para>
		/// <para><strong>Value</strong>: 192,350,005</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Deprovisioning = 192_350_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Draft</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Draft = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Error</para>
		/// <para><strong>Value</strong>: 192,350,004</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Error = 192_350_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Processing</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Processing = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Running</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Running = 192_350_003
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_ocprovisioningstate : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_AutomatedCallingStatus = "msdyn_automatedcallingstatus";
			public const string msdyn_communicationprovidersettingid = "msdyn_communicationprovidersettingid";
			public const string msdyn_errormessage = "msdyn_errormessage";
			public const string msdyn_exceptiondetails = "msdyn_exceptiondetails";
			public const string msdyn_gatekeeperstatus = "msdyn_gatekeeperstatus";
			public const string msdyn_gatekeeperstatusreason = "msdyn_gatekeeperstatusreason";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_ocfbapplicationid = "msdyn_ocfbapplicationid";
			public const string msdyn_ocfbpageid = "msdyn_ocfbpageid";
			public const string msdyn_oclinechannelconfigid = "msdyn_oclinechannelconfigid";
			public const string msdyn_ocprovisioningstateId = "msdyn_ocprovisioningstateid";
			public const string msdyn_octeamschannelconfigid = "msdyn_octeamschannelconfigid";
			public const string msdyn_ocwhatsappchannelaccountId = "msdyn_ocwhatsappchannelaccountid";
			public const string msdyn_phonenumberid = "msdyn_phonenumberid";
			public const string msdyn_provisioningresponse = "msdyn_provisioningresponse";
			public const string msdyn_voicechannelsettingid = "msdyn_voicechannelsettingid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyn_ocprovisioningstate";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10664;
		public const string EntityCollectionSchemaName = "msdyn_ocprovisioningstates";
		public const string EntityDisplayCollectionName = "Provisioning States";
		public const string DisplayName = "Provisioning State";
		public const string EntitySetName = "msdyn_ocprovisioningstates";
		public const string EntityLogicalCollectionName = "msdyn_ocprovisioningstates";
		public const string EntityPrimaryIdAttribute = "msdyn_ocprovisioningstateid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_name";
		public const string EntitySchemaName = "msdyn_ocprovisioningstate";
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(Guid msdyn_ocprovisioningstateId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_ocprovisioningstateId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocprovisioningstate"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocprovisioningstate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_ocprovisioningstate(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_ocprovisioningstate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_ocprovisioningstate(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_ocprovisioningstate(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Automated Calling Status</para>
		/// <para><strong>Description</strong>: Automated Calling Status for Heavy Metal Migration Automated Calling feature.</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_AutomatedCallingStatus"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_AutomatedCallingStatus.NotTested"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_AutomatedCallingStatus? msdyn_AutomatedCallingStatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_AutomatedCallingStatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_AutomatedCallingStatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_AutomatedCallingStatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_AutomatedCallingStatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: CommunicationProviderSettings</para>
		/// <para><strong>Description</strong>: Related Communication Provider Settings</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_occommunicationprovidersetting"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_communicationprovidersettingid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_communicationprovidersettingid); }
			set { Entity.Attributes[Fields.msdyn_communicationprovidersettingid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Additional details</para>
		/// <para><strong>Description</strong>: Additional details</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 8,192</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_errormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_errormessage); }
			set { Entity.Attributes[Fields.msdyn_errormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Error Message (Deprecated)</para>
		/// <para><strong>Description</strong>: Exception Details during channel provisioning</para>
		/// <para>Required - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 8,192</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_exceptiondetails
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_exceptiondetails); }
			set { Entity.Attributes[Fields.msdyn_exceptiondetails] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: GateKeeper Status</para>
		/// <para><strong>Description</strong>: Provisioning Status for GateKeeper</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatus"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatus? msdyn_gatekeeperstatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_gatekeeperstatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_gatekeeperstatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_gatekeeperstatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: GateKeeper Status Reason</para>
		/// <para><strong>Description</strong>: Provisioning Status Reason for GateKeeper</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatusreason"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatusreason? msdyn_gatekeeperstatusreason
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_gatekeeperstatusreason);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.msdyn_gatekeeperstatusreason)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_gatekeeperstatusreason] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_gatekeeperstatusreason] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Facebook Application</para>
		/// <para><strong>Description</strong>: Related Facebook application</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_ocfbapplication"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_ocfbapplicationid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_ocfbapplicationid); }
			set { Entity.Attributes[Fields.msdyn_ocfbapplicationid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Facebook Page</para>
		/// <para><strong>Description</strong>: Related Facebook page</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_ocfbpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_ocfbpageid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_ocfbpageid); }
			set { Entity.Attributes[Fields.msdyn_ocfbpageid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Channel</para>
		/// <para><strong>Description</strong>: Related Line Channel</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_oclinechannelconfig"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_oclinechannelconfigid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_oclinechannelconfigid); }
			set { Entity.Attributes[Fields.msdyn_oclinechannelconfigid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Provisioning State</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_ocprovisioningstateId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_ocprovisioningstateId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Teams Channel</para>
		/// <para><strong>Description</strong>: Related Teams Channel</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_octeamschannelconfig"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_octeamschannelconfigid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_octeamschannelconfigid); }
			set { Entity.Attributes[Fields.msdyn_octeamschannelconfigid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: WhatsApp Account</para>
		/// <para><strong>Description</strong>: Related WhatsApp Account</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_ocwhatsappchannelaccount"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_ocwhatsappchannelaccountId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_ocwhatsappchannelaccountId); }
			set { Entity.Attributes[Fields.msdyn_ocwhatsappchannelaccountId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phone Number</para>
		/// <para><strong>Description</strong>: Related Phone Number</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_ocphonenumber"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_phonenumberid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_phonenumberid); }
			set { Entity.Attributes[Fields.msdyn_phonenumberid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: msdyn_provisioningresponse</para>
		/// <para><strong>Description</strong>: Response for the provisioning action</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_provisioningresponse
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_provisioningresponse); }
			set { Entity.Attributes[Fields.msdyn_provisioningresponse] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: voicechannelsettingsid</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_ocvoicechannelsetting"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_voicechannelsettingid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_voicechannelsettingid); }
			set { Entity.Attributes[Fields.msdyn_voicechannelsettingid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner Id</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Business Unit</para>
		/// <para><strong>Description</strong>: Unique identifier for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Team</para>
		/// <para><strong>Description</strong>: Unique identifier for the team that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning User</para>
		/// <para><strong>Description</strong>: Unique identifier for the user that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Provisioning State</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Provisioning State</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_ocprovisioningstateOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Zone Rule Version Number</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC Conversion Time Zone Code</para>
		/// <para><strong>Description</strong>: Time zone code that was in use when the record was created.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}