//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:48:36
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets
{
	public enum msdyn_flow_approval_priority
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Important</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Important = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Low</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Low = 192_350_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Medium</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Medium = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Urgent</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Urgent = 192_350_000
	}
	public enum msdyn_flow_approval_requesttype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Basic = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: eSign</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		eSign = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Other</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Other = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Templates</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Templates = 192_350_003
	}
	public enum msdyn_flow_approval_stage
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Basic = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Complete</para>
		/// <para><strong>Value</strong>: 192,351,000</para>
		/// </summary>
		Complete = 192_351_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Not Specified</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Not_Specified = 192_350_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Abandoned</para>
		/// <para><strong>Value</strong>: 192,350,007</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Abandoned = 192_350_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Canceled</para>
		/// <para><strong>Value</strong>: 192,350,006</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Canceled = 192_350_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Completed</para>
		/// <para><strong>Value</strong>: 192,350,004</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Completed = 192_350_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Created</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Created = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Expired</para>
		/// <para><strong>Value</strong>: 192,350,005</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Expired = 192_350_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Pending</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Pending = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Suspended</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Suspended = 192_350_002
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_flow_approval : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_flow_approval_additionalfields = "msdyn_flow_approval_additionalfields";
			public const string msdyn_flow_approval_allowreassign = "msdyn_flow_approval_allowreassign";
			public const string msdyn_flow_approval_approvalstagekey = "msdyn_flow_approval_approvalstagekey";
			public const string msdyn_flow_approval_basicapprovalmodel = "msdyn_flow_approval_basicapprovalmodel";
			public const string msdyn_flow_approval_category = "msdyn_flow_approval_category";
			public const string msdyn_flow_approval_completedon = "msdyn_flow_approval_completedon";
			public const string msdyn_flow_approval_currentstepnumber = "msdyn_flow_approval_currentstepnumber";
			public const string msdyn_flow_approval_details = "msdyn_flow_approval_details";
			public const string msdyn_flow_approval_dueon = "msdyn_flow_approval_dueon";
			public const string msdyn_flow_approval_expireson = "msdyn_flow_approval_expireson";
			public const string msdyn_flow_approval_itemlink = "msdyn_flow_approval_itemlink";
			public const string msdyn_flow_approval_itemlinkdescription = "msdyn_flow_approval_itemlinkdescription";
			public const string msdyn_flow_approval_itemlinkhash = "msdyn_flow_approval_itemlinkhash";
			public const string msdyn_flow_approval_modelid = "msdyn_flow_approval_modelid";
			public const string msdyn_flow_approval_modeltype = "msdyn_flow_approval_modeltype";
			public const string msdyn_flow_approval_name = "msdyn_flow_approval_name";
			public const string msdyn_flow_approval_partneridhash = "msdyn_flow_approval_partneridhash";
			public const string msdyn_flow_approval_partnermetadata = "msdyn_flow_approval_partnermetadata";
			public const string msdyn_flow_approval_priority = "msdyn_flow_approval_priority";
			public const string msdyn_flow_approval_requesttype = "msdyn_flow_approval_requesttype";
			public const string msdyn_flow_approval_result = "msdyn_flow_approval_result";
			public const string msdyn_flow_approval_sendemail = "msdyn_flow_approval_sendemail";
			public const string msdyn_flow_approval_source = "msdyn_flow_approval_source";
			public const string msdyn_flow_approval_stage = "msdyn_flow_approval_stage";
			public const string msdyn_flow_approval_tags = "msdyn_flow_approval_tags";
			public const string msdyn_flow_approval_templateformid = "msdyn_flow_approval_templateformid";
			public const string msdyn_flow_approval_templateid = "msdyn_flow_approval_templateid";
			public const string msdyn_flow_approval_templateresponseId = "msdyn_flow_approval_templateresponseid";
			public const string msdyn_flow_approval_title = "msdyn_flow_approval_title";
			public const string msdyn_flow_approvalId = "msdyn_flow_approvalid";
			public const string new_msdyn_flow_approval_allowcancel = "msdyn_flow_approval_allowcancel";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyn_flow_approval";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10094;
		public const string EntityCollectionSchemaName = "msdyn_flow_approvals";
		public const string EntityDisplayCollectionName = "Approvals";
		public const string DisplayName = "Approval";
		public const string EntitySetName = "msdyn_flow_approvals";
		public const string EntityLogicalCollectionName = "msdyn_flow_approvals";
		public const string EntityPrimaryIdAttribute = "msdyn_flow_approvalid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_flow_approval_name";
		public const string EntitySchemaName = "msdyn_flow_approval";
		[DebuggerNonUserCode()]
		public msdyn_flow_approval()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(Guid msdyn_flow_approvalId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_flow_approvalId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_flow_approval"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_flow_approval"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_flow_approval(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_flow_approval"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_flow_approval(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_flow_approval(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Additional Fields</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_additionalfields
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_additionalfields); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_additionalfields] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Allow Reassign</para>
		/// <para><strong>Description</strong>: Boolean field that allows the approvers to reassign approval requests.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_flow_approval_allowreassign
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_flow_approval_allowreassign); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_allowreassign] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Approval Stage Key</para>
		/// <para><strong>Description</strong>: Lookup key to match approval id and stage in fetch xml.</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_approvalstagekey
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_approvalstagekey); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_approvalstagekey] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic Approval Model</para>
		/// <para><strong>Description</strong>: The linked basic approval model data.</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_flow_basicapprovalmodel"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_flow_approval_basicapprovalmodel
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_flow_approval_basicapprovalmodel); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_basicapprovalmodel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Category</para>
		/// <para><strong>Description</strong>: User defined string that allows approval creators to categorize an approval.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_category
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_category); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_category] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Completed On</para>
		/// <para><strong>Description</strong>: The completion date.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdyn_flow_approval_completedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdyn_flow_approval_completedon); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_completedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Current Step Number</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyn_flow_approval_currentstepnumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyn_flow_approval_currentstepnumber); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_currentstepnumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Details</para>
		/// <para><strong>Description</strong>: The description of the approval.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 32,768</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_details
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_details); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_details] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Due On</para>
		/// <para><strong>Description</strong>: The due date.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdyn_flow_approval_dueonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdyn_flow_approval_dueon); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_dueon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Expires On</para>
		/// <para><strong>Description</strong>: The expiration date.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdyn_flow_approval_expiresonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdyn_flow_approval_expireson); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_expireson] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Item Link</para>
		/// <para><strong>Description</strong>: The optional link to the item to approve.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,048</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_itemlink
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_itemlink); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_itemlink] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Item Link Description</para>
		/// <para><strong>Description</strong>: The optional description for the item link.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,048</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_itemlinkdescription
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_itemlinkdescription); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_itemlinkdescription] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Item Link Hash</para>
		/// <para><strong>Description</strong>: Item link hash to enable queries.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_itemlinkhash
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_itemlinkhash); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_itemlinkhash] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Approval Model Id</para>
		/// <para><strong>Description</strong>: Id of the approval model.</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_modelid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_modelid); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_modelid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Approval Model Type</para>
		/// <para><strong>Description</strong>: Table name of the approval model.</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_modeltype
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_modeltype); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_modeltype] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the approval.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_name); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Partner Id Hash</para>
		/// <para><strong>Description</strong>: The hash of a unique partner id associated with a document. Meant for search scenarios.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 512</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_partneridhash
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_partneridhash); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_partneridhash] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Partner Metadata</para>
		/// <para><strong>Description</strong>: Unstructured space to store extraneous information associated with the approval for partner services.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_partnermetadata
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_partnermetadata); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_partnermetadata] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Priority</para>
		/// <para><strong>Description</strong>: The priority of the approval.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_priority"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_priority.Medium"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_priority? msdyn_flow_approval_priority
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_flow_approval_priority);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_priority)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_flow_approval_priority] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_flow_approval_priority] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Request Type</para>
		/// <para><strong>Description</strong>: The type of request that created the approval whether from an approval template, esignature process, etc.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_requesttype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_requesttype.Basic"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_requesttype? msdyn_flow_approval_requesttype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_flow_approval_requesttype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_requesttype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_flow_approval_requesttype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_flow_approval_requesttype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Result</para>
		/// <para><strong>Description</strong>: Final outcome of the approval.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_result
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_result); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_result] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Send Email Notification</para>
		/// <para><strong>Description</strong>: Whether to send system-generated email notifications for this approval.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Yes</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_flow_approval_sendemail
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_flow_approval_sendemail); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_sendemail] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Source</para>
		/// <para><strong>Description</strong>: Source of the request that created the approval.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_source
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_source); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_source] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Stage</para>
		/// <para><strong>Description</strong>: The stage.</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_stage"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_stage? msdyn_flow_approval_stage
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_flow_approval_stage);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.msdyn_flow_approval_stage)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_flow_approval_stage] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_flow_approval_stage] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tags</para>
		/// <para><strong>Description</strong>: Semicolon delimited list of user defined strings to help filter and search approvals.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_tags
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_tags); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_tags] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Template Form Id</para>
		/// <para><strong>Description</strong>: Base64 encoded string id of the template approval form.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_templateformid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_templateformid); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_templateformid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Template Id</para>
		/// <para><strong>Description</strong>: Base64 encoded string id of the template used to create the approval.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_templateid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_templateid); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_templateid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Template Response Id</para>
		/// <para><strong>Description</strong>: Base64 encoded string id of the unique templated approval response.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 36</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_templateresponseId
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_templateresponseId); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_templateresponseId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Title</para>
		/// <para><strong>Description</strong>: The title.</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,048</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_flow_approval_title
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_flow_approval_title); }
			set { Entity.Attributes[Fields.msdyn_flow_approval_title] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Approval</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_flow_approvalId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_flow_approvalId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Allow Cancel</para>
		/// <para><strong>Description</strong>: Boolean field that allows the approval owner to cancel the approval.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? new_msdyn_flow_approval_allowcancel
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.new_msdyn_flow_approval_allowcancel); }
			set { Entity.Attributes[Fields.new_msdyn_flow_approval_allowcancel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner Id</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Business Unit</para>
		/// <para><strong>Description</strong>: Unique identifier for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Team</para>
		/// <para><strong>Description</strong>: Unique identifier for the team that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning User</para>
		/// <para><strong>Description</strong>: Unique identifier for the user that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Approval</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: The reason for the status of the approval.</para>
		/// <para>Required - <strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_flow_approvalOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Zone Rule Version Number</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC Conversion Time Zone Code</para>
		/// <para><strong>Description</strong>: Time zone code that was in use when the record was created.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}