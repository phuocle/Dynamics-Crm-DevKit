//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:42
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webpageOptionSets
{
	public enum mspp_category
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: News</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		News = 1
	}
	public enum mspp_feedbackpolicy
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Closed</para>
		/// <para><strong>Value</strong>: 756,150,005</para>
		/// </summary>
		Closed = 756_150_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inherit</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Inherit = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Item</para>
		/// <para><strong>Value</strong>: 756,150,003</para>
		/// </summary>
		Item = 756_150_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Moderated</para>
		/// <para><strong>Value</strong>: 756,150,004</para>
		/// </summary>
		Moderated = 756_150_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: None</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		None = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Open</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Open = 756_150_002
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webpage : EntityBase
	{
		public struct Fields
		{
			public const string mspp_alloworigin = "mspp_alloworigin";
			public const string mspp_category = "mspp_category";
			public const string mspp_copy = "mspp_copy";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdbyipaddress = "mspp_createdbyipaddress";
			public const string mspp_createdbyusername = "mspp_createdbyusername";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_customcss = "mspp_customcss";
			public const string mspp_customjavascript = "mspp_customjavascript";
			public const string mspp_displaydate = "mspp_displaydate";
			public const string mspp_displayorder = "mspp_displayorder";
			public const string mspp_editorialcomments = "mspp_editorialcomments";
			public const string mspp_enablerating = "mspp_enablerating";
			public const string mspp_entityform = "mspp_entityform";
			public const string mspp_entitylist = "mspp_entitylist";
			public const string mspp_excludefromsearch = "mspp_excludefromsearch";
			public const string mspp_expirationdate = "mspp_expirationdate";
			public const string mspp_feedbackpolicy = "mspp_feedbackpolicy";
			public const string mspp_hiddenfromsitemap = "mspp_hiddenfromsitemap";
			public const string mspp_image = "mspp_image";
			public const string mspp_imageurl = "mspp_imageurl";
			public const string mspp_isofflinecached = "mspp_isofflinecached";
			public const string mspp_isroot = "mspp_isroot";
			public const string mspp_masterwebpageid = "mspp_masterwebpageid";
			public const string mspp_meta_description = "mspp_meta_description";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedbyipaddress = "mspp_modifiedbyipaddress";
			public const string mspp_modifiedbyusername = "mspp_modifiedbyusername";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_name = "mspp_name";
			public const string mspp_navigation = "mspp_navigation";
			public const string mspp_pagetemplateid = "mspp_pagetemplateid";
			public const string mspp_parentpageid = "mspp_parentpageid";
			public const string mspp_partialurl = "mspp_partialurl";
			public const string mspp_publishingstateid = "mspp_publishingstateid";
			public const string mspp_releasedate = "mspp_releasedate";
			public const string mspp_rootwebpageid = "mspp_rootwebpageid";
			public const string mspp_sharedpageconfiguration = "mspp_sharedpageconfiguration";
			public const string mspp_summary = "mspp_summary";
			public const string mspp_title = "mspp_title";
			public const string mspp_webform = "mspp_webform";
			public const string mspp_webpageId = "mspp_webpageid";
			public const string mspp_webpagelanguageid = "mspp_webpagelanguageid";
			public const string mspp_websiteid = "mspp_websiteid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webpage";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10340;
		public const string EntityCollectionSchemaName = "mspp_webpages";
		public const string EntityDisplayCollectionName = "Web Pages";
		public const string DisplayName = "Web Page";
		public const string EntitySetName = "mspp_webpages";
		public const string EntityLogicalCollectionName = "mspp_webpages";
		public const string EntityPrimaryIdAttribute = "mspp_webpageid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_webpage";
		[DebuggerNonUserCode()]
		public mspp_webpage()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webpage(Guid mspp_webpageId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webpageId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webpage(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webpage"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webpage(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webpage"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webpage(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webpage(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webpage"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webpage(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webpage(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webpage(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Allow Origin</para>
		/// <para><strong>Description</strong>: Defines CORS header Access-Control-Allow-Origin for cross origin requests.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 250</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_alloworigin
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_alloworigin); }
			set { Entity.Attributes[Fields.mspp_alloworigin] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Category</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_category"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_category? mspp_category
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_category);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_category)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_category] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_category] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Copy</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_copy
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_copy); }
			set { Entity.Attributes[Fields.mspp_copy] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Shows who created the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By IP Address</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_createdbyipaddress
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_createdbyipaddress); }
			set { Entity.Attributes[Fields.mspp_createdbyipaddress] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By Username</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_createdbyusername
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_createdbyusername); }
			set { Entity.Attributes[Fields.mspp_createdbyusername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was created.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Custom CSS</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_customcss
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_customcss); }
			set { Entity.Attributes[Fields.mspp_customcss] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Custom JavaScript</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_customjavascript
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_customjavascript); }
			set { Entity.Attributes[Fields.mspp_customjavascript] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Display Date</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_displaydateUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_displaydate); }
			set { Entity.Attributes[Fields.mspp_displaydate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Display Order</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_displayorder
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_displayorder); }
			set { Entity.Attributes[Fields.mspp_displayorder] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Editorial Comments</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editorialcomments
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editorialcomments); }
			set { Entity.Attributes[Fields.mspp_editorialcomments] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Enable Ratings</para>
		/// <para><strong>Description</strong>: Setting this value to &apos;Yes&apos; will allow users to rate the web page.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_enablerating
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_enablerating); }
			set { Entity.Attributes[Fields.mspp_enablerating] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic Form</para>
		/// <para><strong>Description</strong>: Unique identifier for Entity Form associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_entityform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entityform
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entityform); }
			set { Entity.Attributes[Fields.mspp_entityform] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: List</para>
		/// <para><strong>Description</strong>: Unique identifier for Entity List associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_entitylist"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entitylist
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entitylist); }
			set { Entity.Attributes[Fields.mspp_entitylist] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Exclude From Search</para>
		/// <para><strong>Description</strong>: Shows whether the webpage is excluded from the portal search.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_excludefromsearch
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_excludefromsearch); }
			set { Entity.Attributes[Fields.mspp_excludefromsearch] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Expiration Date</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_expirationdateUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_expirationdate); }
			set { Entity.Attributes[Fields.mspp_expirationdate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Comment Policy</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_feedbackpolicy"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_feedbackpolicy.Inherit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_feedbackpolicy? mspp_feedbackpolicy
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_feedbackpolicy);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.mspp_feedbackpolicy)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_feedbackpolicy] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_feedbackpolicy] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hidden From Sitemap</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_hiddenfromsitemap
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_hiddenfromsitemap); }
			set { Entity.Attributes[Fields.mspp_hiddenfromsitemap] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Image</para>
		/// <para><strong>Description</strong>: Unique identifier for Web File associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webfile"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_image
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_image); }
			set { Entity.Attributes[Fields.mspp_image] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Image URL</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_imageurl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_imageurl); }
			set { Entity.Attributes[Fields.mspp_imageurl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: isOfflineCached</para>
		/// <para><strong>Description</strong>: Define whether to cache this page for PWA.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_isofflinecached
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_isofflinecached); }
			set { Entity.Attributes[Fields.mspp_isofflinecached] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is Root</para>
		/// <para><strong>Description</strong>: Defines whether this is the &quot;root&quot; record of this translated group of Web Pages.</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_isroot
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_isroot); }
			set { Entity.Attributes[Fields.mspp_isroot] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Master Web Page</para>
		/// <para><strong>Description</strong>: Unique identifier for Web Page associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_masterwebpageid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_masterwebpageid); }
			set { Entity.Attributes[Fields.mspp_masterwebpageid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_meta_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_meta_description); }
			set { Entity.Attributes[Fields.mspp_meta_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Shows who last updated the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By IP Address</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_modifiedbyipaddress
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_modifiedbyipaddress); }
			set { Entity.Attributes[Fields.mspp_modifiedbyipaddress] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By Username</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_modifiedbyusername
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_modifiedbyusername); }
			set { Entity.Attributes[Fields.mspp_modifiedbyusername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was modified.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Navigation</para>
		/// <para><strong>Description</strong>: Unique identifier for Web Link Set associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_weblinkset"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_navigation
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_navigation); }
			set { Entity.Attributes[Fields.mspp_navigation] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Page Template</para>
		/// <para><strong>Description</strong>: Unique identifier for Page Template associated with Web Page.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_pagetemplate"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_pagetemplateid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_pagetemplateid); }
			set { Entity.Attributes[Fields.mspp_pagetemplateid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Parent Page</para>
		/// <para><strong>Description</strong>: Unique identifier for Web Page associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_parentpageid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_parentpageid); }
			set { Entity.Attributes[Fields.mspp_parentpageid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Partial URL</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_partialurl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_partialurl); }
			set { Entity.Attributes[Fields.mspp_partialurl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Publishing State</para>
		/// <para><strong>Description</strong>: Unique identifier for Publishing State associated with Web Page.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_publishingstate"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_publishingstateid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_publishingstateid); }
			set { Entity.Attributes[Fields.mspp_publishingstateid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Release Date</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_releasedateUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_releasedate); }
			set { Entity.Attributes[Fields.mspp_releasedate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Root Webpage</para>
		/// <para><strong>Description</strong>: Lookup to root WebPage.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_rootwebpageid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_rootwebpageid); }
			set { Entity.Attributes[Fields.mspp_rootwebpageid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Shared Page Configuration</para>
		/// <para><strong>Description</strong>: Determines if the content page uses the root page configuration</para>
		/// <para>Required - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Yes</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_sharedpageconfiguration
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_sharedpageconfiguration); }
			set { Entity.Attributes[Fields.mspp_sharedpageconfiguration] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Summary</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 25,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_summary
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_summary); }
			set { Entity.Attributes[Fields.mspp_summary] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Title</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 512</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_title
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_title); }
			set { Entity.Attributes[Fields.mspp_title] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multistep Form</para>
		/// <para><strong>Description</strong>: Unique identifier for Multistep Form associated with Web Page.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webform
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webform); }
			set { Entity.Attributes[Fields.mspp_webform] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Web Page</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webpageId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webpageId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Webpage Language</para>
		/// <para><strong>Description</strong>: Language of this web page.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_websitelanguage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webpagelanguageid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webpagelanguageid); }
			set { Entity.Attributes[Fields.mspp_webpagelanguageid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Website</para>
		/// <para><strong>Description</strong>: Unique identifier for Website associated with Web Page.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_website"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_websiteid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_websiteid); }
			set { Entity.Attributes[Fields.mspp_websiteid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Web Page</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Web Page</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webpageOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}