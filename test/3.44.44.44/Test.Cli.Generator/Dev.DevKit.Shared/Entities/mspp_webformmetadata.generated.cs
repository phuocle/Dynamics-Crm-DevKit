//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:42
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets
{
	public enum mspp_controlstyle
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Code component</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Code_component = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Group Whole Number as Constant Sum</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Group_Whole_Number_as_Constant_Sum = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Group Whole Number as Rank Order Scale Allow Ties</para>
		/// <para><strong>Value</strong>: 100,000,005</para>
		/// </summary>
		Group_Whole_Number_as_Rank_Order_Scale_Allow_Ties = 100_000_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Group Whole Number as Rank Order Scale No Ties</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Group_Whole_Number_as_Rank_Order_Scale_No_Ties = 100_000_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Group Whole Number as Stack Rank</para>
		/// <para><strong>Value</strong>: 100,000,008</para>
		/// </summary>
		Group_Whole_Number_as_Stack_Rank = 100_000_008,
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Choice</para>
		/// <para><strong>Value</strong>: 100,000,007</para>
		/// </summary>
		Multiple_Choice = 100_000_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Choice Matrix</para>
		/// <para><strong>Value</strong>: 100,000,006</para>
		/// </summary>
		Multiple_Choice_Matrix = 100_000_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Option Set as Horizontal Radio Button List</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Option_Set_as_Horizontal_Radio_Button_List = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Option Set as Vertical Radio Button List</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Option_Set_as_Vertical_Radio_Button_List = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Render Lookup as Dropdown</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Render_Lookup_as_Dropdown = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Single Line of Text as Geolocation Lookup Validator</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Single_Line_of_Text_as_Geolocation_Lookup_Validator = 100_000_002
	}
	public enum mspp_descriptionposition
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Above the field</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Above_the_field = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Above the label</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Above_the_label = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Below the field</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Below_the_field = 100_000_001
	}
	public enum mspp_onsavetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Current Portal User</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Current_Portal_User = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Today's Date</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Todays_Date = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Value</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Value = 100_000_000
	}
	public enum mspp_prepopulatetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Current Portal User</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Current_Portal_User = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Today's Date</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Todays_Date = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Value</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Value = 100_000_000
	}
	public enum mspp_type
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Attribute</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Attribute = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Notes</para>
		/// <para><strong>Value</strong>: 100,000,005</para>
		/// </summary>
		Notes = 100_000_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Purchase</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Purchase = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Section</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Section = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Subgrid</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Subgrid = 100_000_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tab</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Tab = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Timeline</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Timeline = 756_150_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Active = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webformmetadata : EntityBase
	{
		public struct Fields
		{
			public const string mspp_adddescription = "mspp_adddescription";
			public const string mspp_attributelogicalname = "mspp_attributelogicalname";
			public const string mspp_constantsummaximumtotal = "mspp_constantsummaximumtotal";
			public const string mspp_constantsumminimumtotal = "mspp_constantsumminimumtotal";
			public const string mspp_constantsumvalidationerrormessage = "mspp_constantsumvalidationerrormessage";
			public const string mspp_controlstyle = "mspp_controlstyle";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_cssclass = "mspp_cssclass";
			public const string mspp_description = "mspp_description";
			public const string mspp_descriptionposition = "mspp_descriptionposition";
			public const string mspp_entityformforcreate = "mspp_entityformforcreate";
			public const string mspp_entityformforcreateinwebformmetadata = "mspp_entityformforcreateinwebformmetadata";
			public const string mspp_fieldisrequired = "mspp_fieldisrequired";
			public const string mspp_geolocationvalidatorerrormessage = "mspp_geolocationvalidatorerrormessage";
			public const string mspp_groupname = "mspp_groupname";
			public const string mspp_ignoredefaultvalue = "mspp_ignoredefaultvalue";
			public const string mspp_label = "mspp_label";
			public const string mspp_maxmultiplechoiceselectedcount = "mspp_maxmultiplechoiceselectedcount";
			public const string mspp_minmultiplechoiceselectedcount = "mspp_minmultiplechoiceselectedcount";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_multiplechoicevalidationerrormessage = "mspp_multiplechoicevalidationerrormessage";
			public const string mspp_notes_settings = "mspp_notes_settings";
			public const string mspp_onsavefromattribute = "mspp_onsavefromattribute";
			public const string mspp_onsavetype = "mspp_onsavetype";
			public const string mspp_onsavevalue = "mspp_onsavevalue";
			public const string mspp_prepopulatefromattribute = "mspp_prepopulatefromattribute";
			public const string mspp_prepopulatetype = "mspp_prepopulatetype";
			public const string mspp_prepopulatevalue = "mspp_prepopulatevalue";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_purchasecreateinvoiceonpayment = "mspp_purchasecreateinvoiceonpayment";
			public const string mspp_purchasefulfillorderonpayment = "mspp_purchasefulfillorderonpayment";
			public const string mspp_purchaselineitemdescriptionattribute = "mspp_purchaselineitemdescriptionattribute";
			public const string mspp_purchaselineiteminstructionsattribute = "mspp_purchaselineiteminstructionsattribute";
			public const string mspp_purchaselineitemorderattribute = "mspp_purchaselineitemorderattribute";
			public const string mspp_purchaselineitemproductattribute = "mspp_purchaselineitemproductattribute";
			public const string mspp_purchaselineitemquantityattribute = "mspp_purchaselineitemquantityattribute";
			public const string mspp_purchaselineitemrelationship = "mspp_purchaselineitemrelationship";
			public const string mspp_purchaselineitemrequiredattribute = "mspp_purchaselineitemrequiredattribute";
			public const string mspp_purchaselineitemuomattribute = "mspp_purchaselineitemuomattribute";
			public const string mspp_purchaseoptionalproductsrelationship = "mspp_purchaseoptionalproductsrelationship";
			public const string mspp_purchasequotename = "mspp_purchasequotename";
			public const string mspp_purchaserequiredproductsrelationship = "mspp_purchaserequiredproductsrelationship";
			public const string mspp_purchaserequiresshipping = "mspp_purchaserequiresshipping";
			public const string mspp_purchasetargetentityinvoicerelationship = "mspp_purchasetargetentityinvoicerelationship";
			public const string mspp_purchasetargetentityorderrelationship = "mspp_purchasetargetentityorderrelationship";
			public const string mspp_purchasetargetentityrelationship = "mspp_purchasetargetentityrelationship";
			public const string mspp_randomizeoptionsetvalues = "mspp_randomizeoptionsetvalues";
			public const string mspp_rangevalidationerrormessage = "mspp_rangevalidationerrormessage";
			public const string mspp_rankordernotiesvalidationerrormessage = "mspp_rankordernotiesvalidationerrormessage";
			public const string mspp_requiredfieldvalidationerrormessage = "mspp_requiredfieldvalidationerrormessage";
			public const string mspp_sectionname = "mspp_sectionname";
			public const string mspp_setvalueonsave = "mspp_setvalueonsave";
			public const string mspp_subgrid_name = "mspp_subgrid_name";
			public const string mspp_subgrid_settings = "mspp_subgrid_settings";
			public const string mspp_tabname = "mspp_tabname";
			public const string mspp_timeline_settings = "mspp_timeline_settings";
			public const string mspp_type = "mspp_type";
			public const string mspp_useattributedescriptionproperty = "mspp_useattributedescriptionproperty";
			public const string mspp_validationerrormessage = "mspp_validationerrormessage";
			public const string mspp_validationregularexpression = "mspp_validationregularexpression";
			public const string mspp_validationregularexpressionerrormessage = "mspp_validationregularexpressionerrormessage";
			public const string mspp_webformmetadataId = "mspp_webformmetadataid";
			public const string mspp_webformstep = "mspp_webformstep";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webformmetadata";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10336;
		public const string EntityCollectionSchemaName = "mspp_webformmetadatas";
		public const string EntityDisplayCollectionName = "Multistep Form Metadata";
		public const string DisplayName = "Multistep Form Metadata";
		public const string EntitySetName = "mspp_webformmetadatas";
		public const string EntityLogicalCollectionName = "mspp_webformmetadatas";
		public const string EntityPrimaryIdAttribute = "mspp_webformmetadataid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_attributelogicalname";
		public const string EntitySchemaName = "mspp_webformmetadata";
		[DebuggerNonUserCode()]
		public mspp_webformmetadata()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Guid mspp_webformmetadataId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webformmetadataId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformmetadata(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformmetadata(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Add Description</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_adddescription
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_adddescription); }
			set { Entity.Attributes[Fields.mspp_adddescription] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Attribute Logical Name</para>
		/// <para><strong>Description</strong>: The name of the attribute field to be modified.</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attributelogicalname); }
			set { Entity.Attributes[Fields.mspp_attributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Constant Sum Maximum Total</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_constantsummaximumtotal
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_constantsummaximumtotal); }
			set { Entity.Attributes[Fields.mspp_constantsummaximumtotal] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Constant Sum Minimum Total</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_constantsumminimumtotal
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_constantsumminimumtotal); }
			set { Entity.Attributes[Fields.mspp_constantsumminimumtotal] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Constant Sum Validation Error Message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_constantsumvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_constantsumvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_constantsumvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Control Style</para>
		/// <para><strong>Description</strong>: Specifies how the control should be modified or enhanced.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle? mspp_controlstyle
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_controlstyle);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_controlstyle] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_controlstyle] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Shows who created the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was created.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: CSS Class</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_cssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_cssclass); }
			set { Entity.Attributes[Fields.mspp_cssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_description); }
			set { Entity.Attributes[Fields.mspp_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Position</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition.Above_the_field"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition? mspp_descriptionposition
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_descriptionposition);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_descriptionposition] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_descriptionposition] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic Form for Create</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entityformforcreate
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entityformforcreate); }
			set { Entity.Attributes[Fields.mspp_entityformforcreate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Basic Form for Create</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_entityform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entityformforcreateinwebformmetadata
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entityformforcreateinwebformmetadata); }
			set { Entity.Attributes[Fields.mspp_entityformforcreateinwebformmetadata] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Field is Required</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_fieldisrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_fieldisrequired); }
			set { Entity.Attributes[Fields.mspp_fieldisrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Geolocation Validator Error Message</para>
		/// <para><strong>Description</strong>: The error message to be displayed when the geolocation validator validation fails.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocationvalidatorerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocationvalidatorerrormessage); }
			set { Entity.Attributes[Fields.mspp_geolocationvalidatorerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Group Name</para>
		/// <para><strong>Description</strong>: Shows which attributes are to be grouped and rendered as a composite control if the control style is a groupings type such as &quot;Group Whole Number as Constant Sum.&quot;</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_groupname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_groupname); }
			set { Entity.Attributes[Fields.mspp_groupname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ignore Default Value</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_ignoredefaultvalue
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_ignoredefaultvalue); }
			set { Entity.Attributes[Fields.mspp_ignoredefaultvalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Label</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_label
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_label); }
			set { Entity.Attributes[Fields.mspp_label] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Choice Max Selected Count</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_maxmultiplechoiceselectedcount
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_maxmultiplechoiceselectedcount); }
			set { Entity.Attributes[Fields.mspp_maxmultiplechoiceselectedcount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Choice Minimum Required Selected Count</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_minmultiplechoiceselectedcount
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_minmultiplechoiceselectedcount); }
			set { Entity.Attributes[Fields.mspp_minmultiplechoiceselectedcount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Shows who last updated the record.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Shows the date and time when the record was modified.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multiple Choice Validation Error Message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_multiplechoicevalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_multiplechoicevalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_multiplechoicevalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Notes Settings</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_notes_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_notes_settings); }
			set { Entity.Attributes[Fields.mspp_notes_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: On Save From Attribute</para>
		/// <para><strong>Description</strong>: Use this field, in conjunction with On Save Type = Current User Contact, to map any attribute from the current user’s contact record to this record’s attribute logical name.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_onsavefromattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_onsavefromattribute); }
			set { Entity.Attributes[Fields.mspp_onsavefromattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: On Save Type</para>
		/// <para><strong>Description</strong>: Shows the mechanisms for populating a field with a value.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype? mspp_onsavetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_onsavetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_onsavetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_onsavetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Value</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_onsavevalue
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_onsavevalue); }
			set { Entity.Attributes[Fields.mspp_onsavevalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Prepopulate From Attribute</para>
		/// <para><strong>Description</strong>: Use this field, in conjunction with Prepopulate Type = Current User Contact, to map any attribute from the current user’s contact record to this record’s attribute logical name.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_prepopulatefromattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_prepopulatefromattribute); }
			set { Entity.Attributes[Fields.mspp_prepopulatefromattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Prepopulate Type</para>
		/// <para><strong>Description</strong>: Shows the mechanisms for populating a field with a value.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype? mspp_prepopulatetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_prepopulatetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_prepopulatetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_prepopulatetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Prepopulate Value</para>
		/// <para><strong>Description</strong>: The value to prepopulate the field.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_prepopulatevalue
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_prepopulatevalue); }
			set { Entity.Attributes[Fields.mspp_prepopulatevalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Provisioned Languages</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Create Invoice on Payment</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchasecreateinvoiceonpayment
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchasecreateinvoiceonpayment); }
			set { Entity.Attributes[Fields.mspp_purchasecreateinvoiceonpayment] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Fulfill Order on Payment</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchasefulfillorderonpayment
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchasefulfillorderonpayment); }
			set { Entity.Attributes[Fields.mspp_purchasefulfillorderonpayment] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Description Attribute Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemdescriptionattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemdescriptionattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemdescriptionattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Instructions Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for instructions.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineiteminstructionsattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineiteminstructionsattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineiteminstructionsattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Order Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for the order in which a line item should be displayed.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemorderattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemorderattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemorderattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Product Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for Product lookup. If this value is not present and set, the corresponding line item will be excluded from the purchase.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemproductattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemproductattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemproductattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Quantity Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for item quantity. (Should be a decimal attribute.)</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemquantityattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemquantityattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemquantityattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Relationship Name</para>
		/// <para><strong>Description</strong>: Relationship from the purchase entity that defines purchase line items.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item Required Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for whether a line item is required.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemrequiredattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemrequiredattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemrequiredattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Line Item UoM Attribute Name</para>
		/// <para><strong>Description</strong>: Purchase line item entity attribute name for Unit of Measure lookup.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemuomattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemuomattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemuomattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Optional Products Relationship Name</para>
		/// <para><strong>Description</strong>: Relationship from the purchase entity for products to be purchased that are optional (the user must opt-in to purchase of these items).</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaseoptionalproductsrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaseoptionalproductsrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaseoptionalproductsrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Quote Name</para>
		/// <para><strong>Description</strong>: The name to be used for all purchase quotes generated by this step.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasequotename
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasequotename); }
			set { Entity.Attributes[Fields.mspp_purchasequotename] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Required Products Relationship Name</para>
		/// <para><strong>Description</strong>: Relationship from the purchase entity for products to be purchased that are a required part of the purchase.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaserequiredproductsrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaserequiredproductsrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaserequiredproductsrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Requires Shipping</para>
		/// <para><strong>Description</strong>: Select whether to require the purchase process to collect shipping information.</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchaserequiresshipping
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchaserequiresshipping); }
			set { Entity.Attributes[Fields.mspp_purchaserequiresshipping] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target Entity Invoice Relationship Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityinvoicerelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityinvoicerelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityinvoicerelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target Entity Order Relationship Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityorderrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityorderrelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityorderrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target Entity Relationship Name</para>
		/// <para><strong>Description</strong>: Relationship from the form step target entity to the purchase entity, if the step target is not the purchase entity.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityrelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Randomize Option Set Values</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_randomizeoptionsetvalues
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_randomizeoptionsetvalues); }
			set { Entity.Attributes[Fields.mspp_randomizeoptionsetvalues] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Range Validation Error Message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_rangevalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_rangevalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_rangevalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Rank Order No Ties Validation Error Message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_rankordernotiesvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_rankordernotiesvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_rankordernotiesvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Required Field Validation Error Message</para>
		/// <para><strong>Description</strong>: The error message shown when a required field does not contain a value.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_requiredfieldvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_requiredfieldvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_requiredfieldvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Section Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_sectionname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_sectionname); }
			set { Entity.Attributes[Fields.mspp_sectionname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Set Value On Save</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_setvalueonsave
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_setvalueonsave); }
			set { Entity.Attributes[Fields.mspp_setvalueonsave] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Subgrid Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 150</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_subgrid_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_subgrid_name); }
			set { Entity.Attributes[Fields.mspp_subgrid_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Subgrid Settings</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_subgrid_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_subgrid_settings); }
			set { Entity.Attributes[Fields.mspp_subgrid_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tab Name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_tabname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_tabname); }
			set { Entity.Attributes[Fields.mspp_tabname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Timeline Settings</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_timeline_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_timeline_settings); }
			set { Entity.Attributes[Fields.mspp_timeline_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Type</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type.Attribute"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type? mspp_type
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_type);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_type] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_type] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Use Attribute's Description Property</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_useattributedescriptionproperty
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_useattributedescriptionproperty); }
			set { Entity.Attributes[Fields.mspp_useattributedescriptionproperty] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Validation Error Message</para>
		/// <para><strong>Description</strong>: The error message defined for the validation.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationerrormessage); }
			set { Entity.Attributes[Fields.mspp_validationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Validation Regular Expression</para>
		/// <para><strong>Description</strong>: Adds a regular expression validator with the specified regular expression.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationregularexpression
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationregularexpression); }
			set { Entity.Attributes[Fields.mspp_validationregularexpression] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Regular Expression Validation Error Message</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationregularexpressionerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationregularexpressionerrormessage); }
			set { Entity.Attributes[Fields.mspp_validationregularexpressionerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Multistep Form Metadata</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webformmetadataId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webformmetadataId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form Step</para>
		/// <para><strong>Description</strong>: Unique identifier for Form Step associated with Multistep Form Metadata.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webformstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webformstep); }
			set { Entity.Attributes[Fields.mspp_webformstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Multistep Form Metadata</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Multistep Form Metadata</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}