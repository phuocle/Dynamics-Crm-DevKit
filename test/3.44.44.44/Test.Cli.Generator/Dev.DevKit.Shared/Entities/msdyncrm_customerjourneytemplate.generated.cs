//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:35
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets
{
	public enum msdyncrm_entitytarget
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Account</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Account = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Contact</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Contact = 0
	}
	public enum msdyncrm_Label
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Layout enabled</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Layout_enabled = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: New</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		New = 192_350_000
	}
	public enum msdyncrm_Language
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Arabic (Saudi Arabia)</para>
		/// <para><strong>Value</strong>: 1,025</para>
		/// </summary>
		Arabic_Saudi_Arabia = 1_025,
		/// <summary>
		/// <para><strong>Display Name</strong>: Basque (Basque)</para>
		/// <para><strong>Value</strong>: 1,069</para>
		/// </summary>
		Basque_Basque = 1_069,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bulgarian (Bulgaria)</para>
		/// <para><strong>Value</strong>: 1,026</para>
		/// </summary>
		Bulgarian_Bulgaria = 1_026,
		/// <summary>
		/// <para><strong>Display Name</strong>: Catalan (Catalan)</para>
		/// <para><strong>Value</strong>: 1,027</para>
		/// </summary>
		Catalan_Catalan = 1_027,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (Hong Kong S.A.R.)</para>
		/// <para><strong>Value</strong>: 3,076</para>
		/// </summary>
		Chinese_Hong_Kong_SAR = 3_076,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (PRC)</para>
		/// <para><strong>Value</strong>: 2,052</para>
		/// </summary>
		Chinese_PRC = 2_052,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (Taiwan)</para>
		/// <para><strong>Value</strong>: 1,028</para>
		/// </summary>
		Chinese_Taiwan = 1_028,
		/// <summary>
		/// <para><strong>Display Name</strong>: Croatian (Croatia)</para>
		/// <para><strong>Value</strong>: 1,050</para>
		/// </summary>
		Croatian_Croatia = 1_050,
		/// <summary>
		/// <para><strong>Display Name</strong>: Czech (Czech Republic)</para>
		/// <para><strong>Value</strong>: 1,029</para>
		/// </summary>
		Czech_Czech_Republic = 1_029,
		/// <summary>
		/// <para><strong>Display Name</strong>: Danish</para>
		/// <para><strong>Value</strong>: 1,030</para>
		/// </summary>
		Danish = 1_030,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dutch</para>
		/// <para><strong>Value</strong>: 1,043</para>
		/// </summary>
		Dutch = 1_043,
		/// <summary>
		/// <para><strong>Display Name</strong>: English</para>
		/// <para><strong>Value</strong>: 1,033</para>
		/// </summary>
		English = 1_033,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (Australia)</para>
		/// <para><strong>Value</strong>: 3,081</para>
		/// </summary>
		English_Australia = 3_081,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (Canada)</para>
		/// <para><strong>Value</strong>: 4,105</para>
		/// </summary>
		English_Canada = 4_105,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (Great Britain)</para>
		/// <para><strong>Value</strong>: 2,057</para>
		/// </summary>
		English_Great_Britain = 2_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: Estonian (Estonia)</para>
		/// <para><strong>Value</strong>: 1,061</para>
		/// </summary>
		Estonian_Estonia = 1_061,
		/// <summary>
		/// <para><strong>Display Name</strong>: Finnish (Finland)</para>
		/// <para><strong>Value</strong>: 1,035</para>
		/// </summary>
		Finnish_Finland = 1_035,
		/// <summary>
		/// <para><strong>Display Name</strong>: French</para>
		/// <para><strong>Value</strong>: 1,036</para>
		/// </summary>
		French = 1_036,
		/// <summary>
		/// <para><strong>Display Name</strong>: French (Canada)</para>
		/// <para><strong>Value</strong>: 3,084</para>
		/// </summary>
		French_Canada = 3_084,
		/// <summary>
		/// <para><strong>Display Name</strong>: Galician (Galician)</para>
		/// <para><strong>Value</strong>: 1,110</para>
		/// </summary>
		Galician_Galician = 1_110,
		/// <summary>
		/// <para><strong>Display Name</strong>: German</para>
		/// <para><strong>Value</strong>: 1,031</para>
		/// </summary>
		German = 1_031,
		/// <summary>
		/// <para><strong>Display Name</strong>: Greek (Greece)</para>
		/// <para><strong>Value</strong>: 1,032</para>
		/// </summary>
		Greek_Greece = 1_032,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hebrew (Israel)</para>
		/// <para><strong>Value</strong>: 1,037</para>
		/// </summary>
		Hebrew_Israel = 1_037,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hungarian (Hungary)</para>
		/// <para><strong>Value</strong>: 1,038</para>
		/// </summary>
		Hungarian_Hungary = 1_038,
		/// <summary>
		/// <para><strong>Display Name</strong>: Indonesian (Indonesia)</para>
		/// <para><strong>Value</strong>: 1,057</para>
		/// </summary>
		Indonesian_Indonesia = 1_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: Italian</para>
		/// <para><strong>Value</strong>: 1,040</para>
		/// </summary>
		Italian = 1_040,
		/// <summary>
		/// <para><strong>Display Name</strong>: Japanese</para>
		/// <para><strong>Value</strong>: 1,041</para>
		/// </summary>
		Japanese = 1_041,
		/// <summary>
		/// <para><strong>Display Name</strong>: Korean (Korea)</para>
		/// <para><strong>Value</strong>: 1,042</para>
		/// </summary>
		Korean_Korea = 1_042,
		/// <summary>
		/// <para><strong>Display Name</strong>: Latvian (Latvia)</para>
		/// <para><strong>Value</strong>: 1,062</para>
		/// </summary>
		Latvian_Latvia = 1_062,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lithuanian (Lithuania)</para>
		/// <para><strong>Value</strong>: 1,063</para>
		/// </summary>
		Lithuanian_Lithuania = 1_063,
		/// <summary>
		/// <para><strong>Display Name</strong>: Norwegian, Bokmål (Norway)</para>
		/// <para><strong>Value</strong>: 1,044</para>
		/// </summary>
		Norwegian_Bokmal_Norway = 1_044,
		/// <summary>
		/// <para><strong>Display Name</strong>: Polish (Poland)</para>
		/// <para><strong>Value</strong>: 1,045</para>
		/// </summary>
		Polish_Poland = 1_045,
		/// <summary>
		/// <para><strong>Display Name</strong>: Portuguese (Brazil)</para>
		/// <para><strong>Value</strong>: 1,046</para>
		/// </summary>
		Portuguese_Brazil = 1_046,
		/// <summary>
		/// <para><strong>Display Name</strong>: Portuguese (Portugal)</para>
		/// <para><strong>Value</strong>: 2,070</para>
		/// </summary>
		Portuguese_Portugal = 2_070,
		/// <summary>
		/// <para><strong>Display Name</strong>: Romanian (Romania)</para>
		/// <para><strong>Value</strong>: 1,048</para>
		/// </summary>
		Romanian_Romania = 1_048,
		/// <summary>
		/// <para><strong>Display Name</strong>: Russian (Russia)</para>
		/// <para><strong>Value</strong>: 1,049</para>
		/// </summary>
		Russian_Russia = 1_049,
		/// <summary>
		/// <para><strong>Display Name</strong>: Serbian (Cyrillic, Serbia and Montenegro)</para>
		/// <para><strong>Value</strong>: 3,098</para>
		/// </summary>
		Serbian_Cyrillic_Serbia_and_Montenegro = 3_098,
		/// <summary>
		/// <para><strong>Display Name</strong>: Serbian (Latin, Serbia and Montenegro)</para>
		/// <para><strong>Value</strong>: 2,074</para>
		/// </summary>
		Serbian_Latin_Serbia_and_Montenegro = 2_074,
		/// <summary>
		/// <para><strong>Display Name</strong>: Slovak (Slovakia)</para>
		/// <para><strong>Value</strong>: 1,051</para>
		/// </summary>
		Slovak_Slovakia = 1_051,
		/// <summary>
		/// <para><strong>Display Name</strong>: Slovenian (Slovenia)</para>
		/// <para><strong>Value</strong>: 1,060</para>
		/// </summary>
		Slovenian_Slovenia = 1_060,
		/// <summary>
		/// <para><strong>Display Name</strong>: Spanish</para>
		/// <para><strong>Value</strong>: 3,082</para>
		/// </summary>
		Spanish = 3_082,
		/// <summary>
		/// <para><strong>Display Name</strong>: Swedish (Sweden)</para>
		/// <para><strong>Value</strong>: 1,053</para>
		/// </summary>
		Swedish_Sweden = 1_053,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thai (Thailand)</para>
		/// <para><strong>Value</strong>: 1,054</para>
		/// </summary>
		Thai_Thailand = 1_054,
		/// <summary>
		/// <para><strong>Display Name</strong>: Turkish (Turkey)</para>
		/// <para><strong>Value</strong>: 1,055</para>
		/// </summary>
		Turkish_Turkey = 1_055,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ukrainian (Ukraine)</para>
		/// <para><strong>Value</strong>: 1,058</para>
		/// </summary>
		Ukrainian_Ukraine = 1_058,
		/// <summary>
		/// <para><strong>Display Name</strong>: Vietnamese (Vietnam)</para>
		/// <para><strong>Value</strong>: 1,066</para>
		/// </summary>
		Vietnamese_Vietnam = 1_066
	}
	public enum msdyncrm_purposeoption
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Announcement</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Announcement = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email marketing</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Email_marketing = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Event marketing</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Event_marketing = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Large deals</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Large_deals = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Multipurpose</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Multipurpose = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Newsletters</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Newsletters = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Onboarding</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Onboarding = 2
	}
	public enum msdyncrm_Tag
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Layout enabled</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Layout_enabled = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: New</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		New = 192_350_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Draft</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Draft = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Live</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Live = 192_350_001
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyncrm_customerjourneytemplate : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EntityImageId = "entityimageid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyncrm_customerjourneydesignerstate = "msdyncrm_customerjourneydesignerstate";
			public const string msdyncrm_customerjourneyid = "msdyncrm_customerjourneyid";
			public const string msdyncrm_customerjourneytemplateId = "msdyncrm_customerjourneytemplateid";
			public const string msdyncrm_description = "msdyncrm_description";
			public const string msdyncrm_entitytarget = "msdyncrm_entitytarget";
			public const string msdyncrm_formtosave = "msdyncrm_formtosave";
			public const string msdyncrm_isrecurring = "msdyncrm_isrecurring";
			public const string msdyncrm_Label = "msdyncrm_label";
			public const string msdyncrm_Language = "msdyncrm_language";
			public const string msdyncrm_name = "msdyncrm_name";
			public const string msdyncrm_Origin = "msdyncrm_origin";
			public const string msdyncrm_purposeoption = "msdyncrm_purposeoption";
			public const string msdyncrm_recurrencecount = "msdyncrm_recurrencecount";
			public const string msdyncrm_recurrenceintervaldays = "msdyncrm_recurrenceintervaldays";
			public const string msdyncrm_Tag = "msdyncrm_tag";
			public const string msdyncrm_validationresults = "msdyncrm_validationresults";
			public const string msdyncrm_workflowdefinition = "msdyncrm_workflowdefinition";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyncrm_customerjourneytemplate";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11147;
		public const string EntityCollectionSchemaName = "msdyncrm_customerjourneytemplates";
		public const string EntityDisplayCollectionName = "Customer journey templates";
		public const string DisplayName = "Customer journey template";
		public const string EntitySetName = "msdyncrm_customerjourneytemplates";
		public const string EntityLogicalCollectionName = "msdyncrm_customerjourneytemplates";
		public const string EntityPrimaryIdAttribute = "msdyncrm_customerjourneytemplateid";
		public const string EntityPrimaryImageAttribute = "entityimage";
		public const string EntityPrimaryNameAttribute = "msdyncrm_name";
		public const string EntitySchemaName = "msdyncrm_customerjourneytemplate";
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(Guid msdyncrm_customerjourneytemplateId)
		{
			Entity = new Entity(EntityLogicalName, msdyncrm_customerjourneytemplateId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_customerjourneytemplate"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_customerjourneytemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_customerjourneytemplate(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyncrm_customerjourneytemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyncrm_customerjourneytemplate(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyncrm_customerjourneytemplate(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by</para>
		/// <para><strong>Description</strong>: Indicates the person who created this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created on</para>
		/// <para><strong>Description</strong>: Date and time when the record was created</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who created this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? EntityImageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.EntityImageId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import sequence number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified on</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified by (delegate)</para>
		/// <para><strong>Description</strong>: Indicates the person who modified this for another person.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Customer journey designer state</para>
		/// <para><strong>Description</strong>: The state of customer journey</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_customerjourneydesignerstate
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_customerjourneydesignerstate); }
			set { Entity.Attributes[Fields.msdyncrm_customerjourneydesignerstate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Customer journey ID</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_customerjourneyid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_customerjourneyid); }
			set { Entity.Attributes[Fields.msdyncrm_customerjourneyid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Customer journey template</para>
		/// <para><strong>Description</strong>: Unique ID for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyncrm_customerjourneytemplateId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyncrm_customerjourneytemplateId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 5,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_description); }
			set { Entity.Attributes[Fields.msdyncrm_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Target</para>
		/// <para><strong>Description</strong>: Tells which type of entity is targeted</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_entitytarget"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_entitytarget.Contact"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_entitytarget? msdyncrm_entitytarget
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_entitytarget);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_entitytarget)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_entitytarget] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_entitytarget] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form to save</para>
		/// <para><strong>Description</strong>: Form to save</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyncrm_formtosave
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyncrm_formtosave); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is recurring</para>
		/// <para><strong>Description</strong>: Tells whether the customer journey is recurring</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyncrm_isrecurring
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyncrm_isrecurring); }
			set { Entity.Attributes[Fields.msdyncrm_isrecurring] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Label</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Label"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Label? msdyncrm_Label
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_Label);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Label)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_Label] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_Label] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Language</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Language"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Language.English"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Language? msdyncrm_Language
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_Language);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Language)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_Language] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_Language] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the custom entity</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_name); }
			set { Entity.Attributes[Fields.msdyncrm_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Origin</para>
		/// <para><strong>Description</strong>: The optional reference to the Customer Journey from which this Template is originated.</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyncrm_customerjourney"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyncrm_Origin
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyncrm_Origin); }
			set { Entity.Attributes[Fields.msdyncrm_Origin] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Purpose</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_purposeoption"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_purposeoption? msdyncrm_purposeoption
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_purposeoption);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_purposeoption)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_purposeoption] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_purposeoption] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Recurrence count</para>
		/// <para><strong>Description</strong>: The number of iterations</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyncrm_recurrencecount
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyncrm_recurrencecount); }
			set { Entity.Attributes[Fields.msdyncrm_recurrencecount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Recurrence interval (days)</para>
		/// <para><strong>Description</strong>: The duration of the iteration (in days)</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyncrm_recurrenceintervaldays
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyncrm_recurrenceintervaldays); }
			set { Entity.Attributes[Fields.msdyncrm_recurrenceintervaldays] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tag</para>
		/// <para><strong>Description</strong>: deprecated</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Tag"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Tag? msdyncrm_Tag
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyncrm_Tag);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.msdyncrm_Tag)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyncrm_Tag] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyncrm_Tag] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Error check results</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_validationresults
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_validationresults); }
			set { Entity.Attributes[Fields.msdyncrm_validationresults] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Workflow definition</para>
		/// <para><strong>Description</strong>: The customer journey design definition</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyncrm_workflowdefinition
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyncrm_workflowdefinition); }
			set { Entity.Attributes[Fields.msdyncrm_workflowdefinition] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record created on</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner ID</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning business unit</para>
		/// <para><strong>Description</strong>: Indicates the business unit that owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning team</para>
		/// <para><strong>Description</strong>: Indicates the team that owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning user</para>
		/// <para><strong>Description</strong>: Indicates the person who owns this.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the customer journey template</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the customer journey template</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyncrm_customerjourneytemplateOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time-zone rule version number</para>
		/// <para><strong>Description</strong>: For internal use only</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC conversion time-zone code</para>
		/// <para><strong>Description</strong>: Time-zone code that was in use when the record was created</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
		/// <summary>
		/// <para>byte[]</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public byte[] EntityImage
		{
			get { return Entity.GetAttributeValue<byte[]>("entityimage"); }
			set { Entity.Attributes["entityimage"] = value; }
		}
		/// <summary>
		/// <para>ReadOnly - String</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string EntityImageUrl
		{
			get { return Entity.GetAttributeValue<string>("entityimage_url"); }
		}
	}
}