//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-12-05 15:49:38
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Deleted = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Deleted Unpublished</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Deleted_Unpublished = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Published</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Published = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Unpublished</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Unpublished = 1
	}
	public enum msdynmkt_category
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Custom templates</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Custom_templates = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Gallery</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Gallery = 0
	}
	public enum msdynmkt_contenttype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Default</para>
		/// <para><strong>Value</strong>: 534,120,000</para>
		/// </summary>
		Default = 534_120_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Double opt-in confirmation</para>
		/// <para><strong>Value</strong>: 534,120,001</para>
		/// </summary>
		Double_opt_in_confirmation = 534_120_001
	}
	public enum msdynmkt_label
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Layout enabled</para>
		/// <para><strong>Value</strong>: 731,570,001</para>
		/// </summary>
		Layout_enabled = 731_570_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: New</para>
		/// <para><strong>Value</strong>: 731,570,000</para>
		/// </summary>
		New = 731_570_000
	}
	public enum msdynmkt_language
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Arabic (Saudi Arabia)</para>
		/// <para><strong>Value</strong>: 1,025</para>
		/// </summary>
		Arabic_Saudi_Arabia = 1_025,
		/// <summary>
		/// <para><strong>Display Name</strong>: Basque (Basque)</para>
		/// <para><strong>Value</strong>: 1,069</para>
		/// </summary>
		Basque_Basque = 1_069,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bulgarian (Bulgaria)</para>
		/// <para><strong>Value</strong>: 1,026</para>
		/// </summary>
		Bulgarian_Bulgaria = 1_026,
		/// <summary>
		/// <para><strong>Display Name</strong>: Catalan (Catalan)</para>
		/// <para><strong>Value</strong>: 1,027</para>
		/// </summary>
		Catalan_Catalan = 1_027,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (Hong Kong S.A.R.)</para>
		/// <para><strong>Value</strong>: 3,076</para>
		/// </summary>
		Chinese_Hong_Kong_SAR = 3_076,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (PRC)</para>
		/// <para><strong>Value</strong>: 2,052</para>
		/// </summary>
		Chinese_PRC = 2_052,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chinese (Taiwan)</para>
		/// <para><strong>Value</strong>: 1,028</para>
		/// </summary>
		Chinese_Taiwan = 1_028,
		/// <summary>
		/// <para><strong>Display Name</strong>: Croatian (Croatia)</para>
		/// <para><strong>Value</strong>: 1,050</para>
		/// </summary>
		Croatian_Croatia = 1_050,
		/// <summary>
		/// <para><strong>Display Name</strong>: Czech (Czech Republic)</para>
		/// <para><strong>Value</strong>: 1,029</para>
		/// </summary>
		Czech_Czech_Republic = 1_029,
		/// <summary>
		/// <para><strong>Display Name</strong>: Danish</para>
		/// <para><strong>Value</strong>: 1,030</para>
		/// </summary>
		Danish = 1_030,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dutch</para>
		/// <para><strong>Value</strong>: 1,043</para>
		/// </summary>
		Dutch = 1_043,
		/// <summary>
		/// <para><strong>Display Name</strong>: English</para>
		/// <para><strong>Value</strong>: 1,033</para>
		/// </summary>
		English = 1_033,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (Australia)</para>
		/// <para><strong>Value</strong>: 3,081</para>
		/// </summary>
		English_Australia = 3_081,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (Canada)</para>
		/// <para><strong>Value</strong>: 4,105</para>
		/// </summary>
		English_Canada = 4_105,
		/// <summary>
		/// <para><strong>Display Name</strong>: English (United Kingdom)</para>
		/// <para><strong>Value</strong>: 2,057</para>
		/// </summary>
		English_United_Kingdom = 2_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: Estonian (Estonia)</para>
		/// <para><strong>Value</strong>: 1,061</para>
		/// </summary>
		Estonian_Estonia = 1_061,
		/// <summary>
		/// <para><strong>Display Name</strong>: Finnish (Finland)</para>
		/// <para><strong>Value</strong>: 1,035</para>
		/// </summary>
		Finnish_Finland = 1_035,
		/// <summary>
		/// <para><strong>Display Name</strong>: French</para>
		/// <para><strong>Value</strong>: 1,036</para>
		/// </summary>
		French = 1_036,
		/// <summary>
		/// <para><strong>Display Name</strong>: French (Canada)</para>
		/// <para><strong>Value</strong>: 3,084</para>
		/// </summary>
		French_Canada = 3_084,
		/// <summary>
		/// <para><strong>Display Name</strong>: Galician (Galician)</para>
		/// <para><strong>Value</strong>: 1,110</para>
		/// </summary>
		Galician_Galician = 1_110,
		/// <summary>
		/// <para><strong>Display Name</strong>: German</para>
		/// <para><strong>Value</strong>: 1,031</para>
		/// </summary>
		German = 1_031,
		/// <summary>
		/// <para><strong>Display Name</strong>: Greek (Greece)</para>
		/// <para><strong>Value</strong>: 1,032</para>
		/// </summary>
		Greek_Greece = 1_032,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hebrew (Israel)</para>
		/// <para><strong>Value</strong>: 1,037</para>
		/// </summary>
		Hebrew_Israel = 1_037,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hungarian (Hungary)</para>
		/// <para><strong>Value</strong>: 1,038</para>
		/// </summary>
		Hungarian_Hungary = 1_038,
		/// <summary>
		/// <para><strong>Display Name</strong>: Indonesian (Indonesia)</para>
		/// <para><strong>Value</strong>: 1,057</para>
		/// </summary>
		Indonesian_Indonesia = 1_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: Italian (Italy)</para>
		/// <para><strong>Value</strong>: 1,040</para>
		/// </summary>
		Italian_Italy = 1_040,
		/// <summary>
		/// <para><strong>Display Name</strong>: Japanese</para>
		/// <para><strong>Value</strong>: 1,041</para>
		/// </summary>
		Japanese = 1_041,
		/// <summary>
		/// <para><strong>Display Name</strong>: Korean (Korea)</para>
		/// <para><strong>Value</strong>: 1,042</para>
		/// </summary>
		Korean_Korea = 1_042,
		/// <summary>
		/// <para><strong>Display Name</strong>: Latvian (Latvia)</para>
		/// <para><strong>Value</strong>: 1,062</para>
		/// </summary>
		Latvian_Latvia = 1_062,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lithuanian (Lithuania)</para>
		/// <para><strong>Value</strong>: 1,063</para>
		/// </summary>
		Lithuanian_Lithuania = 1_063,
		/// <summary>
		/// <para><strong>Display Name</strong>: Norwegian, Bokmål (Norway)</para>
		/// <para><strong>Value</strong>: 1,044</para>
		/// </summary>
		Norwegian_Bokmal_Norway = 1_044,
		/// <summary>
		/// <para><strong>Display Name</strong>: Polish (Poland)</para>
		/// <para><strong>Value</strong>: 1,045</para>
		/// </summary>
		Polish_Poland = 1_045,
		/// <summary>
		/// <para><strong>Display Name</strong>: Portuguese (Brazil)</para>
		/// <para><strong>Value</strong>: 1,046</para>
		/// </summary>
		Portuguese_Brazil = 1_046,
		/// <summary>
		/// <para><strong>Display Name</strong>: Portuguese (Portugal)</para>
		/// <para><strong>Value</strong>: 2,070</para>
		/// </summary>
		Portuguese_Portugal = 2_070,
		/// <summary>
		/// <para><strong>Display Name</strong>: Romanian (Romania)</para>
		/// <para><strong>Value</strong>: 1,048</para>
		/// </summary>
		Romanian_Romania = 1_048,
		/// <summary>
		/// <para><strong>Display Name</strong>: Russian (Russia)</para>
		/// <para><strong>Value</strong>: 1,049</para>
		/// </summary>
		Russian_Russia = 1_049,
		/// <summary>
		/// <para><strong>Display Name</strong>: Serbian (Cyrillic, Serbia and Montenegro)</para>
		/// <para><strong>Value</strong>: 3,098</para>
		/// </summary>
		Serbian_Cyrillic_Serbia_and_Montenegro = 3_098,
		/// <summary>
		/// <para><strong>Display Name</strong>: Serbian (Latin, Serbia and Montenegro)</para>
		/// <para><strong>Value</strong>: 2,074</para>
		/// </summary>
		Serbian_Latin_Serbia_and_Montenegro = 2_074,
		/// <summary>
		/// <para><strong>Display Name</strong>: Slovak (Slovakia)</para>
		/// <para><strong>Value</strong>: 1,051</para>
		/// </summary>
		Slovak_Slovakia = 1_051,
		/// <summary>
		/// <para><strong>Display Name</strong>: Slovenian (Slovenia)</para>
		/// <para><strong>Value</strong>: 1,060</para>
		/// </summary>
		Slovenian_Slovenia = 1_060,
		/// <summary>
		/// <para><strong>Display Name</strong>: Spanish</para>
		/// <para><strong>Value</strong>: 3,082</para>
		/// </summary>
		Spanish = 3_082,
		/// <summary>
		/// <para><strong>Display Name</strong>: Swedish (Sweden)</para>
		/// <para><strong>Value</strong>: 1,053</para>
		/// </summary>
		Swedish_Sweden = 1_053,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thai (Thailand)</para>
		/// <para><strong>Value</strong>: 1,054</para>
		/// </summary>
		Thai_Thailand = 1_054,
		/// <summary>
		/// <para><strong>Display Name</strong>: Turkish (Türkiye)</para>
		/// <para><strong>Value</strong>: 1,055</para>
		/// </summary>
		Turkish_Turkiye = 1_055,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ukrainian (Ukraine)</para>
		/// <para><strong>Value</strong>: 1,058</para>
		/// </summary>
		Ukrainian_Ukraine = 1_058,
		/// <summary>
		/// <para><strong>Display Name</strong>: Vietnamese (Vietnam)</para>
		/// <para><strong>Value</strong>: 1,066</para>
		/// </summary>
		Vietnamese_Vietnam = 1_066
	}
	public enum msdynmkt_messagedesignation
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Commercial</para>
		/// <para><strong>Value</strong>: 534,120,000</para>
		/// </summary>
		Commercial = 534_120_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Transactional</para>
		/// <para><strong>Value</strong>: 534,120,001</para>
		/// </summary>
		Transactional = 534_120_001
	}
	public enum msdynmkt_subcategory
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Deals</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Deals = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Events/Webinars</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		EventsWebinars = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Follow-up</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Follow_up = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Informational</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Informational = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Layouts</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Layouts = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: New product</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		New_product = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Transactional</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Transactional = 5
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Active</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Active = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Inactive = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Draft</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Draft = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Inactive</para>
		/// <para><strong>Value</strong>: 100</para>
		/// <para><strong>StateCode.Inactive</strong></para>
		/// </summary>
		Inactive = 100,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ready to send</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Active</strong></para>
		/// </summary>
		Ready_to_send = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdynmkt_emailtemplate : EntityBase
	{
		public struct Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EntityImageId = "entityimageid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsManaged = "ismanaged";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdynmkt_automaticallygeneratetextpart = "msdynmkt_automaticallygeneratetextpart";
			public const string msdynmkt_category = "msdynmkt_category";
			public const string msdynmkt_compliancesettings = "msdynmkt_compliancesettings";
			public const string msdynmkt_compliancesettings3 = "msdynmkt_compliancesettings3";
			public const string msdynmkt_compliancesettings4 = "msdynmkt_compliancesettings4";
			public const string msdynmkt_compliancesettingscompanyaddress = "msdynmkt_compliancesettingscompanyaddress";
			public const string msdynmkt_conditionalcontent = "msdynmkt_conditionalcontent";
			public const string msdynmkt_contenttype = "msdynmkt_contenttype";
			public const string msdynmkt_description = "msdynmkt_description";
			public const string msdynmkt_designerhtml = "msdynmkt_designerhtml";
			public const string msdynmkt_emailbody = "msdynmkt_emailbody";
			public const string msdynmkt_emailtemplateId = "msdynmkt_emailtemplateid";
			public const string msdynmkt_entityimageId = "msdynmkt_entityimageid";
			public const string msdynmkt_formtosave = "msdynmkt_formtosave";
			public const string msdynmkt_fromemail = "msdynmkt_fromemail";
			public const string msdynmkt_fromname = "msdynmkt_fromname";
			public const string msdynmkt_label = "msdynmkt_label";
			public const string msdynmkt_language = "msdynmkt_language";
			public const string msdynmkt_marketingprovided = "msdynmkt_marketingprovided";
			public const string msdynmkt_messagedesignation = "msdynmkt_messagedesignation";
			public const string msdynmkt_name = "msdynmkt_name";
			public const string msdynmkt_obmmigrationinfo = "msdynmkt_obmmigrationinfo";
			public const string msdynmkt_placeholders = "msdynmkt_placeholders";
			public const string msdynmkt_previewhtml = "msdynmkt_previewhtml";
			public const string msdynmkt_previewtext = "msdynmkt_previewtext";
			public const string msdynmkt_purpose = "msdynmkt_purpose";
			public const string msdynmkt_replytoemail = "msdynmkt_replytoemail";
			public const string msdynmkt_sourceemailid = "msdynmkt_sourceemailid";
			public const string msdynmkt_subcategory = "msdynmkt_subcategory";
			public const string msdynmkt_subject = "msdynmkt_subject";
			public const string msdynmkt_textpart = "msdynmkt_textpart";
			public const string msdynmkt_thumbnailimageId = "msdynmkt_thumbnailimageid";
			public const string msdynmkt_topic = "msdynmkt_topic";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdynmkt_emailtemplate";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 11328;
		public const string EntityCollectionSchemaName = "msdynmkt_emailtemplates";
		public const string EntityDisplayCollectionName = "Email templates";
		public const string DisplayName = "Email template";
		public const string EntitySetName = "msdynmkt_emailtemplates";
		public const string EntityLogicalCollectionName = "msdynmkt_emailtemplates";
		public const string EntityPrimaryIdAttribute = "msdynmkt_emailtemplateid";
		public const string EntityPrimaryImageAttribute = "msdynmkt_thumbnailimage";
		public const string EntityPrimaryNameAttribute = "msdynmkt_name";
		public const string EntitySchemaName = "msdynmkt_emailtemplate";
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(Guid msdynmkt_emailtemplateId)
		{
			Entity = new Entity(EntityLogicalName, msdynmkt_emailtemplateId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_emailtemplate"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_emailtemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_emailtemplate(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdynmkt_emailtemplate"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdynmkt_emailtemplate(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdynmkt_emailtemplate(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Row id unique</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ComponentIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ComponentIdUnique); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Component State</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.ComponentState"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.ComponentState)value.Value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created On</para>
		/// <para><strong>Description</strong>: Date and time when the record was created.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Created By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who created the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? EntityImageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.EntityImageId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Import Sequence Number</para>
		/// <para><strong>Description</strong>: Sequence number of the import that created this record.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Is Managed</para>
		/// <para><strong>Description</strong>: Indicates whether the solution component is part of a managed solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Managed</strong>]: true - [<strong>Unmanaged</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Unmanaged</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By</para>
		/// <para><strong>Description</strong>: Unique identifier of the user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified On</para>
		/// <para><strong>Description</strong>: Date and time when the record was modified.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Modified By (Delegate)</para>
		/// <para><strong>Description</strong>: Unique identifier of the delegate user who modified the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Automatically generate text part</para>
		/// <para><strong>Description</strong>: Automatically generate text part</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Yes</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_automaticallygeneratetextpart
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_automaticallygeneratetextpart); }
			set { Entity.Attributes[Fields.msdynmkt_automaticallygeneratetextpart] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Group</para>
		/// <para><strong>Description</strong>: Template tab category</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_category"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_category.Custom_templates"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_category? msdynmkt_category
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_category);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_category)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_category] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_category] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template compliance settings</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_compliancesettings"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_compliancesettings
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_compliancesettings); }
			set { Entity.Attributes[Fields.msdynmkt_compliancesettings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template compliance settings 3</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_compliancesettings3"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_compliancesettings3
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_compliancesettings3); }
			set { Entity.Attributes[Fields.msdynmkt_compliancesettings3] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template compliance settings 4</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_compliancesettings4"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_compliancesettings4
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_compliancesettings4); }
			set { Entity.Attributes[Fields.msdynmkt_compliancesettings4] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template compliance settings company address</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_compliancesettingscompanyaddress
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_compliancesettingscompanyaddress); }
			set { Entity.Attributes[Fields.msdynmkt_compliancesettingscompanyaddress] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Conditional Content</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 500,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_conditionalcontent
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_conditionalcontent); }
			set { Entity.Attributes[Fields.msdynmkt_conditionalcontent] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Content type</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_contenttype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_contenttype.Default"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_contenttype? msdynmkt_contenttype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_contenttype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_contenttype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_contenttype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_contenttype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Description</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_description); }
			set { Entity.Attributes[Fields.msdynmkt_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Designer HTML</para>
		/// <para><strong>Description</strong>: Designer HTML</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_designerhtml
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_designerhtml); }
			set { Entity.Attributes[Fields.msdynmkt_designerhtml] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email body</para>
		/// <para><strong>Description</strong>: Email body</para>
		/// <para>Required - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_emailbody
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_emailbody); }
			set { Entity.Attributes[Fields.msdynmkt_emailbody] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template</para>
		/// <para><strong>Description</strong>: Unique identifier for entity instances</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdynmkt_emailtemplateId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdynmkt_emailtemplateId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? msdynmkt_entityimageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.msdynmkt_entityimageId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Form to save</para>
		/// <para><strong>Description</strong>: Form to save</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_formtosave
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_formtosave); }
			set { Entity.Attributes[Fields.msdynmkt_formtosave] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: From email</para>
		/// <para><strong>Description</strong>: From email</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_fromemail
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_fromemail); }
			set { Entity.Attributes[Fields.msdynmkt_fromemail] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: From name</para>
		/// <para><strong>Description</strong>: From name</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_fromname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_fromname); }
			set { Entity.Attributes[Fields.msdynmkt_fromname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Label</para>
		/// <para><strong>Description</strong>: Template label</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_label"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_label? msdynmkt_label
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_label);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_label)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_label] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_label] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Language</para>
		/// <para><strong>Description</strong>: Template language</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_language"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_language.English"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_language? msdynmkt_language
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_language);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_language)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_language] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_language] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Marketing provided</para>
		/// <para><strong>Description</strong>: Marketing provided</para>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdynmkt_marketingprovided
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdynmkt_marketingprovided); }
			set { Entity.Attributes[Fields.msdynmkt_marketingprovided] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Message designation</para>
		/// <para><strong>Description</strong>: Message designation</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_messagedesignation"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_messagedesignation.Commercial"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_messagedesignation? msdynmkt_messagedesignation
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_messagedesignation);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_messagedesignation)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_messagedesignation] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_messagedesignation] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Name</para>
		/// <para><strong>Description</strong>: The name of the template</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_name); }
			set { Entity.Attributes[Fields.msdynmkt_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Migration information</para>
		/// <para><strong>Description</strong>: Information for result of migration from outbound marketing email template.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_obmmigrationinfo
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_obmmigrationinfo); }
			set { Entity.Attributes[Fields.msdynmkt_obmmigrationinfo] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Placeholders</para>
		/// <para><strong>Description</strong>: Placeholders</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 500,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_placeholders
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_placeholders); }
			set { Entity.Attributes[Fields.msdynmkt_placeholders] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Preview HTML</para>
		/// <para><strong>Description</strong>: Preview HTML</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_previewhtml
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_previewhtml); }
			set { Entity.Attributes[Fields.msdynmkt_previewhtml] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Preview text</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_previewtext
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_previewtext); }
			set { Entity.Attributes[Fields.msdynmkt_previewtext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template purpose</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_purpose"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_purpose
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_purpose); }
			set { Entity.Attributes[Fields.msdynmkt_purpose] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Reply-to email</para>
		/// <para><strong>Description</strong>: Reply-to email</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 770</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_replytoemail
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_replytoemail); }
			set { Entity.Attributes[Fields.msdynmkt_replytoemail] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Source email ID</para>
		/// <para><strong>Description</strong>: Source email ID</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_sourceemailid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_sourceemailid); }
			set { Entity.Attributes[Fields.msdynmkt_sourceemailid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Category</para>
		/// <para><strong>Description</strong>: Template subcategory</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_subcategory"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_subcategory? msdynmkt_subcategory
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdynmkt_subcategory);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.msdynmkt_subcategory)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdynmkt_subcategory] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdynmkt_subcategory] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Subject</para>
		/// <para><strong>Description</strong>: Subject</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_subject
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_subject); }
			set { Entity.Attributes[Fields.msdynmkt_subject] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Plain text</para>
		/// <para><strong>Description</strong>: Plain text</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,048,576</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_textpart
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdynmkt_textpart); }
			set { Entity.Attributes[Fields.msdynmkt_textpart] = value; }
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? msdynmkt_thumbnailimageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.msdynmkt_thumbnailimageId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Email template topic</para>
		/// <para><strong>Lookup</strong>: <see cref="msdynmkt_topic"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdynmkt_topic
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdynmkt_topic); }
			set { Entity.Attributes[Fields.msdynmkt_topic] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Created On</para>
		/// <para><strong>Description</strong>: Date and time that the record was migrated.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Record Overwrite Time</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owner</para>
		/// <para><strong>Description</strong>: Owner Id</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Business Unit</para>
		/// <para><strong>Description</strong>: Unique identifier for the business unit that owns the record</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning Team</para>
		/// <para><strong>Description</strong>: Unique identifier for the team that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Owning User</para>
		/// <para><strong>Description</strong>: Unique identifier for the user that owns the record.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: Unique identifier of the associated solution.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status</para>
		/// <para><strong>Description</strong>: Status of the Email template</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Status Reason</para>
		/// <para><strong>Description</strong>: Reason for the status of the Email template</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdynmkt_emailtemplateOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Solution</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Time Zone Rule Version Number</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: UTC Conversion Time Zone Code</para>
		/// <para><strong>Description</strong>: Time zone code that was in use when the record was created.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
		/// <summary>
		/// <para>byte[]</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public byte[] msdynmkt_entityimage
		{
			get { return Entity.GetAttributeValue<byte[]>("msdynmkt_entityimage"); }
			set { Entity.Attributes["msdynmkt_entityimage"] = value; }
		}
		/// <summary>
		/// <para>ReadOnly - String</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdynmkt_entityimageUrl
		{
			get { return Entity.GetAttributeValue<string>("msdynmkt_entityimage_url"); }
		}
		/// <summary>
		/// <para>byte[]</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public byte[] EntityImage
		{
			get { return Entity.GetAttributeValue<byte[]>("msdynmkt_thumbnailimage"); }
			set { Entity.Attributes["msdynmkt_thumbnailimage"] = value; }
		}
		/// <summary>
		/// <para>ReadOnly - String</para>
		/// <para>Image</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string EntityImageUrl
		{
			get { return Entity.GetAttributeValue<string>("msdynmkt_thumbnailimage_url"); }
		}
	}
}