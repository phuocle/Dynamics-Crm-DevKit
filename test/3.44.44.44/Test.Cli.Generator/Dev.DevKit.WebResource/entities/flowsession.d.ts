//@ts-check
///<reference path="devkit.d.ts" />
declare namespace DevKit {
	namespace Formflowsession_Information {
		interface Tabs {
		}
		interface Body {
			/** The name of the custom entity. */
			Name: DevKit.Controls.String;
			/** Owner Id */
			OwnerId: DevKit.Controls.Lookup;
		}
		interface Navigation {
			flowevent_flowsession: DevKit.Controls.NavigationItem,
			flowsession_flowlog_flowsessionid: DevKit.Controls.NavigationItem,
			flowsession_flowlog_parentobjectid: DevKit.Controls.NavigationItem,
			flowsession_workflowbinary_FlowSessionId: DevKit.Controls.NavigationItem
		}
	}
	class Formflowsession_Information extends DevKit.IForm {
		/**
		* Information [Main Form]
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Utility;
		/** The Body section of form flowsession_Information */
		Body: DevKit.Formflowsession_Information.Body;
		/** The Navigation of form flowsession_Information */
		Navigation: DevKit.Formflowsession_Information.Navigation;
		/** The SidePanes of form flowsession_Information */
		SidePanes: DevKit.SidePanes;
	}
	class flowsessionApi {
		/**
		* DynamicsCrm.DevKit flowsessionApi
		* @param entity The entity object
		*/
		constructor(entity?: any);
		/**
		 * Get the value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedValue(alias: string, isMultiOptionSet?: boolean): any;
		/**
		 * Get the formatted value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedFormattedValue(alias: string, isMultiOptionSet?: boolean): string;
		/** The entity object for Create/Update */
		Entity: unknown;
		/** The OData entity object */
		ODataEntity: unknown;
		/** The entity name */
		EntityName: string;
		/** The entity collection name */
		EntityCollectionName: string;
		/** The @odata.etag is then used to build a cache of the response that is dependant on the fields that are retrieved */
		"@odata.etag": string;
		/** Additional context about flow session. */
		readonly AdditionalContext_name: string;
		/** URL that will be called once the flow session is complete. */
		CallbackUrl: string;
		/** The date and time at which the flow session was completed. */
		CompletedOn_UtcDateAndTime: Date;
		/** The id of the connection used in the Desktop Flow run. */
		ConnectionId: string;
		/** Context about flow session. */
		Context: string;
		/** Unique identifier used to correlate between multiple SDK requests and flow executions. */
		CorrelationId: string;
		/** Unique identifier of the user who created the record. */
		readonly CreatedBy: string;
		/** Date and time when the record was created. */
		readonly CreatedOn_UtcDateAndTime: Date;
		/** Unique identifier of the delegate user who created the record. */
		readonly CreatedOnBehalfBy: string;
		/** Credentials related to this run. */
		Credentials: string;
		/** Error code describing the failure in flow session execution. */
		ErrorCode: string;
		/** Details of the failure in flow session execution. */
		ErrorDetails: string;
		/** Specific information about the failure in flow session execution. */
		ErrorInnerError: string;
		/** Message describing the failure in flow session execution. */
		ErrorMessage: string;
		/** Unique identifier for entity instances */
		flowsessionId: string;
		/** The name of the gateway used. */
		Gateway: string;
		/** Sequence number of the import that created this record. */
		ImportSequenceNumber: number;
		/** Inputs provided for the flow session execution. */
		readonly Inputs_name: string;
		MachineGroupId: string;
		MachineId: string;
		/** The percentage of CPU utilization by the machine */
		MachinePercentCpuUsage: number;
		/** The percentage of RAM utilization by the machine */
		MachinePercentRamUsage: number;
		/** The machine RAM usage in Mo */
		MachineRamUsage: number;
		/** Unique identifier of the user who modified the record. */
		readonly ModifiedBy: string;
		/** Date and time when the record was modified. */
		readonly ModifiedOn_UtcDateAndTime: Date;
		/** Unique identifier of the delegate user who modified the record. */
		readonly ModifiedOnBehalfBy: string;
		/** The name of the custom entity. */
		Name: string;
		/** Outputs generated by the flow session execution. */
		readonly Outputs_name: string;
		/** Date and time that the record was migrated. */
		OverriddenCreatedOn_UtcDateOnly: Date;
		/** Enter the user who is assigned to manage the record. This field is updated every time the record is assigned to a different user */
		OwnerId_systemuser: string;
		/** Enter the team who is assigned to manage the record. This field is updated every time the record is assigned to a different team */
		OwnerId_team: string;
		/** Unique identifier for the business unit that owns the record */
		readonly OwningBusinessUnit: string;
		/** Unique identifier for the team that owns the record. */
		readonly OwningTeam: string;
		/** Unique identifier for the user that owns the record. */
		readonly OwningUser: string;
		/** The sequence id of the parent cloud flow run, only used when the Desktop Flow was run by a cloud flow. */
		ParentCloudFlowRunSequenceId: string;
		/** Id of the parent workflow, cloud flow or desktop flow. */
		ParentWorkflowId: string;
		/** The version of the process with which the flow session is associated. */
		ProcessVersion: string;
		/** Unique identifier of the process with which the flow session is associated. */
		RegardingObjectId: string;
		/** Details about the run. */
		RunDetails: string;
		/** Duration of the run. */
		RunDuration: number;
		/** Duration of the run execution. */
		RunExecutionDuration: number;
		/** Indicates the run mode of the desktop flow run. */
		RunMode: OptionSet.flowsession.RunMode;
		/** Indicates the run session mode of the desktop flow run. */
		RunSessionMode: OptionSet.flowsession.RunSessionMode;
		/** Time the run spent waiting. */
		RunWaitDuration: number;
		/** The username used in the Desktop Flow run. */
		SessionUsername: string;
		/** The SID of the user used in the Desktop Flow run. */
		SessionUserSID: string;
		/** The date and time at which the flow session was started. */
		StartedOn_UtcDateAndTime: Date;
		/** Status of the FlowSession */
		statecode: OptionSet.flowsession.statecode;
		/** Reason for the status of the FlowSession */
		statuscode: OptionSet.flowsession.statuscode;
		/** For internal use only. */
		TimeZoneRuleVersionNumber: number;
		/** Indicates the type of trigger used to run the desktop flow. */
		TriggerType: OptionSet.flowsession.TriggerType;
		/** Time zone code that was in use when the record was created. */
		UTCConversionTimeZoneCode: number;
		/** Version Number */
		readonly VersionNumber: number;
		readonly FormattedValue: {
			/** Additional context about flow session. */
			readonly AdditionalContext_name: string;
			/** URL that will be called once the flow session is complete. */
			readonly CallbackUrl: string;
			/** The date and time at which the flow session was completed. */
			readonly CompletedOn_UtcDateAndTime: string;
			/** The id of the connection used in the Desktop Flow run. */
			readonly ConnectionId: string;
			/** Context about flow session. */
			readonly Context: string;
			/** Unique identifier used to correlate between multiple SDK requests and flow executions. */
			readonly CorrelationId: string;
			/** Unique identifier of the user who created the record. */
			readonly CreatedBy: string;
			/** Date and time when the record was created. */
			readonly CreatedOn_UtcDateAndTime: string;
			/** Unique identifier of the delegate user who created the record. */
			readonly CreatedOnBehalfBy: string;
			/** Credentials related to this run. */
			readonly Credentials: string;
			/** Error code describing the failure in flow session execution. */
			readonly ErrorCode: string;
			/** Details of the failure in flow session execution. */
			readonly ErrorDetails: string;
			/** Specific information about the failure in flow session execution. */
			readonly ErrorInnerError: string;
			/** Message describing the failure in flow session execution. */
			readonly ErrorMessage: string;
			/** Unique identifier for entity instances */
			readonly flowsessionId: string;
			/** The name of the gateway used. */
			readonly Gateway: string;
			/** Sequence number of the import that created this record. */
			readonly ImportSequenceNumber: string;
			/** Inputs provided for the flow session execution. */
			readonly Inputs_name: string;
			readonly MachineGroupId: string;
			readonly MachineId: string;
			/** The percentage of CPU utilization by the machine */
			readonly MachinePercentCpuUsage: string;
			/** The percentage of RAM utilization by the machine */
			readonly MachinePercentRamUsage: string;
			/** The machine RAM usage in Mo */
			readonly MachineRamUsage: string;
			/** Unique identifier of the user who modified the record. */
			readonly ModifiedBy: string;
			/** Date and time when the record was modified. */
			readonly ModifiedOn_UtcDateAndTime: string;
			/** Unique identifier of the delegate user who modified the record. */
			readonly ModifiedOnBehalfBy: string;
			/** The name of the custom entity. */
			readonly Name: string;
			/** Outputs generated by the flow session execution. */
			readonly Outputs_name: string;
			/** Date and time that the record was migrated. */
			readonly OverriddenCreatedOn_UtcDateOnly: string;
			/** Enter the user who is assigned to manage the record. This field is updated every time the record is assigned to a different user */
			readonly OwnerId_systemuser: string;
			/** Enter the team who is assigned to manage the record. This field is updated every time the record is assigned to a different team */
			readonly OwnerId_team: string;
			/** Unique identifier for the business unit that owns the record */
			readonly OwningBusinessUnit: string;
			/** Unique identifier for the team that owns the record. */
			readonly OwningTeam: string;
			/** Unique identifier for the user that owns the record. */
			readonly OwningUser: string;
			/** The sequence id of the parent cloud flow run, only used when the Desktop Flow was run by a cloud flow. */
			readonly ParentCloudFlowRunSequenceId: string;
			/** Id of the parent workflow, cloud flow or desktop flow. */
			readonly ParentWorkflowId: string;
			/** The version of the process with which the flow session is associated. */
			readonly ProcessVersion: string;
			/** Unique identifier of the process with which the flow session is associated. */
			readonly RegardingObjectId: string;
			/** Details about the run. */
			readonly RunDetails: string;
			/** Duration of the run. */
			readonly RunDuration: string;
			/** Duration of the run execution. */
			readonly RunExecutionDuration: string;
			/** Indicates the run mode of the desktop flow run. */
			readonly RunMode: string;
			/** Indicates the run session mode of the desktop flow run. */
			readonly RunSessionMode: string;
			/** Time the run spent waiting. */
			readonly RunWaitDuration: string;
			/** The username used in the Desktop Flow run. */
			readonly SessionUsername: string;
			/** The SID of the user used in the Desktop Flow run. */
			readonly SessionUserSID: string;
			/** The date and time at which the flow session was started. */
			readonly StartedOn_UtcDateAndTime: string;
			/** Status of the FlowSession */
			readonly statecode: string;
			/** Reason for the status of the FlowSession */
			readonly statuscode: string;
			/** For internal use only. */
			readonly TimeZoneRuleVersionNumber: string;
			/** Indicates the type of trigger used to run the desktop flow. */
			readonly TriggerType: string;
			/** Time zone code that was in use when the record was created. */
			readonly UTCConversionTimeZoneCode: string;
			/** Version Number */
			readonly VersionNumber: string;
		}
	}
}
declare namespace OptionSet {
	namespace flowsession {
		enum RegardingObjectTypeCode {
		}
		enum RunMode {
			/** 1 */
			Attended,
			/** 0 */
			Local,
			/** 2 */
			Unattended
		}
		enum RunSessionMode {
			/** 1 */
			Default,
			/** 2 */
			PictureInPicture,
			/** 0 */
			Unapplicable
		}
		enum statecode {
			/** 0 */
			Active,
			/** 1 */
			Inactive
		}
		enum statuscode {
			/** 11 */
			Aborted,
			/** 7 */
			Cancelled,
			/** 13 */
			Deleted,
			/** 8 */
			Failed,
			/** 9 */
			Faulted,
			/** 12 */
			Ignored,
			/** 0 */
			NotSpecified,
			/** 1 */
			Paused,
			/** 2 */
			Running,
			/** 5 */
			Skipped,
			/** 4 */
			Succeeded,
			/** 6 */
			Suspended,
			/** 14 */
			Terminated,
			/** 10 */
			TimedOut,
			/** 3 */
			Waiting
		}
		enum TriggerType {
			/** 0 */
			ApiFlow,
			/** 1 */
			DesktopFlow,
			/** 2 */
			Local,
			/** 3 */
			RunDesktopFlowDataverseApi
		}
		enum RollupState {
			/** 0 - Attribute value is yet to be calculated */
			NotCalculated,
			/** 1 - Attribute value has been calculated per the last update time in <AttributeSchemaName>_Date attribute */
			Calculated,
			/** 2 - Attribute value calculation lead to overflow error */
			OverflowError,
			/** 3 - Attribute value calculation failed due to an internal error, next run of calculation job will likely fix it */
			OtherError,
			/** 4 - Attribute value calculation failed because the maximum number of retry attempts to calculate the value were exceeded likely due to high number of concurrency and locking conflicts */
			RetryLimitExceeded,
			/** 5 - Attribute value calculation failed because maximum hierarchy depth limit for calculation was reached */
			HierarchicalRecursionLimitReached,
			/** 6 - Attribute value calculation failed because a recursive loop was detected in the hierarchy of the record */
			LoopDetected
		}
	}
}
//{'UseForm':true,'UseWebApi':true,'Version':'3.44.44.44'}