//@ts-check
///<reference path="devkit.d.ts" />
declare namespace DevKit {
	namespace FormCopilotExampleQuestion_main_form {
		interface Tabs {
		}
		interface Body {
			/** AppContext for distinguishing between apps within the organization. */
			AppContext: DevKit.Controls.String;
			/** Explanation of the question. */
			Comment: DevKit.Controls.String;
			/** DynamicKnowledge. */
			DynamicKnowledge: DevKit.Controls.String;
			/** EntityScope that can be used to extract results. Format: [entityscopeA], [entityscopeB] */
			EntityScope: DevKit.Controls.String;
			/** EntityScopeColumn within the EntityScope specified above.Format: [EntityScopeA].[EntityScopeColumnA1], [EntityScopeB].[EntityScopeColumnB2] */
			EntityScopeColumn: DevKit.Controls.String;
			/** Knowledge Type: Example Question, Dynamic Knowledge. */
			knowledgetype: DevKit.Controls.OptionSet;
			Question: DevKit.Controls.String;
			/** Rephrase generated by NL2SQ. */
			Rephrase: DevKit.Controls.String;
			SkillId: DevKit.Controls.Lookup;
			/** Feedback by the maker after they validate the standard sql. */
			SQLCorrectness: DevKit.Controls.OptionSet;
			/** Updated by the NL2SQ service/ Maker. This is for the maker to validate. */
			StandardSQL: DevKit.Controls.String;
		}
		interface Navigation {

		}
	}
	class FormCopilotExampleQuestion_main_form extends DevKit.IForm {
		/**
		* CopilotExampleQuestion main form [Main Form]
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Utility;
		/** The Body section of form CopilotExampleQuestion_main_form */
		Body: DevKit.FormCopilotExampleQuestion_main_form.Body;
		/** The Navigation of form CopilotExampleQuestion_main_form */
		Navigation: DevKit.FormCopilotExampleQuestion_main_form.Navigation;
		/** The SidePanes of form CopilotExampleQuestion_main_form */
		SidePanes: DevKit.SidePanes;
	}
	namespace FormCopilotExampleQuestion_Information {
		interface Tabs {
		}
		interface Body {
			Question: DevKit.Controls.String;
		}
		interface Navigation {

		}
	}
	class FormCopilotExampleQuestion_Information extends DevKit.IForm {
		/**
		* Information [Main Form]
		* @param executionContext the execution context
		* @param defaultWebResourceName default resource name. E.g.: "devkit_/resources/Resource"
		*/
		constructor(executionContext: any, defaultWebResourceName?: string);
		/** Utility functions/methods/objects for Dynamics 365 form */
		Utility: DevKit.Utility;
		/** The Body section of form CopilotExampleQuestion_Information */
		Body: DevKit.FormCopilotExampleQuestion_Information.Body;
		/** The Navigation of form CopilotExampleQuestion_Information */
		Navigation: DevKit.FormCopilotExampleQuestion_Information.Navigation;
		/** The SidePanes of form CopilotExampleQuestion_Information */
		SidePanes: DevKit.SidePanes;
	}
	class CopilotExampleQuestionApi {
		/**
		* DynamicsCrm.DevKit CopilotExampleQuestionApi
		* @param entity The entity object
		*/
		constructor(entity?: any);
		/**
		 * Get the value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedValue(alias: string, isMultiOptionSet?: boolean): any;
		/**
		 * Get the formatted value of alias
		 * @param alias the alias value
		 * @param isMultiOptionSet true if the alias is multi OptionSet
		 */
		getAliasedFormattedValue(alias: string, isMultiOptionSet?: boolean): string;
		/** The entity object for Create/Update */
		Entity: unknown;
		/** The OData entity object */
		ODataEntity: unknown;
		/** The entity name */
		EntityName: string;
		/** The entity collection name */
		EntityCollectionName: string;
		/** The @odata.etag is then used to build a cache of the response that is dependant on the fields that are retrieved */
		"@odata.etag": string;
		/** AppContext for distinguishing between apps within the organization. */
		AppContext: string;
		/** Explanation of the question. */
		Comment: string;
		/** For internal use only. */
		readonly ComponentIdUnique: string;
		/** For internal use only. */
		readonly ComponentState: OptionSet.CopilotExampleQuestion.ComponentState;
		/** Unique identifier for entity instances */
		CopilotExampleQuestionId: string;
		/** Unique identifier of the user who created the record. */
		readonly CreatedBy: string;
		/** Date and time when the record was created. */
		readonly CreatedOn_UtcDateAndTime: Date;
		/** Unique identifier of the delegate user who created the record. */
		readonly CreatedOnBehalfBy: string;
		/** CustomDimension. */
		CustomDimension: string;
		/** CustomField. */
		CustomField: string;
		/** DynamicKnowledge. */
		DynamicKnowledge: string;
		/** EntityScope that can be used to extract results. Format: [entityscopeA], [entityscopeB] */
		EntityScope: string;
		/** EntityScopeColumn within the EntityScope specified above.Format: [EntityScopeA].[EntityScopeColumnA1], [EntityScopeB].[EntityScopeColumnB2] */
		EntityScopeColumn: string;
		/** Sequence number of the import that created this record. */
		ImportSequenceNumber: number;
		/** For internal use only. */
		IsCustomizable: string;
		/** Indicates whether the solution component is part of a managed solution. */
		readonly IsManaged: boolean;
		/** The information and understanding that the model has acquired through its training data. */
		knowledge: string;
		/** Knowledge Type: Example Question, Dynamic Knowledge. */
		knowledgetype: OptionSet.CopilotExampleQuestion.knowledgetype;
		/** Unique identifier of the user who modified the record. */
		readonly ModifiedBy: string;
		/** Date and time when the record was modified. */
		readonly ModifiedOn_UtcDateAndTime: Date;
		/** Unique identifier of the delegate user who modified the record. */
		readonly ModifiedOnBehalfBy: string;
		/** Unique identifier for the organization */
		readonly OrganizationId: string;
		/** Date and time that the record was migrated. */
		OverriddenCreatedOn_UtcDateOnly: Date;
		/** For internal use only. */
		readonly OverwriteTime_UtcDateAndTime: Date;
		Question: string;
		/** Rephrase generated by NL2SQ. */
		Rephrase: string;
		/** skill name for distinguishing between apps within the organization. */
		Skill: string;
		SkillId: string;
		/** Unique identifier of the associated solution. */
		readonly SolutionId: string;
		/** Feedback by the maker after they validate the standard sql. */
		SQLCorrectness: OptionSet.CopilotExampleQuestion.SQLCorrectness;
		/** Updated by the NL2SQ service/ Maker. This is for the maker to validate. */
		StandardSQL: string;
		/** Status of the CopilotExampleQuestion */
		statecode: OptionSet.CopilotExampleQuestion.statecode;
		/** Reason for the status of the CopilotExampleQuestion */
		statuscode: OptionSet.CopilotExampleQuestion.statuscode;
		/** For internal use only. */
		readonly SupportingSolutionId: string;
		/** For internal use only. */
		TimeZoneRuleVersionNumber: number;
		/** Time zone code that was in use when the record was created. */
		UTCConversionTimeZoneCode: number;
		/** Version Number */
		readonly VersionNumber: number;
		readonly FormattedValue: {
			/** AppContext for distinguishing between apps within the organization. */
			readonly AppContext: string;
			/** Explanation of the question. */
			readonly Comment: string;
			/** For internal use only. */
			readonly ComponentIdUnique: string;
			/** For internal use only. */
			readonly ComponentState: string;
			/** Unique identifier for entity instances */
			readonly CopilotExampleQuestionId: string;
			/** Unique identifier of the user who created the record. */
			readonly CreatedBy: string;
			/** Date and time when the record was created. */
			readonly CreatedOn_UtcDateAndTime: string;
			/** Unique identifier of the delegate user who created the record. */
			readonly CreatedOnBehalfBy: string;
			/** CustomDimension. */
			readonly CustomDimension: string;
			/** CustomField. */
			readonly CustomField: string;
			/** DynamicKnowledge. */
			readonly DynamicKnowledge: string;
			/** EntityScope that can be used to extract results. Format: [entityscopeA], [entityscopeB] */
			readonly EntityScope: string;
			/** EntityScopeColumn within the EntityScope specified above.Format: [EntityScopeA].[EntityScopeColumnA1], [EntityScopeB].[EntityScopeColumnB2] */
			readonly EntityScopeColumn: string;
			/** Sequence number of the import that created this record. */
			readonly ImportSequenceNumber: string;
			/** For internal use only. */
			readonly IsCustomizable: string;
			/** Indicates whether the solution component is part of a managed solution. */
			readonly IsManaged: string;
			/** The information and understanding that the model has acquired through its training data. */
			readonly knowledge: string;
			/** Knowledge Type: Example Question, Dynamic Knowledge. */
			readonly knowledgetype: string;
			/** Unique identifier of the user who modified the record. */
			readonly ModifiedBy: string;
			/** Date and time when the record was modified. */
			readonly ModifiedOn_UtcDateAndTime: string;
			/** Unique identifier of the delegate user who modified the record. */
			readonly ModifiedOnBehalfBy: string;
			/** Unique identifier for the organization */
			readonly OrganizationId: string;
			/** Date and time that the record was migrated. */
			readonly OverriddenCreatedOn_UtcDateOnly: string;
			/** For internal use only. */
			readonly OverwriteTime_UtcDateAndTime: string;
			readonly Question: string;
			/** Rephrase generated by NL2SQ. */
			readonly Rephrase: string;
			/** skill name for distinguishing between apps within the organization. */
			readonly Skill: string;
			readonly SkillId: string;
			/** Unique identifier of the associated solution. */
			readonly SolutionId: string;
			/** Feedback by the maker after they validate the standard sql. */
			readonly SQLCorrectness: string;
			/** Updated by the NL2SQ service/ Maker. This is for the maker to validate. */
			readonly StandardSQL: string;
			/** Status of the CopilotExampleQuestion */
			readonly statecode: string;
			/** Reason for the status of the CopilotExampleQuestion */
			readonly statuscode: string;
			/** For internal use only. */
			readonly SupportingSolutionId: string;
			/** For internal use only. */
			readonly TimeZoneRuleVersionNumber: string;
			/** Time zone code that was in use when the record was created. */
			readonly UTCConversionTimeZoneCode: string;
			/** Version Number */
			readonly VersionNumber: string;
		}
	}
}
declare namespace OptionSet {
	namespace CopilotExampleQuestion {
		enum ComponentState {
			/** 2 */
			Deleted,
			/** 3 */
			Deleted_Unpublished,
			/** 0 */
			Published,
			/** 1 */
			Unpublished
		}
		enum knowledgetype {
			/** 1 */
			Example_Knowledge,
			/** 0 */
			Example_Question
		}
		enum SQLCorrectness {
			/** 2 */
			Invalid,
			/** 3 */
			NotSure,
			/** 0 */
			Pending_Validation,
			/** 1 */
			Valid
		}
		enum statecode {
			/** 0 */
			Active,
			/** 1 */
			Inactive
		}
		enum statuscode {
			/** 1 */
			Active,
			/** 2 */
			Inactive
		}
		enum RollupState {
			/** 0 - Attribute value is yet to be calculated */
			NotCalculated,
			/** 1 - Attribute value has been calculated per the last update time in <AttributeSchemaName>_Date attribute */
			Calculated,
			/** 2 - Attribute value calculation lead to overflow error */
			OverflowError,
			/** 3 - Attribute value calculation failed due to an internal error, next run of calculation job will likely fix it */
			OtherError,
			/** 4 - Attribute value calculation failed because the maximum number of retry attempts to calculate the value were exceeded likely due to high number of concurrency and locking conflicts */
			RetryLimitExceeded,
			/** 5 - Attribute value calculation failed because maximum hierarchy depth limit for calculation was reached */
			HierarchicalRecursionLimitReached,
			/** 6 - Attribute value calculation failed because a recursive loop was detected in the hierarchy of the record */
			LoopDetected
		}
	}
}
//{'UseForm':true,'UseWebApi':true,'Version':'3.44.44.44'}