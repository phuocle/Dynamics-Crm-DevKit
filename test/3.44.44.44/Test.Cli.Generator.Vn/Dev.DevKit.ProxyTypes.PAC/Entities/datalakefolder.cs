#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Trạng thái của Thư mục Data Lake
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum datalakefolder_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của Thư mục Data Lake
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum datalakefolder_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghoatng = 2,
	}
	
	/// <summary>
	/// Thư mục là nơi lưu trữ dữ liệu trong Azure Data Lake.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("datalakefolder")]
	public partial class datalakefolder : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the datalakefolder entity
		/// </summary>
		public partial class Fields
		{
			public const string AccessType = "accesstype";
			public const string CDMPath = "cdmpath";
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string containerendpoint = "containerendpoint";
			public const string ContributorSecurityGroupId = "contributorsecuritygroupid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string datalakefolder_UniqueName = "datalakefolder_uniquename";
			public const string datalakefolderId = "datalakefolderid";
			public const string Id = "datalakefolderid";
			public const string deltaLakePath = "deltaLakePath";
			public const string extendedproperties = "extendedproperties";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string iscustomercapacity = "iscustomercapacity";
			public const string iscustomercapacityName = "iscustomercapacityname";
			public const string IsCustomizable = "iscustomizable";
			public const string isdeepcopyenabled = "isdeepcopyenabled";
			public const string isdeepcopyenabledName = "isdeepcopyenabledname";
			public const string IsExternalLake = "isexternallake";
			public const string isexternallakeName = "isexternallakename";
			public const string IsExternalLakeReadOnly = "isexternallakereadonly";
			public const string isexternallakereadonlyName = "isexternallakereadonlyname";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string isprivate = "isprivate";
			public const string isprivateName = "isprivatename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string owningappid = "owningappid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string parentfolderid = "parentfolderid";
			public const string parentfolderidName = "parentfolderidname";
			public const string path = "path";
			public const string ReaderSecurityGroupId = "readersecuritygroupid";
			public const string ResourceGroup = "resourcegroup";
			public const string sharedforreadaccess = "sharedforreadaccess";
			public const string sharedforreadaccessName = "sharedforreadaccessname";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string Subscription = "subscription";
			public const string SynchronizeSchemaToDataverse = "synchronizeschematodataverse";
			public const string synchronizeschematodataverseName = "synchronizeschematodataversename";
			public const string SynchronizeSchemaToSynapseDb = "synchronizeschematosynapsedb";
			public const string synchronizeschematosynapsedbName = "synchronizeschematosynapsedbname";
			public const string Tenant = "tenant";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string datalakefolder_AsyncOperations = "datalakefolder_AsyncOperations";
			public const string datalakefolder_BulkDeleteFailures = "datalakefolder_BulkDeleteFailures";
			public const string datalakefolder_datalakefolderpermission = "datalakefolder_datalakefolderpermission";
			public const string Referenceddatalakefolder_datalakesubfolder = "Referenceddatalakefolder_datalakesubfolder";
			public const string datalakefolder_DuplicateBaseRecord = "datalakefolder_DuplicateBaseRecord";
			public const string datalakefolder_DuplicateMatchingRecord = "datalakefolder_DuplicateMatchingRecord";
			public const string datalakefolder_MailboxTrackingFolders = "datalakefolder_MailboxTrackingFolders";
			public const string datalakefolder_PrincipalObjectAttributeAccesses = "datalakefolder_PrincipalObjectAttributeAccesses";
			public const string datalakefolder_ProcessSession = "datalakefolder_ProcessSession";
			public const string datalakefolder_SyncErrors = "datalakefolder_SyncErrors";
			public const string datalakefolder_UserEntityInstanceDatas = "datalakefolder_UserEntityInstanceDatas";
			public const string msdyn_dataflow_datalakefolder_dlfolder = "msdyn_dataflow_datalakefolder_dlfolder";
			public const string synapsedatabases = "synapsedatabases";
			public const string synapselinkexternaltablestates = "synapselinkexternaltablestates";
			public const string synapselinkprofiles = "synapselinkprofiles";
			public const string business_unit_datalakefolder = "business_unit_datalakefolder";
			public const string Referencingdatalakefolder_datalakesubfolder = "datalakefolder_datalakesubfolder";
			public const string lk_datalakefolder_createdby = "lk_datalakefolder_createdby";
			public const string lk_datalakefolder_createdonbehalfby = "lk_datalakefolder_createdonbehalfby";
			public const string lk_datalakefolder_modifiedby = "lk_datalakefolder_modifiedby";
			public const string lk_datalakefolder_modifiedonbehalfby = "lk_datalakefolder_modifiedonbehalfby";
			public const string team_datalakefolder = "team_datalakefolder";
			public const string user_datalakefolder = "user_datalakefolder";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public datalakefolder() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "datalakefolder";
		
		public const string EntityLogicalCollectionName = "datalakefolders";
		
		public const string EntitySetName = "datalakefolders";
		
		public const int EntityTypeCode = 10036;
		
		/// <summary>
		/// Loại quyền truy cập Azure Data Lake.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accesstype")]
		public string AccessType
		{
			get
			{
				return this.GetAttributeValue<string>("accesstype");
			}
			set
			{
				this.SetAttributeValue("accesstype", value);
			}
		}
		
		/// <summary>
		/// Đường dẫn đến tệp CDM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdmpath")]
		public string CDMPath
		{
			get
			{
				return this.GetAttributeValue<string>("cdmpath");
			}
			set
			{
				this.SetAttributeValue("cdmpath", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Điểm cuối bộ chứa Azure Data Lake cho thư mục này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("containerendpoint")]
		public string containerendpoint
		{
			get
			{
				return this.GetAttributeValue<string>("containerendpoint");
			}
			set
			{
				this.SetAttributeValue("containerendpoint", value);
			}
		}
		
		/// <summary>
		/// Nhóm bảo mật cho quyền truy cập của người đóng góp.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contributorsecuritygroupid")]
		public System.Nullable<System.Guid> ContributorSecurityGroupId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contributorsecuritygroupid");
			}
			set
			{
				this.SetAttributeValue("contributorsecuritygroupid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên duy nhất cho thực thể.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datalakefolder_uniquename")]
		public string datalakefolder_UniqueName
		{
			get
			{
				return this.GetAttributeValue<string>("datalakefolder_uniquename");
			}
			set
			{
				this.SetAttributeValue("datalakefolder_uniquename", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datalakefolderid")]
		public System.Nullable<System.Guid> datalakefolderId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("datalakefolderid");
			}
			set
			{
				this.SetAttributeValue("datalakefolderid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datalakefolderid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.datalakefolderId = value;
			}
		}
		
		/// <summary>
		/// Đường dẫn thư mục con đến Delta Lake.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deltaLakePath")]
		public string deltaLakePath
		{
			get
			{
				return this.GetAttributeValue<string>("deltaLakePath");
			}
			set
			{
				this.SetAttributeValue("deltaLakePath", value);
			}
		}
		
		/// <summary>
		/// Thuộc tính mở rộng liên kết với thư mục này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("extendedproperties")]
		public string extendedproperties
		{
			get
			{
				return this.GetAttributeValue<string>("extendedproperties");
			}
			set
			{
				this.SetAttributeValue("extendedproperties", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu bộ lưu trữ dữ liệu thư mục có sử dụng dung lượng của khách hàng hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomercapacity")]
		public System.Nullable<bool> iscustomercapacity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscustomercapacity");
			}
			set
			{
				this.SetAttributeValue("iscustomercapacity", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomercapacityname")]
		public string iscustomercapacityName
		{
			get
			{
				if (this.FormattedValues.Contains("iscustomercapacity"))
				{
					return this.FormattedValues["iscustomercapacity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Cho biết bản sao sâu có được bật cho thư mục hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdeepcopyenabled")]
		public System.Nullable<bool> isdeepcopyenabled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdeepcopyenabled");
			}
			set
			{
				this.SetAttributeValue("isdeepcopyenabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdeepcopyenabledname")]
		public string isdeepcopyenabledName
		{
			get
			{
				if (this.FormattedValues.Contains("isdeepcopyenabled"))
				{
					return this.FormattedValues["isdeepcopyenabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết kho dữ liệu là được quản lý hay bên ngoài.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternallake")]
		public System.Nullable<bool> IsExternalLake
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexternallake");
			}
			set
			{
				this.SetAttributeValue("isexternallake", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternallakename")]
		public string isexternallakeName
		{
			get
			{
				if (this.FormattedValues.Contains("isexternallake"))
				{
					return this.FormattedValues["isexternallake"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết kho dữ liệu bên ngoài có ở chế độ chỉ đọc hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternallakereadonly")]
		public System.Nullable<bool> IsExternalLakeReadOnly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexternallakereadonly");
			}
			set
			{
				this.SetAttributeValue("isexternallakereadonly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexternallakereadonlyname")]
		public string isexternallakereadonlyName
		{
			get
			{
				if (this.FormattedValues.Contains("isexternallakereadonly"))
				{
					return this.FormattedValues["isexternallakereadonly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết siêu dữ liệu và dữ liệu thư mục hiển thị với tất cả các ứng dụng hay chỉ hiển thị với chủ sở hữu thư mục và các ứng dụng có quyền rõ ràng đối với thư mục.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivate")]
		public System.Nullable<bool> isprivate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isprivate");
			}
			set
			{
				this.SetAttributeValue("isprivate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprivatename")]
		public string isprivateName
		{
			get
			{
				if (this.FormattedValues.Contains("isprivate"))
				{
					return this.FormattedValues["isprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// ID Chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// ID ứng dụng sở hữu thư mục này. ID ứng dụng sở hữu có toàn quyền kiểm soát, tức là quyền đọc, ghi và thực thi trên thư mục ADLS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningappid")]
		public System.Nullable<System.Guid> owningappid
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owningappid");
			}
			set
			{
				this.SetAttributeValue("owningappid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của thư mục mẹ cho thư mục này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentfolderid")]
		public Microsoft.Xrm.Sdk.EntityReference parentfolderid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentfolderid");
			}
			set
			{
				this.SetAttributeValue("parentfolderid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentfolderidname")]
		public string parentfolderidName
		{
			get
			{
				if (this.FormattedValues.Contains("parentfolderid"))
				{
					return this.FormattedValues["parentfolderid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Đường dẫn đến thư mục trong bộ chứa Azure Data Lake.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("path")]
		public string path
		{
			get
			{
				return this.GetAttributeValue<string>("path");
			}
			set
			{
				this.SetAttributeValue("path", value);
			}
		}
		
		/// <summary>
		/// Nhóm bảo mật cho quyền truy cập của người đọc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("readersecuritygroupid")]
		public System.Nullable<System.Guid> ReaderSecurityGroupId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("readersecuritygroupid");
			}
			set
			{
				this.SetAttributeValue("readersecuritygroupid", value);
			}
		}
		
		/// <summary>
		/// Nhóm nguồn lực Azure của tài khoản lưu trữ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourcegroup")]
		public string ResourceGroup
		{
			get
			{
				return this.GetAttributeValue<string>("resourcegroup");
			}
			set
			{
				this.SetAttributeValue("resourcegroup", value);
			}
		}
		
		/// <summary>
		/// Indicates if folder is shared for readaccess for other FPAs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharedforreadaccess")]
		public System.Nullable<bool> sharedforreadaccess
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sharedforreadaccess");
			}
			set
			{
				this.SetAttributeValue("sharedforreadaccess", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharedforreadaccessname")]
		public string sharedforreadaccessName
		{
			get
			{
				if (this.FormattedValues.Contains("sharedforreadaccess"))
				{
					return this.FormattedValues["sharedforreadaccess"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của Thư mục Data Lake
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual datalakefolder_statecode? statecode
		{
			get
			{
				return ((datalakefolder_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của Thư mục Data Lake
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual datalakefolder_statuscode? statuscode
		{
			get
			{
				return ((datalakefolder_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Gói đăng ký Azure của tài khoản lưu trữ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscription")]
		public string Subscription
		{
			get
			{
				return this.GetAttributeValue<string>("subscription");
			}
			set
			{
				this.SetAttributeValue("subscription", value);
			}
		}
		
		/// <summary>
		/// Bật đồng bộ hóa sơ đồ với Dataverse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizeschematodataverse")]
		public System.Nullable<bool> SynchronizeSchemaToDataverse
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("synchronizeschematodataverse");
			}
			set
			{
				this.SetAttributeValue("synchronizeschematodataverse", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizeschematodataversename")]
		public string synchronizeschematodataverseName
		{
			get
			{
				if (this.FormattedValues.Contains("synchronizeschematodataverse"))
				{
					return this.FormattedValues["synchronizeschematodataverse"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Bật đồng bộ hóa sơ đồ với cơ sở dữ liệu Synapse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizeschematosynapsedb")]
		public System.Nullable<bool> SynchronizeSchemaToSynapseDb
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("synchronizeschematosynapsedb");
			}
			set
			{
				this.SetAttributeValue("synchronizeschematosynapsedb", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizeschematosynapsedbname")]
		public string synchronizeschematosynapsedbName
		{
			get
			{
				if (this.FormattedValues.Contains("synchronizeschematosynapsedb"))
				{
					return this.FormattedValues["synchronizeschematosynapsedb"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Azure Tenant của tài khoản lưu trữ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tenant")]
		public string Tenant
		{
			get
			{
				return this.GetAttributeValue<string>("tenant");
			}
			set
			{
				this.SetAttributeValue("tenant", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã dùng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> datalakefolder_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("datalakefolder_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("datalakefolder_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> datalakefolder_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("datalakefolder_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("datalakefolder_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_datalakefolderpermission
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_datalakefolderpermission")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.datalakefolderpermission> datalakefolder_datalakefolderpermission
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.datalakefolderpermission>("datalakefolder_datalakefolderpermission", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.datalakefolderpermission>("datalakefolder_datalakefolderpermission", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_datalakesubfolder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.datalakefolder> Referenceddatalakefolder_datalakesubfolder
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.datalakefolder>("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.datalakefolder>("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> datalakefolder_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("datalakefolder_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("datalakefolder_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> datalakefolder_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("datalakefolder_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("datalakefolder_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> datalakefolder_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("datalakefolder_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("datalakefolder_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> datalakefolder_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("datalakefolder_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("datalakefolder_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> datalakefolder_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("datalakefolder_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("datalakefolder_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> datalakefolder_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("datalakefolder_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("datalakefolder_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N datalakefolder_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> datalakefolder_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("datalakefolder_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("datalakefolder_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// 1:N msdyn_dataflow_datalakefolder_dlfolder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_dataflow_datalakefolder_dlfolder")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.msdyn_dataflow_datalakefolder> msdyn_dataflow_datalakefolder_dlfolder
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.msdyn_dataflow_datalakefolder>("msdyn_dataflow_datalakefolder_dlfolder", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.msdyn_dataflow_datalakefolder>("msdyn_dataflow_datalakefolder_dlfolder", null, value);
			}
		}
		
		/// <summary>
		/// 1:N synapsedatabases
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("synapsedatabases")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.synapsedatabase> synapsedatabases
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.synapsedatabase>("synapsedatabases", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.synapsedatabase>("synapsedatabases", null, value);
			}
		}
		
		/// <summary>
		/// 1:N synapselinkexternaltablestates
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("synapselinkexternaltablestates")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.synapselinkexternaltablestate> synapselinkexternaltablestates
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.synapselinkexternaltablestate>("synapselinkexternaltablestates", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.synapselinkexternaltablestate>("synapselinkexternaltablestates", null, value);
			}
		}
		
		/// <summary>
		/// 1:N synapselinkprofiles
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("synapselinkprofiles")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.synapselinkprofile> synapselinkprofiles
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.synapselinkprofile>("synapselinkprofiles", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.synapselinkprofile>("synapselinkprofiles", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_datalakefolder
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_datalakefolder")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_datalakefolder
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_datalakefolder", null);
			}
		}
		
		/// <summary>
		/// N:1 datalakefolder_datalakesubfolder
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentfolderid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Dev.DevKit.ProxyTypes.datalakefolder Referencingdatalakefolder_datalakesubfolder
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.datalakefolder>("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.datalakefolder>("datalakefolder_datalakesubfolder", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_datalakefolder_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_datalakefolder_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_datalakefolder_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_datalakefolder_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_datalakefolder_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_datalakefolder_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_datalakefolder_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_datalakefolder_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_datalakefolder_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_datalakefolder_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_datalakefolder_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_datalakefolder_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_datalakefolder_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_datalakefolder_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_datalakefolder_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_datalakefolder_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_datalakefolder
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_datalakefolder")]
		public Dev.DevKit.ProxyTypes.Team team_datalakefolder
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_datalakefolder", null);
			}
		}
		
		/// <summary>
		/// N:1 user_datalakefolder
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_datalakefolder")]
		public Dev.DevKit.ProxyTypes.SystemUser user_datalakefolder
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_datalakefolder", null);
			}
		}
	}
}
#pragma warning restore CS1591
