#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Quan hệ phụ thuộc không hợp lệ trong hệ thống CRM.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("invaliddependency")]
	public partial class InvalidDependency : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the invaliddependency entity
		/// </summary>
		public partial class Fields
		{
			public const string ExistingComponentId = "existingcomponentid";
			public const string ExistingComponentType = "existingcomponenttype";
			public const string ExistingComponentTypeName = "existingcomponenttypename";
			public const string ExistingDependencyType = "existingdependencytype";
			public const string ExistingDependencyTypeName = "existingdependencytypename";
			public const string InvalidDependencyId = "invaliddependencyid";
			public const string Id = "invaliddependencyid";
			public const string IsExistingNodeRequiredComponent = "isexistingnoderequiredcomponent";
			public const string MissingComponentId = "missingcomponentid";
			public const string MissingComponentInfo = "missingcomponentinfo";
			public const string MissingComponentLookupType = "missingcomponentlookuptype";
			public const string MissingComponentType = "missingcomponenttype";
			public const string MissingComponentTypeName = "missingcomponenttypename";
			public const string userentityinstancedata_invaliddependency = "userentityinstancedata_invaliddependency";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public InvalidDependency() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "invaliddependency";
		
		public const string EntityLogicalCollectionName = "invaliddependencies";
		
		public const string EntitySetName = "invaliddependencies";
		
		public const int EntityTypeCode = 7107;
		
		/// <summary>
		/// Mã định danh duy nhất của đối tượng có quan hệ phụ thuộc không hợp lệ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcomponentid")]
		public System.Nullable<System.Guid> ExistingComponentId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("existingcomponentid");
			}
		}
		
		/// <summary>
		/// Loại thành phần của đối tượng có quan hệ phụ thuộc không hợp lệ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcomponenttype")]
		public virtual componenttype? ExistingComponentType
		{
			get
			{
				return ((componenttype?)(EntityOptionSetEnum.GetEnum(this, "existingcomponenttype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingcomponenttypename")]
		public string ExistingComponentTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("existingcomponenttype"))
				{
					return this.FormattedValues["existingcomponenttype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại quan hệ phụ thuộc của quan hệ phụ thuộc không hợp lệ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingdependencytype")]
		public virtual dependencytype? ExistingDependencyType
		{
			get
			{
				return ((dependencytype?)(EntityOptionSetEnum.GetEnum(this, "existingdependencytype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("existingdependencytypename")]
		public string ExistingDependencyTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("existingdependencytype"))
				{
					return this.FormattedValues["existingdependencytype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của quan hệ phụ thuộc không hợp lệ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("invaliddependencyid")]
		public System.Nullable<System.Guid> InvalidDependencyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("invaliddependencyid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("invaliddependencyid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Cho biết nút hiện tại có là thành phần cần thiết trong quan hệ phụ thuộc hay không
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexistingnoderequiredcomponent")]
		public System.Nullable<bool> IsExistingNodeRequiredComponent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexistingnoderequiredcomponent");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của thành phần bị thiếu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("missingcomponentid")]
		public System.Nullable<System.Guid> MissingComponentId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("missingcomponentid");
			}
			set
			{
				this.SetAttributeValue("missingcomponentid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("missingcomponentinfo")]
		public string MissingComponentInfo
		{
			get
			{
				return this.GetAttributeValue<string>("missingcomponentinfo");
			}
		}
		
		/// <summary>
		/// Loại tra cứu của thành phần bị thiếu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("missingcomponentlookuptype")]
		public System.Nullable<int> MissingComponentLookupType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("missingcomponentlookuptype");
			}
		}
		
		/// <summary>
		/// Mã loại đối tượng của thành phần bị thiếu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("missingcomponenttype")]
		public virtual componenttype? MissingComponentType
		{
			get
			{
				return ((componenttype?)(EntityOptionSetEnum.GetEnum(this, "missingcomponenttype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("missingcomponenttypename")]
		public string MissingComponentTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("missingcomponenttype"))
				{
					return this.FormattedValues["missingcomponenttype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_invaliddependency
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_invaliddependency")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_invaliddependency
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_invaliddependency", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_invaliddependency", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
