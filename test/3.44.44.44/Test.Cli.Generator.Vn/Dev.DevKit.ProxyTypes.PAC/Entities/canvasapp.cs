#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại ứng dụng canvas.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum canvasapp_canvasapptype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ngdngCanvascin = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thvinthnhphnngdng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Trangbngtybintychnh = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ngdngHpnht = 3,
	}
	
	/// <summary>
	/// Một ứng dụng được xây dựng qua trải nghiệm chỉnh sửa dựa trên bảng tùy biến.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("canvasapp")]
	public partial class CanvasApp : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the canvasapp entity
		/// </summary>
		public partial class Fields
		{
			public const string AADCreatedById = "aadcreatedbyid";
			public const string AADLastModifiedById = "aadlastmodifiedbyid";
			public const string AADLastPublishedById = "aadlastpublishedbyid";
			public const string AdminControlBypassConsent = "admincontrolbypassconsent";
			public const string AdminControlBypassConsentName = "admincontrolbypassconsentname";
			public const string AppComponentDependencies = "appcomponentdependencies";
			public const string AppComponents = "appcomponents";
			public const string AppOpenUri = "appopenuri";
			public const string AppVersion = "appversion";
			public const string Assets = "assets";
			public const string Assets_Name = "assets_name";
			public const string AuthorizationReferences = "authorizationreferences";
			public const string BackgroundImage = "background_image";
			public const string BackgroundColor = "backgroundcolor";
			public const string BackgroundImage_Name = "backgroundimage_name";
			public const string BypassConsent = "bypassconsent";
			public const string BypassConsentName = "bypassconsentname";
			public const string CanConsumeAppPass = "canconsumeapppass";
			public const string CanvasAppId = "canvasappid";
			public const string CanvasAppRowId = "canvasapprowid";
			public const string CanvasAppType = "canvasapptype";
			public const string CdsDependencies = "cdsdependencies";
			public const string CommitMessage = "commitmessage";
			public const string ComponentState = "componentstate";
			public const string ConnectionReferences = "connectionreferences";
			public const string CreatedByClientVersion = "createdbyclientversion";
			public const string CreatedTime = "createdtime";
			public const string DatabaseReferences = "databasereferences";
			public const string Description = "description";
			public const string DisplayName = "displayname";
			public const string Document = "document";
			public const string Document_Name = "document_name";
			public const string EmbeddedApp = "embeddedapp";
			public const string GalleryItemId = "galleryitemid";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCdsUpgraded = "iscdsupgraded";
			public const string IsCdsUpgradedName = "iscdsupgradedname";
			public const string IsCustomizable = "iscustomizable";
			public const string IsFeaturedApp = "isfeaturedapp";
			public const string IsFeaturedAppName = "isfeaturedappname";
			public const string IsHeroApp = "isheroapp";
			public const string IsHeroAppName = "isheroappname";
			public const string IsHidden = "ishidden";
			public const string IsHiddenName = "ishiddenname";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string LargeIcon = "large_icon";
			public const string LargeIcon_Name = "largeicon_name";
			public const string LastModifiedTime = "lastmodifiedtime";
			public const string LastPublishTime = "lastpublishtime";
			public const string MediumIcon = "medium_icon";
			public const string MediumIcon_Name = "mediumicon_name";
			public const string MinClientVersion = "minclientversion";
			public const string Name = "name";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Publisher = "publisher";
			public const string SmallIcon = "small_icon";
			public const string SmallIcon_Name = "smallicon_name";
			public const string SolutionId = "solutionid";
			public const string Status = "status";
			public const string Tags = "tags";
			public const string TeamsIcon = "teams_icon";
			public const string TeamsIcon_Name = "teamsicon_name";
			public const string UniqueCanvasAppId = "uniquecanvasappid";
			public const string VersionNumber = "versionnumber";
			public const string WideIcon = "wide_icon";
			public const string WideIcon_Name = "wideicon_name";
			public const string canvasapp_appaction_onclickeventformulacomponentlibraryid = "canvasapp_appaction_onclickeventformulacomponentlibraryid";
			public const string canvasapp_appaction_visibilityformulacomponentlibraryid = "canvasapp_appaction_visibilityformulacomponentlibraryid";
			public const string canvasapp_appelement_canvasappid = "canvasapp_appelement_canvasappid";
			public const string canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName = "canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName";
			public const string canvasappextendedmetadata = "canvasappextendedmetadata";
			public const string Comment_Artifact_CanvasApp = "Comment_Artifact_CanvasApp";
			public const string businessunit_canvasapp = "businessunit_canvasapp";
			public const string FK_CanvasApp_Solution = "FK_CanvasApp_Solution";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public CanvasApp() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "canvasapp";
		
		public const string EntityLogicalCollectionName = "canvasapps";
		
		public const string EntitySetName = "canvasapps";
		
		public const int EntityTypeCode = 300;
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo ứng dụng bảng tùy biến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aadcreatedbyid")]
		public string AADCreatedById
		{
			get
			{
				return this.GetAttributeValue<string>("aadcreatedbyid");
			}
			set
			{
				this.SetAttributeValue("aadcreatedbyid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi ứng dụng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aadlastmodifiedbyid")]
		public string AADLastModifiedById
		{
			get
			{
				return this.GetAttributeValue<string>("aadlastmodifiedbyid");
			}
			set
			{
				this.SetAttributeValue("aadlastmodifiedbyid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã phát hành ứng dụng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aadlastpublishedbyid")]
		public string AADLastPublishedById
		{
			get
			{
				return this.GetAttributeValue<string>("aadlastpublishedbyid");
			}
			set
			{
				this.SetAttributeValue("aadlastpublishedbyid", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có được đánh dấu để bỏ qua sự chấp thuận từ quản trị viên.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("admincontrolbypassconsent")]
		public System.Nullable<bool> AdminControlBypassConsent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("admincontrolbypassconsent");
			}
			set
			{
				this.SetAttributeValue("admincontrolbypassconsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("admincontrolbypassconsentname")]
		public string AdminControlBypassConsentName
		{
			get
			{
				if (this.FormattedValues.Contains("admincontrolbypassconsent"))
				{
					return this.FormattedValues["admincontrolbypassconsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Các quan hệ phụ thuộc của thành phần ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appcomponentdependencies")]
		public string AppComponentDependencies
		{
			get
			{
				return this.GetAttributeValue<string>("appcomponentdependencies");
			}
			set
			{
				this.SetAttributeValue("appcomponentdependencies", value);
			}
		}
		
		/// <summary>
		/// Các thành phần ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appcomponents")]
		public string AppComponents
		{
			get
			{
				return this.GetAttributeValue<string>("appcomponents");
			}
			set
			{
				this.SetAttributeValue("appcomponents", value);
			}
		}
		
		/// <summary>
		/// URI mở ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appopenuri")]
		public string AppOpenUri
		{
			get
			{
				return this.GetAttributeValue<string>("appopenuri");
			}
			set
			{
				this.SetAttributeValue("appopenuri", value);
			}
		}
		
		/// <summary>
		/// Phiên bản ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appversion")]
		public string AppVersion
		{
			get
			{
				return this.GetAttributeValue<string>("appversion");
			}
			set
			{
				this.SetAttributeValue("appversion", value);
			}
		}
		
		/// <summary>
		/// Tài sản cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assets")]
		public object Assets
		{
			get
			{
				return this.GetAttributeValue<object>("assets");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assets_name")]
		public string Assets_Name
		{
			get
			{
				if (this.FormattedValues.Contains("assets"))
				{
					return this.FormattedValues["assets"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tham chiếu ủy quyền của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authorizationreferences")]
		public string AuthorizationReferences
		{
			get
			{
				return this.GetAttributeValue<string>("authorizationreferences");
			}
			set
			{
				this.SetAttributeValue("authorizationreferences", value);
			}
		}
		
		/// <summary>
		/// Hình nền cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("background_image")]
		public object BackgroundImage
		{
			get
			{
				return this.GetAttributeValue<object>("background_image");
			}
		}
		
		/// <summary>
		/// Màu ảnh nền.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("backgroundcolor")]
		public string BackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("backgroundcolor");
			}
			set
			{
				this.SetAttributeValue("backgroundcolor", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("backgroundimage_name")]
		public string BackgroundImage_Name
		{
			get
			{
				if (this.FormattedValues.Contains("background_image"))
				{
					return this.FormattedValues["background_image"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có bỏ qua sự chấp thuận từ khách hàng hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bypassconsent")]
		public System.Nullable<bool> BypassConsent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("bypassconsent");
			}
			set
			{
				this.SetAttributeValue("bypassconsent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bypassconsentname")]
		public string BypassConsentName
		{
			get
			{
				if (this.FormattedValues.Contains("bypassconsent"))
				{
					return this.FormattedValues["bypassconsent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canconsumeapppass")]
		public System.Nullable<bool> CanConsumeAppPass
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("canconsumeapppass");
			}
			set
			{
				this.SetAttributeValue("canconsumeapppass", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canvasappid")]
		public System.Nullable<System.Guid> CanvasAppId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("canvasappid");
			}
			set
			{
				this.SetAttributeValue("canvasappid", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canvasapprowid")]
		public System.Nullable<System.Guid> CanvasAppRowId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("canvasapprowid");
			}
		}
		
		/// <summary>
		/// Loại ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("canvasapptype")]
		public virtual canvasapp_canvasapptype? CanvasAppType
		{
			get
			{
				return ((canvasapp_canvasapptype?)(EntityOptionSetEnum.GetEnum(this, "canvasapptype")));
			}
			set
			{
				this.SetAttributeValue("canvasapptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Sử dụng nội bộ. Chi tiết quan hệ phụ thuộc của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdsdependencies")]
		public string CdsDependencies
		{
			get
			{
				return this.GetAttributeValue<string>("cdsdependencies");
			}
			set
			{
				this.SetAttributeValue("cdsdependencies", value);
			}
		}
		
		/// <summary>
		/// Thông báo cam kết của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("commitmessage")]
		public string CommitMessage
		{
			get
			{
				return this.GetAttributeValue<string>("commitmessage");
			}
			set
			{
				this.SetAttributeValue("commitmessage", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Tham chiếu kết nối của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionreferences")]
		public string ConnectionReferences
		{
			get
			{
				return this.GetAttributeValue<string>("connectionreferences");
			}
			set
			{
				this.SetAttributeValue("connectionreferences", value);
			}
		}
		
		/// <summary>
		/// Phiên bản máy khách đã được dùng để làm tác giả cho ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyclientversion")]
		public string CreatedByClientVersion
		{
			get
			{
				return this.GetAttributeValue<string>("createdbyclientversion");
			}
			set
			{
				this.SetAttributeValue("createdbyclientversion", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdtime")]
		public System.Nullable<System.DateTime> CreatedTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdtime");
			}
			set
			{
				this.SetAttributeValue("createdtime", value);
			}
		}
		
		/// <summary>
		/// Tham chiếu cơ sở dữ liệu của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("databasereferences")]
		public string DatabaseReferences
		{
			get
			{
				return this.GetAttributeValue<string>("databasereferences");
			}
			set
			{
				this.SetAttributeValue("databasereferences", value);
			}
		}
		
		/// <summary>
		/// Mô tả ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Tên hiển thị của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("displayname")]
		public string DisplayName
		{
			get
			{
				return this.GetAttributeValue<string>("displayname");
			}
			set
			{
				this.SetAttributeValue("displayname", value);
			}
		}
		
		/// <summary>
		/// Tài liệu cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("document")]
		public object Document
		{
			get
			{
				return this.GetAttributeValue<object>("document");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("document_name")]
		public string Document_Name
		{
			get
			{
				if (this.FormattedValues.Contains("document"))
				{
					return this.FormattedValues["document"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sử dụng nội bộ. Thông tin ứng dụng được nhúng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("embeddedapp")]
		public string EmbeddedApp
		{
			get
			{
				return this.GetAttributeValue<string>("embeddedapp");
			}
			set
			{
				this.SetAttributeValue("embeddedapp", value);
			}
		}
		
		/// <summary>
		/// Mã định danh của mục thư viện.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("galleryitemid")]
		public string GalleryItemId
		{
			get
			{
				return this.GetAttributeValue<string>("galleryitemid");
			}
			set
			{
				this.SetAttributeValue("galleryitemid", value);
			}
		}
		
		/// <summary>
		/// Phiên bản có ứng dụng bảng tùy biến được đưa vào.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có chứa tham chiếu CDS 1.0 hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscdsupgraded")]
		public System.Nullable<bool> IsCdsUpgraded
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscdsupgraded");
			}
			set
			{
				this.SetAttributeValue("iscdsupgraded", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscdsupgradedname")]
		public string IsCdsUpgradedName
		{
			get
			{
				if (this.FormattedValues.Contains("iscdsupgraded"))
				{
					return this.FormattedValues["iscdsupgraded"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin cho biết liệu có thể tùy chỉnh thành phần này hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có phải là ứng dụng nổi bật hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfeaturedapp")]
		public System.Nullable<bool> IsFeaturedApp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfeaturedapp");
			}
			set
			{
				this.SetAttributeValue("isfeaturedapp", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfeaturedappname")]
		public string IsFeaturedAppName
		{
			get
			{
				if (this.FormattedValues.Contains("isfeaturedapp"))
				{
					return this.FormattedValues["isfeaturedapp"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có phải là ứng dụng chính hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isheroapp")]
		public System.Nullable<bool> IsHeroApp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isheroapp");
			}
			set
			{
				this.SetAttributeValue("isheroapp", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isheroappname")]
		public string IsHeroAppName
		{
			get
			{
				if (this.FormattedValues.Contains("isheroapp"))
				{
					return this.FormattedValues["isheroapp"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu ứng dụng bảng tùy biến có bị ẩn khỏi danh sách người dùng hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ishidden")]
		public System.Nullable<bool> IsHidden
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ishidden");
			}
			set
			{
				this.SetAttributeValue("ishidden", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ishiddenname")]
		public string IsHiddenName
		{
			get
			{
				if (this.FormattedValues.Contains("ishidden"))
				{
					return this.FormattedValues["ishidden"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết thành phần giải pháp có là một phần của giải pháp được quản lý hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Biểu tượng lớn cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("large_icon")]
		public object LargeIcon
		{
			get
			{
				return this.GetAttributeValue<object>("large_icon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("largeicon_name")]
		public string LargeIcon_Name
		{
			get
			{
				if (this.FormattedValues.Contains("large_icon"))
				{
					return this.FormattedValues["large_icon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi ứng dụng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmodifiedtime")]
		public System.Nullable<System.DateTime> LastModifiedTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastmodifiedtime");
			}
			set
			{
				this.SetAttributeValue("lastmodifiedtime", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ phát hành ứng dụng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastpublishtime")]
		public System.Nullable<System.DateTime> LastPublishTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastpublishtime");
			}
			set
			{
				this.SetAttributeValue("lastpublishtime", value);
			}
		}
		
		/// <summary>
		/// Biểu tượng trung bình cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("medium_icon")]
		public object MediumIcon
		{
			get
			{
				return this.GetAttributeValue<object>("medium_icon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mediumicon_name")]
		public string MediumIcon_Name
		{
			get
			{
				if (this.FormattedValues.Contains("medium_icon"))
				{
					return this.FormattedValues["medium_icon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Phiên bản máy khách đã được dùng để làm tác giả cho ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minclientversion")]
		public string MinClientVersion
		{
			get
			{
				return this.GetAttributeValue<string>("minclientversion");
			}
			set
			{
				this.SetAttributeValue("minclientversion", value);
			}
		}
		
		/// <summary>
		/// Tên CanvasApp
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu ứng dụng bảng tùy biến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Nhà phát hành ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publisher")]
		public string Publisher
		{
			get
			{
				return this.GetAttributeValue<string>("publisher");
			}
			set
			{
				this.SetAttributeValue("publisher", value);
			}
		}
		
		/// <summary>
		/// Biểu tượng nhỏ cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("small_icon")]
		public object SmallIcon
		{
			get
			{
				return this.GetAttributeValue<object>("small_icon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("smallicon_name")]
		public string SmallIcon_Name
		{
			get
			{
				if (this.FormattedValues.Contains("small_icon"))
				{
					return this.FormattedValues["small_icon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Giá trị cho biết liệu ứng dụng có sẵn sàng để sử dụng hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("status")]
		public string Status
		{
			get
			{
				return this.GetAttributeValue<string>("status");
			}
			set
			{
				this.SetAttributeValue("status", value);
			}
		}
		
		/// <summary>
		/// Thẻ siêu dữ liệu của ứng dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tags")]
		public string Tags
		{
			get
			{
				return this.GetAttributeValue<string>("tags");
			}
			set
			{
				this.SetAttributeValue("tags", value);
			}
		}
		
		/// <summary>
		/// Biểu tượng Teams cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teams_icon")]
		public object TeamsIcon
		{
			get
			{
				return this.GetAttributeValue<object>("teams_icon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("teamsicon_name")]
		public string TeamsIcon_Name
		{
			get
			{
				if (this.FormattedValues.Contains("teams_icon"))
				{
					return this.FormattedValues["teams_icon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// ID ứng dụng canvas duy nhất toàn cầu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("uniquecanvasappid")]
		public string UniqueCanvasAppId
		{
			get
			{
				return this.GetAttributeValue<string>("uniquecanvasappid");
			}
			set
			{
				this.SetAttributeValue("uniquecanvasappid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Biểu tượng rộng cho Ứng dụng canvas.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("wide_icon")]
		public object WideIcon
		{
			get
			{
				return this.GetAttributeValue<object>("wide_icon");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("wideicon_name")]
		public string WideIcon_Name
		{
			get
			{
				if (this.FormattedValues.Contains("wide_icon"))
				{
					return this.FormattedValues["wide_icon"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N canvasapp_appaction_onclickeventformulacomponentlibraryid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("canvasapp_appaction_onclickeventformulacomponentlibraryid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.appaction> canvasapp_appaction_onclickeventformulacomponentlibraryid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.appaction>("canvasapp_appaction_onclickeventformulacomponentlibraryid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.appaction>("canvasapp_appaction_onclickeventformulacomponentlibraryid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N canvasapp_appaction_visibilityformulacomponentlibraryid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("canvasapp_appaction_visibilityformulacomponentlibraryid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.appaction> canvasapp_appaction_visibilityformulacomponentlibraryid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.appaction>("canvasapp_appaction_visibilityformulacomponentlibraryid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.appaction>("canvasapp_appaction_visibilityformulacomponentlibraryid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N canvasapp_appelement_canvasappid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("canvasapp_appelement_canvasappid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AppElement> canvasapp_appelement_canvasappid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AppElement>("canvasapp_appelement_canvasappid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AppElement>("canvasapp_appelement_canvasappid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.msdyn_mobileapp> canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.msdyn_mobileapp>("canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.msdyn_mobileapp>("canvasapp_msdyn_mobileapp_msdyn_primaryPublishedAppName", null, value);
			}
		}
		
		/// <summary>
		/// 1:N canvasappextendedmetadata
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("canvasappextendedmetadata")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.CanvasAppExtendedMetadata> canvasappextendedmetadata
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.CanvasAppExtendedMetadata>("canvasappextendedmetadata", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.CanvasAppExtendedMetadata>("canvasappextendedmetadata", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Comment_Artifact_CanvasApp
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_CanvasApp")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Comment> Comment_Artifact_CanvasApp
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Comment>("Comment_Artifact_CanvasApp", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Comment>("Comment_Artifact_CanvasApp", null, value);
			}
		}
		
		/// <summary>
		/// N:1 businessunit_canvasapp
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("businessunit_canvasapp")]
		public Dev.DevKit.ProxyTypes.BusinessUnit businessunit_canvasapp
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("businessunit_canvasapp", null);
			}
		}
		
		/// <summary>
		/// N:1 FK_CanvasApp_Solution
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("FK_CanvasApp_Solution")]
		public Dev.DevKit.ProxyTypes.Solution FK_CanvasApp_Solution
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Solution>("FK_CanvasApp_Solution", null);
			}
		}
	}
}
#pragma warning restore CS1591
