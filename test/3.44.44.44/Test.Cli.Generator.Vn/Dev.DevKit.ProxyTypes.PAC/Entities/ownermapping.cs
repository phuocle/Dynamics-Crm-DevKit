#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Mã chỉ định việc phải xử lý ánh xạ chủ sở hữu hay không.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ownermapping_processcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Quytrnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bqua = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nib = 3,
	}
	
	/// <summary>
	/// Trạng thái của ánh xạ chủ sở hữu.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ownermapping_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của ánh xạ chủ sở hữu.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ownermapping_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 0,
	}
	
	/// <summary>
	/// Trong bản đồ dữ liệu, ánh xạ dữ liệu quyền sở hữu từ tệp nguồn tới Microsoft Dynamics 365.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ownermapping")]
	public partial class OwnerMapping : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ownermapping entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImportMapId = "importmapid";
			public const string ImportMapIdName = "importmapidname";
			public const string IntroducedVersion = "introducedversion";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerMappingId = "ownermappingid";
			public const string Id = "ownermappingid";
			public const string OwnerMappingIdUnique = "ownermappingidunique";
			public const string ProcessCode = "processcode";
			public const string ProcessCodeName = "processcodename";
			public const string SolutionId = "solutionid";
			public const string SourceSystemUserName = "sourcesystemusername";
			public const string SourceUserValueForSourceCRMUserLink = "sourceuservalueforsourcecrmuserlink";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TargetSystemUserDomainName = "targetsystemuserdomainname";
			public const string TargetSystemUserId = "targetsystemuserid";
			public const string TargetUserValueForSourceCRMUserLink = "targetuservalueforsourcecrmuserlink";
			public const string userentityinstancedata_ownermapping = "userentityinstancedata_ownermapping";
			public const string lk_ownermapping_createdby = "lk_ownermapping_createdby";
			public const string lk_ownermapping_createdonbehalfby = "lk_ownermapping_createdonbehalfby";
			public const string lk_ownermapping_modifiedby = "lk_ownermapping_modifiedby";
			public const string lk_ownermapping_modifiedonbehalfby = "lk_ownermapping_modifiedonbehalfby";
			public const string OwnerMapping_ImportMap = "OwnerMapping_ImportMap";
			public const string OwnerMapping_SystemUser = "OwnerMapping_SystemUser";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public OwnerMapping() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ownermapping";
		
		public const string EntityLogicalCollectionName = "ownermappings";
		
		public const string EntitySetName = "ownermappings";
		
		public const int EntityTypeCode = 4420;
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo ownermapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bản đồ dữ liệu liên kết với ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapid")]
		public Microsoft.Xrm.Sdk.EntityReference ImportMapId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("importmapid");
			}
			set
			{
				this.SetAttributeValue("importmapid", value);
			}
		}
		
		/// <summary>
		/// Tên của bản đồ nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapidname")]
		public string ImportMapIdName
		{
			get
			{
				if (this.FormattedValues.Contains("importmapid"))
				{
					return this.FormattedValues["importmapid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Phiên bản có thành phần được đưa vào.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Thông tin chỉ định khả năng quản lý thành phần này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi ánh xạ tra cứu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi ánh xạ chủ sở hữu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi ownermapping lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownermappingid")]
		public System.Nullable<System.Guid> OwnerMappingId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ownermappingid");
			}
			set
			{
				this.SetAttributeValue("ownermappingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownermappingid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.OwnerMappingId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của Ánh xạ Chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownermappingidunique")]
		public System.Nullable<System.Guid> OwnerMappingIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ownermappingidunique");
			}
		}
		
		/// <summary>
		/// Mã chỉ định việc phải xử lý ánh xạ chủ sở hữu hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcode")]
		public virtual ownermapping_processcode? ProcessCode
		{
			get
			{
				return ((ownermapping_processcode?)(EntityOptionSetEnum.GetEnum(this, "processcode")));
			}
			set
			{
				this.SetAttributeValue("processcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên mã quy trình cho ProcessCode
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcodename")]
		public string ProcessCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("processcode"))
				{
					return this.FormattedValues["processcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Tên người dùng của nguồn phải thay thế
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcesystemusername")]
		public string SourceSystemUserName
		{
			get
			{
				return this.GetAttributeValue<string>("sourcesystemusername");
			}
			set
			{
				this.SetAttributeValue("sourcesystemusername", value);
			}
		}
		
		/// <summary>
		/// Giá trị người dùng nguồn cho liên kết người dùng Microsoft Dynamics 365 nguồn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourceuservalueforsourcecrmuserlink")]
		public string SourceUserValueForSourceCRMUserLink
		{
			get
			{
				return this.GetAttributeValue<string>("sourceuservalueforsourcecrmuserlink");
			}
			set
			{
				this.SetAttributeValue("sourceuservalueforsourcecrmuserlink", value);
			}
		}
		
		/// <summary>
		/// Trạng thái của ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual ownermapping_statecode? StateCode
		{
			get
			{
				return ((ownermapping_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
		}
		
		/// <summary>
		/// Tên trạng thái của ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual ownermapping_statuscode? StatusCode
		{
			get
			{
				return ((ownermapping_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên lý do dẫn đến trạng thái của ánh xạ chủ sở hữu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên đăng nhập Microsoft Dynamics 365 mà có tên người dùng của nguồn cần được thay thế.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetsystemuserdomainname")]
		public string TargetSystemUserDomainName
		{
			get
			{
				return this.GetAttributeValue<string>("targetsystemuserdomainname");
			}
			set
			{
				this.SetAttributeValue("targetsystemuserdomainname", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetsystemuserid")]
		public Microsoft.Xrm.Sdk.EntityReference TargetSystemUserId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("targetsystemuserid");
			}
			set
			{
				this.SetAttributeValue("targetsystemuserid", value);
			}
		}
		
		/// <summary>
		/// Người dùng Microsoft Dynamics CRM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetuservalueforsourcecrmuserlink")]
		public string TargetUserValueForSourceCRMUserLink
		{
			get
			{
				return this.GetAttributeValue<string>("targetuservalueforsourcecrmuserlink");
			}
			set
			{
				this.SetAttributeValue("targetuservalueforsourcecrmuserlink", value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_ownermapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_ownermapping")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_ownermapping
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_ownermapping", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_ownermapping", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_ownermapping_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ownermapping_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ownermapping_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ownermapping_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ownermapping_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ownermapping_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ownermapping_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ownermapping_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ownermapping_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ownermapping_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ownermapping_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ownermapping_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ownermapping_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ownermapping_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ownermapping_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ownermapping_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 OwnerMapping_ImportMap
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OwnerMapping_ImportMap")]
		public Dev.DevKit.ProxyTypes.ImportMap OwnerMapping_ImportMap
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ImportMap>("OwnerMapping_ImportMap", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ImportMap>("OwnerMapping_ImportMap", null, value);
			}
		}
		
		/// <summary>
		/// N:1 OwnerMapping_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetsystemuserid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("OwnerMapping_SystemUser")]
		public Dev.DevKit.ProxyTypes.SystemUser OwnerMapping_SystemUser
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("OwnerMapping_SystemUser", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("OwnerMapping_SystemUser", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
