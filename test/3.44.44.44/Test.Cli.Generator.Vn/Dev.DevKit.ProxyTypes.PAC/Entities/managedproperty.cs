#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("managedproperty")]
	public partial class ManagedProperty : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the managedproperty entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentState = "componentstate";
			public const string EnablesAttributeName = "enablesattributename";
			public const string EnablesEntityName = "enablesentityname";
			public const string LogicalName1 = "logicalname";
			public const string ManagedPropertyId = "managedpropertyid";
			public const string Id = "managedpropertyid";
			public const string ManagedPropertyRowId = "managedpropertyrowid";
			public const string OverwriteTime = "overwritetime";
			public const string SolutionId = "solutionid";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ManagedProperty() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "managedproperty";
		
		public const string EntityLogicalCollectionName = "managedproperties";
		
		public const string EntitySetName = "managedproperties";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Bật Tên Thuộc tính của Thuộc tính Được quản lý này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablesattributename")]
		public string EnablesAttributeName
		{
			get
			{
				return this.GetAttributeValue<string>("enablesattributename");
			}
			set
			{
				this.OnPropertyChanging("EnablesAttributeName");
				this.SetAttributeValue("enablesattributename", value);
				this.OnPropertyChanged("EnablesAttributeName");
			}
		}
		
		/// <summary>
		/// Bật Tên Thực thể của Thuộc tính Được quản lý này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablesentityname")]
		public string EnablesEntityName
		{
			get
			{
				return this.GetAttributeValue<string>("enablesentityname");
			}
			set
			{
				this.OnPropertyChanging("EnablesEntityName");
				this.SetAttributeValue("enablesentityname", value);
				this.OnPropertyChanged("EnablesEntityName");
			}
		}
		
		/// <summary>
		/// Tên logic của Thuộc tính Được quản lý này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logicalname")]
		public string LogicalName1
		{
			get
			{
				return this.GetAttributeValue<string>("logicalname");
			}
			set
			{
				this.OnPropertyChanging("LogicalName1");
				this.SetAttributeValue("logicalname", value);
				this.OnPropertyChanged("LogicalName1");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của khóa thuộc tính được quản lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedpropertyid")]
		public System.Nullable<System.Guid> ManagedPropertyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("managedpropertyid");
			}
			set
			{
				this.OnPropertyChanging("ManagedPropertyId");
				this.SetAttributeValue("managedpropertyid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ManagedPropertyId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedpropertyid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ManagedPropertyId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của Thuộc tính Được quản lý
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedpropertyrowid")]
		public System.Nullable<System.Guid> ManagedPropertyRowId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("managedpropertyrowid");
			}
			set
			{
				this.OnPropertyChanging("ManagedPropertyRowId");
				this.SetAttributeValue("managedpropertyrowid", value);
				this.OnPropertyChanged("ManagedPropertyRowId");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
	}
}
#pragma warning restore CS1591
