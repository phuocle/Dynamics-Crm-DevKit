#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Thông tin về việc có cần phải xử lý ánh xạ giá trị danh sách hay không.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum picklistmapping_processcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Quytrnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bqua = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nib = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hynhx = 4,
	}
	
	/// <summary>
	/// Trạng thái của ánh xạ danh sách chọn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum picklistmapping_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của ánh xạ danh sách chọn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum picklistmapping_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 0,
	}
	
	/// <summary>
	/// Trong bản đồ dữ liệu, ánh xạ các giá trị danh sách từ tệp nguồn tới Microsoft Dynamics 365.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("picklistmapping")]
	public partial class PickListMapping : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the picklistmapping entity
		/// </summary>
		public partial class Fields
		{
			public const string ColumnMappingId = "columnmappingid";
			public const string ColumnMappingIdName = "columnmappingidname";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string IntroducedVersion = "introducedversion";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverwriteTime = "overwritetime";
			public const string PickListMappingId = "picklistmappingid";
			public const string Id = "picklistmappingid";
			public const string PickListMappingIdUnique = "picklistmappingidunique";
			public const string ProcessCode = "processcode";
			public const string ProcessCodeName = "processcodename";
			public const string SolutionId = "solutionid";
			public const string SourceValue = "sourcevalue";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TargetValue = "targetvalue";
			public const string userentityinstancedata_picklistmapping = "userentityinstancedata_picklistmapping";
			public const string lk_picklistmapping_createdby = "lk_picklistmapping_createdby";
			public const string lk_picklistmapping_createdonbehalfby = "lk_picklistmapping_createdonbehalfby";
			public const string lk_picklistmapping_modifiedby = "lk_picklistmapping_modifiedby";
			public const string lk_picklistmapping_modifiedonbehalfby = "lk_picklistmapping_modifiedonbehalfby";
			public const string PickListMapping_ColumnMapping = "PickListMapping_ColumnMapping";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public PickListMapping() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "picklistmapping";
		
		public const string EntityLogicalCollectionName = "picklistmappings";
		
		public const string EntitySetName = "picklistmappings";
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ cột liên kết với ánh xạ giá trị danh sách này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingid")]
		public Microsoft.Xrm.Sdk.EntityReference ColumnMappingId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("columnmappingid");
			}
			set
			{
				this.SetAttributeValue("columnmappingid", value);
			}
		}
		
		/// <summary>
		/// Tên của ánh xạ cột.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingidname")]
		public string ColumnMappingIdName
		{
			get
			{
				if (this.FormattedValues.Contains("columnmappingid"))
				{
					return this.FormattedValues["columnmappingid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo ánh xạ giá trị danh sách.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo ánh xạ giá trị danh sách.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo picklistmapping.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Phiên bản có thành phần được đưa vào.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Thông tin chỉ định khả năng quản lý thành phần này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi ánh xạ giá trị danh sách lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi ánh xạ giá trị danh sách lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi picklistmapping lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("picklistmappingid")]
		public System.Nullable<System.Guid> PickListMappingId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("picklistmappingid");
			}
			set
			{
				this.SetAttributeValue("picklistmappingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("picklistmappingid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.PickListMappingId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của Ánh xạ Danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("picklistmappingidunique")]
		public System.Nullable<System.Guid> PickListMappingIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("picklistmappingidunique");
			}
		}
		
		/// <summary>
		/// Thông tin về việc có cần phải xử lý ánh xạ giá trị danh sách hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcode")]
		public virtual picklistmapping_processcode? ProcessCode
		{
			get
			{
				return ((picklistmapping_processcode?)(EntityOptionSetEnum.GetEnum(this, "processcode")));
			}
			set
			{
				this.SetAttributeValue("processcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên mã quy trình cho ProcessCode
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcodename")]
		public string ProcessCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("processcode"))
				{
					return this.FormattedValues["processcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Giá trị nguồn cần thay thế.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcevalue")]
		public string SourceValue
		{
			get
			{
				return this.GetAttributeValue<string>("sourcevalue");
			}
			set
			{
				this.SetAttributeValue("sourcevalue", value);
			}
		}
		
		/// <summary>
		/// Trạng thái của ánh xạ danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual picklistmapping_statecode? StateCode
		{
			get
			{
				return ((picklistmapping_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
		}
		
		/// <summary>
		/// Tên trạng thái của ánh xạ danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của ánh xạ danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual picklistmapping_statuscode? StatusCode
		{
			get
			{
				return ((picklistmapping_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên lý do dẫn đến trạng thái của ánh xạ danh sách chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Giá trị danh sách Microsoft Dynamics 365 có giá trị để thay thế giá trị nguồn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetvalue")]
		public System.Nullable<int> TargetValue
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("targetvalue");
			}
			set
			{
				this.SetAttributeValue("targetvalue", value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_picklistmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_picklistmapping")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_picklistmapping
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_picklistmapping", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_picklistmapping", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_picklistmapping_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_picklistmapping_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_picklistmapping_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_picklistmapping_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_picklistmapping_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_picklistmapping_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_picklistmapping_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_picklistmapping_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_picklistmapping_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_picklistmapping_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_picklistmapping_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_picklistmapping_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_picklistmapping_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_picklistmapping_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_picklistmapping_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_picklistmapping_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 PickListMapping_ColumnMapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("PickListMapping_ColumnMapping")]
		public Dev.DevKit.ProxyTypes.ColumnMapping PickListMapping_ColumnMapping
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ColumnMapping>("PickListMapping_ColumnMapping", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ColumnMapping>("PickListMapping_ColumnMapping", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
