#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Status of the Planner Sync Action
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum plannersyncaction_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Planner Sync Action
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum plannersyncaction_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	/// <summary>
	/// The Planner Sync Action to be executed.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("plannersyncaction")]
	public partial class PlannerSyncAction : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the plannersyncaction entity
		/// </summary>
		public partial class Fields
		{
			public const string Assignments = "assignments";
			public const string DueDateTime = "duedatetime";
			public const string ExternalBucketId = "externalbucketid";
			public const string ExternalReferences = "externalreferences";
			public const string GroupId = "groupid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string LastAttemptedOn = "lastattemptedon";
			public const string LastSyncError = "lastsyncerror";
			public const string Notes = "notes";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PendingAttempts = "pendingattempts";
			public const string PercentComplete = "percentcomplete";
			public const string PlannerBusinessScenarioId = "plannerbusinessscenarioid";
			public const string plannerbusinessscenarioidName = "plannerbusinessscenarioidname";
			public const string PlannerSyncActionId = "plannersyncactionid";
			public const string Id = "plannersyncactionid";
			public const string Priority = "priority";
			public const string QueuedOn = "queuedon";
			public const string SourceRecordEntityLogicalName = "sourcerecordentitylogicalname";
			public const string SourceRecordId = "sourcerecordid";
			public const string StartDateTime = "startdatetime";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string Title = "title";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string plannersyncaction_AsyncOperations = "plannersyncaction_AsyncOperations";
			public const string plannersyncaction_BulkDeleteFailures = "plannersyncaction_BulkDeleteFailures";
			public const string plannersyncaction_MailboxTrackingFolders = "plannersyncaction_MailboxTrackingFolders";
			public const string plannersyncaction_PrincipalObjectAttributeAccesses = "plannersyncaction_PrincipalObjectAttributeAccesses";
			public const string plannersyncaction_ProcessSession = "plannersyncaction_ProcessSession";
			public const string plannersyncaction_SyncErrors = "plannersyncaction_SyncErrors";
			public const string plannersyncaction_UserEntityInstanceDatas = "plannersyncaction_UserEntityInstanceDatas";
			public const string business_unit_plannersyncaction = "business_unit_plannersyncaction";
			public const string plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid = "plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid";
			public const string team_plannersyncaction = "team_plannersyncaction";
			public const string user_plannersyncaction = "user_plannersyncaction";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public PlannerSyncAction() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "plannersyncaction";
		
		public const string EntityLogicalCollectionName = "plannersyncactions";
		
		public const string EntitySetName = "plannersyncactions";
		
		public const int EntityTypeCode = 10209;
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("assignments")]
		public string Assignments
		{
			get
			{
				return this.GetAttributeValue<string>("assignments");
			}
			set
			{
				this.SetAttributeValue("assignments", value);
			}
		}
		
		/// <summary>
		/// Date and time when the planner task is due.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duedatetime")]
		public System.Nullable<System.DateTime> DueDateTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("duedatetime");
			}
			set
			{
				this.SetAttributeValue("duedatetime", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalbucketid")]
		public string ExternalBucketId
		{
			get
			{
				return this.GetAttributeValue<string>("externalbucketid");
			}
			set
			{
				this.SetAttributeValue("externalbucketid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalreferences")]
		public string ExternalReferences
		{
			get
			{
				return this.GetAttributeValue<string>("externalreferences");
			}
			set
			{
				this.SetAttributeValue("externalreferences", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupid")]
		public System.Nullable<System.Guid> GroupId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("groupid");
			}
			set
			{
				this.SetAttributeValue("groupid", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only. Date and time when the action was last attempted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastattemptedon")]
		public System.Nullable<System.DateTime> LastAttemptedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastattemptedon");
			}
			set
			{
				this.SetAttributeValue("lastattemptedon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerror")]
		public string LastSyncError
		{
			get
			{
				return this.GetAttributeValue<string>("lastsyncerror");
			}
			set
			{
				this.SetAttributeValue("lastsyncerror", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("notes")]
		public string Notes
		{
			get
			{
				return this.GetAttributeValue<string>("notes");
			}
			set
			{
				this.SetAttributeValue("notes", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// The attempts available for processing the planner sync action.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pendingattempts")]
		public System.Nullable<int> PendingAttempts
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("pendingattempts");
			}
			set
			{
				this.SetAttributeValue("pendingattempts", value);
			}
		}
		
		/// <summary>
		/// The percentage of completion for the planner task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("percentcomplete")]
		public System.Nullable<int> PercentComplete
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("percentcomplete");
			}
			set
			{
				this.SetAttributeValue("percentcomplete", value);
			}
		}
		
		/// <summary>
		/// Id of the Business Scenario in Planner.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plannerbusinessscenarioid")]
		public Microsoft.Xrm.Sdk.EntityReference PlannerBusinessScenarioId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("plannerbusinessscenarioid");
			}
			set
			{
				this.SetAttributeValue("plannerbusinessscenarioid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plannerbusinessscenarioidname")]
		public string plannerbusinessscenarioidName
		{
			get
			{
				if (this.FormattedValues.Contains("plannerbusinessscenarioid"))
				{
					return this.FormattedValues["plannerbusinessscenarioid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Planner Sync Action Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plannersyncactionid")]
		public System.Nullable<System.Guid> PlannerSyncActionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("plannersyncactionid");
			}
			set
			{
				this.SetAttributeValue("plannersyncactionid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plannersyncactionid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.PlannerSyncActionId = value;
			}
		}
		
		/// <summary>
		/// The priority of the planner task.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("priority")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("priority");
			}
			set
			{
				this.SetAttributeValue("priority", value);
			}
		}
		
		/// <summary>
		/// For internal use only. Date and time when the action was queued.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queuedon")]
		public System.Nullable<System.DateTime> QueuedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("queuedon");
			}
			set
			{
				this.SetAttributeValue("queuedon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcerecordentitylogicalname")]
		public string SourceRecordEntityLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("sourcerecordentitylogicalname");
			}
			set
			{
				this.SetAttributeValue("sourcerecordentitylogicalname", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcerecordid")]
		public System.Nullable<System.Guid> SourceRecordId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("sourcerecordid");
			}
			set
			{
				this.SetAttributeValue("sourcerecordid", value);
			}
		}
		
		/// <summary>
		/// Date and time when the planner task was started.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdatetime")]
		public System.Nullable<System.DateTime> StartDateTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdatetime");
			}
			set
			{
				this.SetAttributeValue("startdatetime", value);
			}
		}
		
		/// <summary>
		/// Status of the Planner Sync Action
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual plannersyncaction_statecode? statecode
		{
			get
			{
				return ((plannersyncaction_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Planner Sync Action
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual plannersyncaction_statuscode? statuscode
		{
			get
			{
				return ((plannersyncaction_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> plannersyncaction_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("plannersyncaction_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("plannersyncaction_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> plannersyncaction_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("plannersyncaction_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("plannersyncaction_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> plannersyncaction_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("plannersyncaction_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("plannersyncaction_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> plannersyncaction_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("plannersyncaction_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("plannersyncaction_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> plannersyncaction_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("plannersyncaction_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("plannersyncaction_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> plannersyncaction_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("plannersyncaction_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("plannersyncaction_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N plannersyncaction_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannersyncaction_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> plannersyncaction_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("plannersyncaction_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("plannersyncaction_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_plannersyncaction
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_plannersyncaction")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_plannersyncaction
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_plannersyncaction", null);
			}
		}
		
		/// <summary>
		/// N:1 plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("plannerbusinessscenarioid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid")]
		public Dev.DevKit.ProxyTypes.plannerbusinessscenario plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.plannerbusinessscenario>("plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.plannerbusinessscenario>("plannerbusinessscenario_plannersyncaction_plannerbusinessscenarioid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_plannersyncaction
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_plannersyncaction")]
		public Dev.DevKit.ProxyTypes.Team team_plannersyncaction
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_plannersyncaction", null);
			}
		}
		
		/// <summary>
		/// N:1 user_plannersyncaction
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_plannersyncaction")]
		public Dev.DevKit.ProxyTypes.SystemUser user_plannersyncaction
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_plannersyncaction", null);
			}
		}
	}
}
#pragma warning restore CS1591
