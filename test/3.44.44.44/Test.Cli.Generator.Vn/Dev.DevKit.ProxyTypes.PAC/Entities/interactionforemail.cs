#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại Tương tác
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum interaction_type
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailOpen = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		LinkOpen = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AttachmentOpen = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EmailReply = 3,
	}
	
	/// <summary>
	/// Trạng thái của Tương tác đối với Email
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum interactionforemail_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của Tương tác đối với Email
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum interactionforemail_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghotng = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("interactionforemail")]
	public partial class InteractionForEmail : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the interactionforemail entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string EmailActivityId = "emailactivityid";
			public const string EmailAddress = "emailaddress";
			public const string EmailInteractionReplyId = "emailinteractionreplyid";
			public const string EmailInteractionTime = "emailinteractiontime";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InteractedComponentText = "interactedcomponenttext";
			public const string InteractionForEmailId = "interactionforemailid";
			public const string Id = "interactionforemailid";
			public const string InteractionLocation = "interactionlocation";
			public const string InteractionPartyId = "interactionpartyid";
			public const string InteractionRepliedBy = "interactionrepliedby";
			public const string InteractionReplyId = "interactionreplyid";
			public const string InteractionType = "interactiontype";
			public const string InteractionTypeName = "interactiontypename";
			public const string InteractionUserAgent = "interactionuseragent";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string interactionforemail_ActivityPointers = "interactionforemail_ActivityPointers";
			public const string interactionforemail_adx_inviteredemptions = "interactionforemail_adx_inviteredemptions";
			public const string interactionforemail_adx_portalcomments = "interactionforemail_adx_portalcomments";
			public const string interactionforemail_AsyncOperations = "interactionforemail_AsyncOperations";
			public const string interactionforemail_chats = "interactionforemail_chats";
			public const string business_unit_interactionforemail = "business_unit_interactionforemail";
			public const string lk_interactionforemail_createdby = "lk_interactionforemail_createdby";
			public const string lk_interactionforemail_createdonbehalfby = "lk_interactionforemail_createdonbehalfby";
			public const string lk_interactionforemail_modifiedby = "lk_interactionforemail_modifiedby";
			public const string lk_interactionforemail_modifiedonbehalfby = "lk_interactionforemail_modifiedonbehalfby";
			public const string team_interactionforemail = "team_interactionforemail";
			public const string TransactionCurrency_InteractionForEmail = "TransactionCurrency_InteractionForEmail";
			public const string user_interactionforemail = "user_interactionforemail";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public InteractionForEmail() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "interactionforemail";
		
		public const string EntityLogicalCollectionName = "interactionforemails";
		
		public const string EntitySetName = "interactionforemails";
		
		public const int EntityTypeCode = 9986;
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// ID Hoạt động Email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailactivityid")]
		public System.Nullable<System.Guid> EmailActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailactivityid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// ID Hoạt động Email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailinteractionreplyid")]
		public System.Nullable<System.Guid> EmailInteractionReplyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailinteractionreplyid");
			}
		}
		
		/// <summary>
		/// Hiển thị ngày và giờ Tương tác của email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailinteractiontime")]
		public System.Nullable<System.DateTime> EmailInteractionTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("emailinteractiontime");
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với InteractionForEmail theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Số thứ tự của quá trình nhập tạo ra bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactedcomponenttext")]
		public string InteractedComponentText
		{
			get
			{
				return this.GetAttributeValue<string>("interactedcomponenttext");
			}
			set
			{
				this.SetAttributeValue("interactedcomponenttext", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionforemailid")]
		public System.Nullable<System.Guid> InteractionForEmailId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("interactionforemailid");
			}
			set
			{
				this.SetAttributeValue("interactionforemailid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionforemailid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.InteractionForEmailId = value;
			}
		}
		
		/// <summary>
		/// Hiển thị vị trí cho Tương tác
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionlocation")]
		public string InteractionLocation
		{
			get
			{
				return this.GetAttributeValue<string>("interactionlocation");
			}
			set
			{
				this.SetAttributeValue("interactionlocation", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionpartyid")]
		public System.Nullable<System.Guid> InteractionPartyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("interactionpartyid");
			}
		}
		
		/// <summary>
		/// Hiển thị Tên người đã trả lời email nếu tương tác là trả lời
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionrepliedby")]
		public string InteractionRepliedBy
		{
			get
			{
				return this.GetAttributeValue<string>("interactionrepliedby");
			}
			set
			{
				this.SetAttributeValue("interactionrepliedby", value);
			}
		}
		
		/// <summary>
		/// InteractionReplyId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionreplyid")]
		public string InteractionReplyId
		{
			get
			{
				return this.GetAttributeValue<string>("interactionreplyid");
			}
			set
			{
				this.SetAttributeValue("interactionreplyid", value);
			}
		}
		
		/// <summary>
		/// Hiển thị loại Tương tác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactiontype")]
		public virtual interaction_type? InteractionType
		{
			get
			{
				return ((interaction_type?)(EntityOptionSetEnum.GetEnum(this, "interactiontype")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactiontypename")]
		public string InteractionTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("interactiontype"))
				{
					return this.FormattedValues["interactiontype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị Tổng đài viên Người dùng cho một Tương tác nếu có
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interactionuseragent")]
		public string InteractionUserAgent
		{
			get
			{
				return this.GetAttributeValue<string>("interactionuseragent");
			}
			set
			{
				this.SetAttributeValue("interactionuseragent", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên phiên âm tiếng Nhật của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Trạng thái của Tương tác đối với Email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual interactionforemail_statecode? statecode
		{
			get
			{
				return ((interactionforemail_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của Tương tác đối với Email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual interactionforemail_statuscode? statuscode
		{
			get
			{
				return ((interactionforemail_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với InteractionForEmail theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N interactionforemail_ActivityPointers
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_ActivityPointers")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityPointer> interactionforemail_ActivityPointers
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityPointer>("interactionforemail_ActivityPointers", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityPointer>("interactionforemail_ActivityPointers", null, value);
			}
		}
		
		/// <summary>
		/// 1:N interactionforemail_adx_inviteredemptions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_adx_inviteredemptions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.adx_inviteredemption> interactionforemail_adx_inviteredemptions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.adx_inviteredemption>("interactionforemail_adx_inviteredemptions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.adx_inviteredemption>("interactionforemail_adx_inviteredemptions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N interactionforemail_adx_portalcomments
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_adx_portalcomments")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.adx_portalcomment> interactionforemail_adx_portalcomments
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.adx_portalcomment>("interactionforemail_adx_portalcomments", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.adx_portalcomment>("interactionforemail_adx_portalcomments", null, value);
			}
		}
		
		/// <summary>
		/// 1:N interactionforemail_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> interactionforemail_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("interactionforemail_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("interactionforemail_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N interactionforemail_chats
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("interactionforemail_chats")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.chat> interactionforemail_chats
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.chat>("interactionforemail_chats", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.chat>("interactionforemail_chats", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_interactionforemail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_interactionforemail")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_interactionforemail
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_interactionforemail", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_interactionforemail_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_interactionforemail_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_interactionforemail_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_interactionforemail_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_interactionforemail_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_interactionforemail_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_interactionforemail_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_interactionforemail_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_interactionforemail_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_interactionforemail_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_interactionforemail_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_interactionforemail_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_interactionforemail_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_interactionforemail_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_interactionforemail_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_interactionforemail_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_interactionforemail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_interactionforemail")]
		public Dev.DevKit.ProxyTypes.Team team_interactionforemail
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_interactionforemail", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_InteractionForEmail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_InteractionForEmail")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_InteractionForEmail
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_InteractionForEmail", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_InteractionForEmail", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_interactionforemail
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_interactionforemail")]
		public Dev.DevKit.ProxyTypes.SystemUser user_interactionforemail
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_interactionforemail", null);
			}
		}
	}
}
#pragma warning restore CS1591
