#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Trường này định cấu hình những người dùng nào có thể tương tác với bot.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_accesscontrolpolicy
	{
		
		/// <summary>
		/// Any signed in user is allowed to interact with the bot.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Btk = 0,
		
		/// <summary>
		/// Authentication mode must be Integrated or Custom Azure Active Directory. User must have at least Read access to the Copilot record.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrnhcCopilot = 1,
		
		/// <summary>
		/// Authentication mode must be Integrated or Custom Azure Active Directory. To interact with the bot, users must be member of one of the security groups configured in the Authorized Security Groups field OR have Read access to the Copilot.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhvinnhm = 2,
	}
	
	/// <summary>
	/// Xác định cách thức xác thực người dùng với bot.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_authenticationmode
	{
		
		/// <summary>
		/// Copilot was created before the introduction of this field. The mode is either 'None' if no authentication was configured, or 'Generic OAuth2' if the bot had an authentication node.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Chacchnh = 0,
		
		/// <summary>
		/// The copilot does not require authentication.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngc = 1,
		
		/// <summary>
		/// Authentication uses integrated Azure AD configuration. Supports security group access control. The bot has access to the UserId and UserDisplayName variables and will be able to invoke Flows on behalf of the end user. No additional configuration required.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ctchhp = 2,
		
		/// <summary>
		/// Provide a custom Azure AD application. Supports security group access control. The bot has access to the IsLoggedIn, AuthToken, UserId and UserDisplayName variables and will be able to invoke Flows on behalf of the user. Skills can leverage the auth token
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		AzureActiveDirectorytychnh = 3,
		
		/// <summary>
		/// A custom OAuth provider is configured. The copilot will have access to the IsLoggedIn and AuthToken variables.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OAuth2chung = 4,
	}
	
	/// <summary>
	/// Xác định sẽ kích hoạt xác thực bot tại điểm nào. Có thể thực thi bảo mật tại một điểm nhập của bot, nhờ đó không cần phải dùng đến các nút xác thực rõ ràng trong dòng quy trình đối thoại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_authenticationtrigger
	{
		
		/// <summary>
		/// Sign in happens when the bot reaches an authentication node or when an action requires user authentication.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khicnthit = 0,
		
		/// <summary>
		/// Sign-in happens when the conversation starts and any time a token expires.
		/// </summary>
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lunlun = 1,
	}
	
	/// <summary>
	/// Ngôn ngữ của bot
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_language
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingAnh = 1033,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingTyBanNha = 1034,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingBoNha_Brazil = 1046,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingPhap = 1036,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingHLan = 1043,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingNaUy = 1044,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TinganMch = 1030,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingThyin = 1053,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingItaly = 1040,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tingc = 1031,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingTrung_Ginth = 2052,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingTrung_Phnth = 1028,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingRp = 1025,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingNht = 1041,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingHn = 1042,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingHindi = 1081,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingIndonesia = 1057,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingNga = 1049,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingBaLan = 1045,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingThNhK = 1055,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingThi = 1054,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingPhnLan = 1035,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingHyLap = 1032,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingSc = 1029,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingAnh_VngqucAnh = 2057,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingPhp_Canada = 3084,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingTyBanNha_HoaK = 21514,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TingAnh_Australia = 3081,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_runtimeprovider
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PowerVirtualAgents = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VNuanceMix = 1,
	}
	
	/// <summary>
	/// Trạng thái Bot
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của Bot
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum bot_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cungcp = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hycungng = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cungcp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngcungcpc = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thiugiyphp = 5,
	}
	
	/// <summary>
	/// Đại diện cho một copilot được tạo trong Copilot Studio. https://copilotstudio.microsoft.com/
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("bot")]
	public partial class bot : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the bot entity
		/// </summary>
		public partial class Fields
		{
			public const string accesscontrolpolicy = "accesscontrolpolicy";
			public const string accesscontrolpolicyName = "accesscontrolpolicyname";
			public const string applicationmanifestinformation = "applicationmanifestinformation";
			public const string authenticationconfiguration = "authenticationconfiguration";
			public const string authenticationmode = "authenticationmode";
			public const string authenticationmodeName = "authenticationmodename";
			public const string authenticationtrigger = "authenticationtrigger";
			public const string authenticationtriggerName = "authenticationtriggername";
			public const string authorizedsecuritygroupids = "authorizedsecuritygroupids";
			public const string botId = "botid";
			public const string Id = "botid";
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string Configuration = "configuration";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string iconbase64 = "iconbase64";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string Language = "language";
			public const string languageName = "languagename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProviderConnectionReferenceId = "providerconnectionreferenceid";
			public const string ProviderConnectionReferenceIdName = "providerconnectionreferenceidname";
			public const string publishedby = "publishedby";
			public const string publishedbyName = "publishedbyname";
			public const string publishedbyYomiName = "publishedbyyominame";
			public const string publishedon = "publishedon";
			public const string RuntimeProvider = "runtimeprovider";
			public const string runtimeproviderName = "runtimeprovidername";
			public const string SchemaName = "schemaname";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string SupportedLanguages = "supportedlanguages";
			public const string supportedlanguagesName = "supportedlanguagesname";
			public const string SynchronizationStatus = "synchronizationstatus";
			public const string Template = "template";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string bot_AsyncOperations = "bot_AsyncOperations";
			public const string bot_BulkDeleteFailures = "bot_BulkDeleteFailures";
			public const string bot_conversationtranscript = "bot_conversationtranscript";
			public const string bot_MailboxTrackingFolders = "bot_MailboxTrackingFolders";
			public const string bot_PrincipalObjectAttributeAccesses = "bot_PrincipalObjectAttributeAccesses";
			public const string bot_ProcessSession = "bot_ProcessSession";
			public const string bot_SyncErrors = "bot_SyncErrors";
			public const string bot_UserEntityInstanceDatas = "bot_UserEntityInstanceDatas";
			public const string botcomponent_parent_bot = "botcomponent_parent_bot";
			public const string Comment_Artifact_Bot = "Comment_Artifact_Bot";
			public const string bot_botcomponent = "bot_botcomponent";
			public const string bot_botcomponentcollection = "bot_botcomponentcollection";
			public const string bot_environmentvariabledefinition = "bot_environmentvariabledefinition";
			public const string bot_connectionreference = "bot_connectionreference";
			public const string business_unit_bot = "business_unit_bot";
			public const string lk_bot_createdby = "lk_bot_createdby";
			public const string lk_bot_createdonbehalfby = "lk_bot_createdonbehalfby";
			public const string lk_bot_modifiedby = "lk_bot_modifiedby";
			public const string lk_bot_modifiedonbehalfby = "lk_bot_modifiedonbehalfby";
			public const string systemuser_bot_publishedby = "systemuser_bot_publishedby";
			public const string team_bot = "team_bot";
			public const string user_bot = "user_bot";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public bot() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "bot";
		
		public const string EntityLogicalCollectionName = "bots";
		
		public const string EntitySetName = "bots";
		
		public const int EntityTypeCode = 10152;
		
		/// <summary>
		/// Xác định người dùng nào có thể tương tác với bot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accesscontrolpolicy")]
		public virtual bot_accesscontrolpolicy? accesscontrolpolicy
		{
			get
			{
				return ((bot_accesscontrolpolicy?)(EntityOptionSetEnum.GetEnum(this, "accesscontrolpolicy")));
			}
			set
			{
				this.SetAttributeValue("accesscontrolpolicy", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accesscontrolpolicyname")]
		public string accesscontrolpolicyName
		{
			get
			{
				if (this.FormattedValues.Contains("accesscontrolpolicy"))
				{
					return this.FormattedValues["accesscontrolpolicy"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lưu trữ thông tin cùng với dữ liệu kê khai ứng dụng, chẳng hạn như thông tin ứng dụng Teams.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationmanifestinformation")]
		public string applicationmanifestinformation
		{
			get
			{
				return this.GetAttributeValue<string>("applicationmanifestinformation");
			}
			set
			{
				this.SetAttributeValue("applicationmanifestinformation", value);
			}
		}
		
		/// <summary>
		/// Lưu trữ thông tin cho cấu hình xác thực.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authenticationconfiguration")]
		public string authenticationconfiguration
		{
			get
			{
				return this.GetAttributeValue<string>("authenticationconfiguration");
			}
			set
			{
				this.SetAttributeValue("authenticationconfiguration", value);
			}
		}
		
		/// <summary>
		/// Xác định cách thức xác thực bot với người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authenticationmode")]
		public virtual bot_authenticationmode? authenticationmode
		{
			get
			{
				return ((bot_authenticationmode?)(EntityOptionSetEnum.GetEnum(this, "authenticationmode")));
			}
			set
			{
				this.SetAttributeValue("authenticationmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authenticationmodename")]
		public string authenticationmodeName
		{
			get
			{
				if (this.FormattedValues.Contains("authenticationmode"))
				{
					return this.FormattedValues["authenticationmode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Xác định sẽ kích hoạt xác thực bot tại điểm nào. Có thể thực thi bảo mật tại một điểm nhập của bot, nhờ đó không cần phải dùng đến các nút xác thực rõ ràng trong dòng quy trình đối thoại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authenticationtrigger")]
		public virtual bot_authenticationtrigger? authenticationtrigger
		{
			get
			{
				return ((bot_authenticationtrigger?)(EntityOptionSetEnum.GetEnum(this, "authenticationtrigger")));
			}
			set
			{
				this.SetAttributeValue("authenticationtrigger", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authenticationtriggername")]
		public string authenticationtriggerName
		{
			get
			{
				if (this.FormattedValues.Contains("authenticationtrigger"))
				{
					return this.FormattedValues["authenticationtrigger"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chứa danh sách được phân tách bằng dấu phẩy bao gồm lên đến 20 ID nhóm Azure Active Directory được phép tương tác với bot. Trường này bị bỏ qua nến Chính sách kiểm soát truy cập không được đặt là Thành viên nhóm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authorizedsecuritygroupids")]
		public string authorizedsecuritygroupids
		{
			get
			{
				return this.GetAttributeValue<string>("authorizedsecuritygroupids");
			}
			set
			{
				this.SetAttributeValue("authorizedsecuritygroupids", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của Copilot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("botid")]
		public System.Nullable<System.Guid> botId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("botid");
			}
			set
			{
				this.SetAttributeValue("botid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("botid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.botId = value;
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Dùng để lưu trữ nội dung dữ liệu cấu hình bot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("configuration")]
		public string Configuration
		{
			get
			{
				return this.GetAttributeValue<string>("configuration");
			}
			set
			{
				this.SetAttributeValue("configuration", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Dùng để xác định trực quan bot của bạn trong các kênh và dịch vụ. Được thể hiện trong chuỗi mã hóa base64. Phải ở định dạng PNG và có kích cỡ không quá 30K. Giá trị này có thể thay đổi bất cứ lúc nào.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iconbase64")]
		public string iconbase64
		{
			get
			{
				return this.GetAttributeValue<string>("iconbase64");
			}
			set
			{
				this.SetAttributeValue("iconbase64", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã ngôn ngữ (LCID) của Copilot này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("language")]
		public virtual bot_language? Language
		{
			get
			{
				return ((bot_language?)(EntityOptionSetEnum.GetEnum(this, "language")));
			}
			set
			{
				this.SetAttributeValue("language", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagename")]
		public string languageName
		{
			get
			{
				if (this.FormattedValues.Contains("language"))
				{
					return this.FormattedValues["language"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên hiển thị của Copilot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// ID Chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho tham chiếu kết nối được liên kết với Copilot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("providerconnectionreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference ProviderConnectionReferenceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("providerconnectionreferenceid");
			}
			set
			{
				this.SetAttributeValue("providerconnectionreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("providerconnectionreferenceidname")]
		public string ProviderConnectionReferenceIdName
		{
			get
			{
				if (this.FormattedValues.Contains("providerconnectionreferenceid"))
				{
					return this.FormattedValues["providerconnectionreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã phát hành bot lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedby")]
		public Microsoft.Xrm.Sdk.EntityReference publishedby
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("publishedby");
			}
			set
			{
				this.SetAttributeValue("publishedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedbyname")]
		public string publishedbyName
		{
			get
			{
				if (this.FormattedValues.Contains("publishedby"))
				{
					return this.FormattedValues["publishedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedbyyominame")]
		public string publishedbyYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("publishedby"))
				{
					return this.FormattedValues["publishedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ phát hành Copilot lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedon")]
		public System.Nullable<System.DateTime> publishedon
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("publishedon");
			}
			set
			{
				this.SetAttributeValue("publishedon", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runtimeprovider")]
		public virtual bot_runtimeprovider? RuntimeProvider
		{
			get
			{
				return ((bot_runtimeprovider?)(EntityOptionSetEnum.GetEnum(this, "runtimeprovider")));
			}
			set
			{
				this.SetAttributeValue("runtimeprovider", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runtimeprovidername")]
		public string runtimeproviderName
		{
			get
			{
				if (this.FormattedValues.Contains("runtimeprovider"))
				{
					return this.FormattedValues["runtimeprovider"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên duy nhất để nhận dạng Copilot.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schemaname")]
		public string SchemaName
		{
			get
			{
				return this.GetAttributeValue<string>("schemaname");
			}
			set
			{
				this.SetAttributeValue("schemaname", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của Copilot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual bot_statecode? statecode
		{
			get
			{
				return ((bot_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của Copilot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual bot_statuscode? statuscode
		{
			get
			{
				return ((bot_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Danh sách các ngôn ngữ bot này hỗ trợ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportedlanguages")]
		public virtual System.Collections.Generic.IEnumerable<chatbotlanguage> SupportedLanguages
		{
			get
			{
				return EntityOptionSetEnum.GetMultiEnum<chatbotlanguage>(this, "supportedlanguages");
			}
			set
			{
				this.SetAttributeValue("supportedlanguages", EntityOptionSetEnum.GetMultiEnum(this, "supportedlanguages", value));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportedlanguagesname")]
		public string supportedlanguagesName
		{
			get
			{
				if (this.FormattedValues.Contains("supportedlanguages"))
				{
					return this.FormattedValues["supportedlanguages"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Dùng để lưu thông tin về các hoạt động đồng bộ hóa của bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("synchronizationstatus")]
		public string SynchronizationStatus
		{
			get
			{
				return this.GetAttributeValue<string>("synchronizationstatus");
			}
			set
			{
				this.SetAttributeValue("synchronizationstatus", value);
			}
		}
		
		/// <summary>
		/// Dùng để xác định mẫu và phiên bản được sử dụng cho nội dung mặc định của bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("template")]
		public string Template
		{
			get
			{
				return this.GetAttributeValue<string>("template");
			}
			set
			{
				this.SetAttributeValue("template", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã dùng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N bot_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> bot_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("bot_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("bot_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> bot_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("bot_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("bot_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_conversationtranscript
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_conversationtranscript")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.conversationtranscript> bot_conversationtranscript
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.conversationtranscript>("bot_conversationtranscript", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.conversationtranscript>("bot_conversationtranscript", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> bot_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("bot_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("bot_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> bot_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("bot_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("bot_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> bot_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("bot_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("bot_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> bot_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("bot_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("bot_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N bot_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> bot_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("bot_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("bot_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// 1:N botcomponent_parent_bot
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("botcomponent_parent_bot")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.botcomponent> botcomponent_parent_bot
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponent>("botcomponent_parent_bot", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponent>("botcomponent_parent_bot", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Comment_Artifact_Bot
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_Bot")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Comment> Comment_Artifact_Bot
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Comment>("Comment_Artifact_Bot", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Comment>("Comment_Artifact_Bot", null, value);
			}
		}
		
		/// <summary>
		/// N:N bot_botcomponent
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_botcomponent")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.botcomponent> bot_botcomponent
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponent>("bot_botcomponent", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponent>("bot_botcomponent", null, value);
			}
		}
		
		/// <summary>
		/// N:N bot_botcomponentcollection
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_botcomponentcollection")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.botcomponentcollection> bot_botcomponentcollection
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponentcollection>("bot_botcomponentcollection", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.botcomponentcollection>("bot_botcomponentcollection", null, value);
			}
		}
		
		/// <summary>
		/// N:N bot_environmentvariabledefinition
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_environmentvariabledefinition")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition> bot_environmentvariabledefinition
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("bot_environmentvariabledefinition", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("bot_environmentvariabledefinition", null, value);
			}
		}
		
		/// <summary>
		/// N:1 bot_connectionreference
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("providerconnectionreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bot_connectionreference")]
		public Dev.DevKit.ProxyTypes.connectionreference bot_connectionreference
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.connectionreference>("bot_connectionreference", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.connectionreference>("bot_connectionreference", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_bot")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_bot
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_bot", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_bot_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_bot_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_bot_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_bot_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_bot_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_bot_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_bot_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_bot_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_bot_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_bot_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_bot_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_bot_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_bot_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_bot_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_bot_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_bot_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 systemuser_bot_publishedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuser_bot_publishedby")]
		public Dev.DevKit.ProxyTypes.SystemUser systemuser_bot_publishedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("systemuser_bot_publishedby", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("systemuser_bot_publishedby", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_bot")]
		public Dev.DevKit.ProxyTypes.Team team_bot
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_bot", null);
			}
		}
		
		/// <summary>
		/// N:1 user_bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_bot")]
		public Dev.DevKit.ProxyTypes.SystemUser user_bot
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_bot", null);
			}
		}
	}
}
#pragma warning restore CS1591
