#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// The way by which the report workspace is managed.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum reportentity_managedtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Dataverse = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Customer = 1,
	}
	
	/// <summary>
	/// Loại của báo cáo.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum report_reporttypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocovdchvboco = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocokhc = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocolinkt = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BococphntrangtrongPowerBI = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BocophntchtrongPowerBI = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExcelEmbeddedReport = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExcelEmbeddedReportTemplate = 7,
	}
	
	/// <summary>
	/// Tóm tắt dữ liệu theo bố cục tiện lợi.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("report")]
	public partial class Report : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the report entity
		/// </summary>
		public partial class Fields
		{
			public const string ApplicationId = "applicationid";
			public const string BodyBinary = "bodybinary";
			public const string BodyText = "bodytext";
			public const string BodyUrl = "bodyurl";
			public const string CdsDatasetId = "cdsdatasetid";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedInMajorVersion = "createdinmajorversion";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomReportXml = "customreportxml";
			public const string DefaultFilter = "defaultfilter";
			public const string DependentModelReportId = "dependentmodelreportid";
			public const string DependentModelReportIdName = "dependentmodelreportidname";
			public const string Description = "description";
			public const string FileContent = "filecontent";
			public const string FileContent_Name = "filecontent_name";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCustomizable = "iscustomizable";
			public const string IsCustomReport = "iscustomreport";
			public const string IsCustomReportName = "iscustomreportname";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsPersonal = "ispersonal";
			public const string IsPersonalName = "ispersonalname";
			public const string IsScheduledReport = "isscheduledreport";
			public const string IsScheduledReportName = "isscheduledreportname";
			public const string LanguageCode = "languagecode";
			public const string ManagedType = "managedtype";
			public const string managedtypeName = "managedtypename";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OriginalBodyText = "originalbodytext";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentReportId = "parentreportid";
			public const string ParentReportIdName = "parentreportidname";
			public const string PowerBiFeatureTag = "powerbifeaturetag";
			public const string PowerBiReportId = "powerbireportid";
			public const string PowerBiReportInternalState = "powerbireportinternalstate";
			public const string PowerBiReportName = "powerbireportname";
			public const string PowerBiWorkspaceInfo = "powerbiworkspaceinfo";
			public const string QueryInfo = "queryinfo";
			public const string RdlHash = "rdlhash";
			public const string ReportId = "reportid";
			public const string Id = "reportid";
			public const string ReportIdUnique = "reportidunique";
			public const string ReportNameOnSRS = "reportnameonsrs";
			public const string ReportStatus = "reportstatus";
			public const string ReportTypeCode = "reporttypecode";
			public const string ReportTypeCodeName = "reporttypecodename";
			public const string ReportVersion = "reportversion";
			public const string ScheduleXml = "schedulexml";
			public const string SignatureDate = "signaturedate";
			public const string SignatureId = "signatureid";
			public const string SignatureLcid = "signaturelcid";
			public const string SignatureMajorVersion = "signaturemajorversion";
			public const string SignatureMinorVersion = "signatureminorversion";
			public const string SolutionId = "solutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Report_AsyncOperations = "Report_AsyncOperations";
			public const string Referencedreport_parent_report = "Referencedreport_parent_report";
			public const string Report_ProcessSessions = "Report_ProcessSessions";
			public const string ReferencedReport_Report_DependentModelReportId = "ReferencedReport_Report_DependentModelReportId";
			public const string report_reportcategories = "report_reportcategories";
			public const string report_reportentities = "report_reportentities";
			public const string report_reportlink = "report_reportlink";
			public const string report_reportlink_sub = "report_reportlink_sub";
			public const string Report_ReportParameter_ReportId = "Report_ReportParameter_ReportId";
			public const string report_reportvisibility = "report_reportvisibility";
			public const string Report_SyncErrors = "Report_SyncErrors";
			public const string userentityinstancedata_report = "userentityinstancedata_report";
			public const string business_unit_reports = "business_unit_reports";
			public const string lk_report_createdonbehalfby = "lk_report_createdonbehalfby";
			public const string lk_report_modifiedonbehalfby = "lk_report_modifiedonbehalfby";
			public const string lk_reportbase_createdby = "lk_reportbase_createdby";
			public const string lk_reportbase_modifiedby = "lk_reportbase_modifiedby";
			public const string Referencingreport_parent_report = "report_parent_report";
			public const string ReferencingReport_Report_DependentModelReportId = "Report_Report_DependentModelReportId";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Report() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "report";
		
		public const string EntityLogicalCollectionName = "reports";
		
		public const string EntitySetName = "reports";
		
		/// <summary>
		/// Represents the application id to which a CDS powerbi report belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationid")]
		public string ApplicationId
		{
			get
			{
				return this.GetAttributeValue<string>("applicationid");
			}
		}
		
		/// <summary>
		/// Nội dung báo cáo dạng nhị phân (mã hóa base-64).
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bodybinary")]
		public string BodyBinary
		{
			get
			{
				return this.GetAttributeValue<string>("bodybinary");
			}
			set
			{
				this.SetAttributeValue("bodybinary", value);
			}
		}
		
		/// <summary>
		/// Nội dung văn bản của tệp RDL dành cho báo cáo của Dịch vụ báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bodytext")]
		public string BodyText
		{
			get
			{
				return this.GetAttributeValue<string>("bodytext");
			}
			set
			{
				this.SetAttributeValue("bodytext", value);
			}
		}
		
		/// <summary>
		/// URL cho báo cáo đã liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bodyurl")]
		public string BodyUrl
		{
			get
			{
				return this.GetAttributeValue<string>("bodyurl");
			}
			set
			{
				this.SetAttributeValue("bodyurl", value);
			}
		}
		
		/// <summary>
		/// Đại diện cho ID tập dữ liệu của một báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cdsdatasetid")]
		public string CdsDatasetId
		{
			get
			{
				return this.GetAttributeValue<string>("cdsdatasetid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số phiên bản chính của Crm, được dùng để xác định phiên bản Crm có báo cáo được tạo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdinmajorversion")]
		public System.Nullable<int> CreatedInMajorVersion
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("createdinmajorversion");
			}
			set
			{
				this.SetAttributeValue("createdinmajorversion", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// XML dùng để xác định báo cáo tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customreportxml")]
		public string CustomReportXml
		{
			get
			{
				return this.GetAttributeValue<string>("customreportxml");
			}
		}
		
		/// <summary>
		/// Bộ lọc mặc định dành cho báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultfilter")]
		public string DefaultFilter
		{
			get
			{
				return this.GetAttributeValue<string>("defaultfilter");
			}
			set
			{
				this.SetAttributeValue("defaultfilter", value);
			}
		}
		
		/// <summary>
		/// Field to represent the dependent report dataset model.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependentmodelreportid")]
		public Microsoft.Xrm.Sdk.EntityReference DependentModelReportId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("dependentmodelreportid");
			}
			set
			{
				this.SetAttributeValue("dependentmodelreportid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependentmodelreportidname")]
		public string DependentModelReportIdName
		{
			get
			{
				if (this.FormattedValues.Contains("dependentmodelreportid"))
				{
					return this.FormattedValues["dependentmodelreportid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mô tả của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filecontent")]
		public object FileContent
		{
			get
			{
				return this.GetAttributeValue<object>("filecontent");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filecontent_name")]
		public string FileContent_Name
		{
			get
			{
				if (this.FormattedValues.Contains("filecontent"))
				{
					return this.FormattedValues["filecontent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên tệp của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filename")]
		public string FileName
		{
			get
			{
				return this.GetAttributeValue<string>("filename");
			}
			set
			{
				this.SetAttributeValue("filename", value);
			}
		}
		
		/// <summary>
		/// Kích thước tệp của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filesize")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("filesize");
			}
		}
		
		/// <summary>
		/// Phiên bản có báo cáo được giới thiệu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Thông tin cho biết liệu có thể tùy chỉnh thành phần này hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Thông tin về khả năng báo cáo là báo cáo tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomreport")]
		public System.Nullable<bool> IsCustomReport
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscustomreport");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomreportname")]
		public string IsCustomReportName
		{
			get
			{
				if (this.FormattedValues.Contains("iscustomreport"))
				{
					return this.FormattedValues["iscustomreport"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết thành phần giải pháp có là một phần của giải pháp được quản lý hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về khả năng báo cáo là cá nhân hoặc có sẵn cho mọi người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispersonal")]
		public System.Nullable<bool> IsPersonal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispersonal");
			}
			set
			{
				this.SetAttributeValue("ispersonal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispersonalname")]
		public string IsPersonalName
		{
			get
			{
				if (this.FormattedValues.Contains("ispersonal"))
				{
					return this.FormattedValues["ispersonal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về khả năng báo cáo là báo cáo theo lịch.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isscheduledreport")]
		public System.Nullable<bool> IsScheduledReport
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isscheduledreport");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isscheduledreportname")]
		public string IsScheduledReportName
		{
			get
			{
				if (this.FormattedValues.Contains("isscheduledreport"))
				{
					return this.FormattedValues["isscheduledreport"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngôn ngữ sẽ hiển thị báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
		public System.Nullable<int> LanguageCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languagecode");
			}
			set
			{
				this.SetAttributeValue("languagecode", value);
			}
		}
		
		/// <summary>
		/// Determine how the report workspace is managed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedtype")]
		public virtual reportentity_managedtype? ManagedType
		{
			get
			{
				return ((reportentity_managedtype?)(EntityOptionSetEnum.GetEnum(this, "managedtype")));
			}
			set
			{
				this.SetAttributeValue("managedtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedtypename")]
		public string managedtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("managedtype"))
				{
					return this.FormattedValues["managedtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại MIME của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
		public string MimeType
		{
			get
			{
				return this.GetAttributeValue<string>("mimetype");
			}
			set
			{
				this.SetAttributeValue("mimetype", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Nội dung Văn bản gốc của tệp RDL dành cho báo cáo của Dịch vụ báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originalbodytext")]
		public string OriginalBodyText
		{
			get
			{
				return this.GetAttributeValue<string>("originalbodytext");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bơn vị kinh doanh sở hữu báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của báo cáo mẹ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentreportid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentReportId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentreportid");
			}
			set
			{
				this.SetAttributeValue("parentreportid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentreportidname")]
		public string ParentReportIdName
		{
			get
			{
				if (this.FormattedValues.Contains("parentreportid"))
				{
					return this.FormattedValues["parentreportid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Field to maintain the sub application id and feature tag for powerbi reports.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbifeaturetag")]
		public string PowerBiFeatureTag
		{
			get
			{
				return this.GetAttributeValue<string>("powerbifeaturetag");
			}
			set
			{
				this.SetAttributeValue("powerbifeaturetag", value);
			}
		}
		
		/// <summary>
		/// Represents the powerbi report id for a CDS report.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbireportid")]
		public string PowerBiReportId
		{
			get
			{
				return this.GetAttributeValue<string>("powerbireportid");
			}
		}
		
		/// <summary>
		/// Field to maintain the internal state of the report
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbireportinternalstate")]
		public string PowerBiReportInternalState
		{
			get
			{
				return this.GetAttributeValue<string>("powerbireportinternalstate");
			}
		}
		
		/// <summary>
		/// Chứa tên của báo cáo Power BI Embedded.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbireportname")]
		public string PowerBiReportName
		{
			get
			{
				return this.GetAttributeValue<string>("powerbireportname");
			}
		}
		
		/// <summary>
		/// Chứa thông tin không gian làm việc của báo cáo Power BI Embedded.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("powerbiworkspaceinfo")]
		public string PowerBiWorkspaceInfo
		{
			get
			{
				return this.GetAttributeValue<string>("powerbiworkspaceinfo");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queryinfo")]
		public string QueryInfo
		{
			get
			{
				return this.GetAttributeValue<string>("queryinfo");
			}
		}
		
		/// <summary>
		/// Giá trị hàm băm của văn bản nội dung báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rdlhash")]
		public System.Nullable<int> RdlHash
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rdlhash");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportid")]
		public System.Nullable<System.Guid> ReportId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reportid");
			}
			set
			{
				this.SetAttributeValue("reportid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ReportId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportidunique")]
		public System.Nullable<System.Guid> ReportIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reportidunique");
			}
		}
		
		/// <summary>
		/// Tên của báo cáo trên SRS.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportnameonsrs")]
		public string ReportNameOnSRS
		{
			get
			{
				return this.GetAttributeValue<string>("reportnameonsrs");
			}
		}
		
		/// <summary>
		/// Đại diện cho trạng thái của Báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportstatus")]
		public string ReportStatus
		{
			get
			{
				return this.GetAttributeValue<string>("reportstatus");
			}
			set
			{
				this.SetAttributeValue("reportstatus", value);
			}
		}
		
		/// <summary>
		/// Loại của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reporttypecode")]
		public virtual report_reporttypecode? ReportTypeCode
		{
			get
			{
				return ((report_reporttypecode?)(EntityOptionSetEnum.GetEnum(this, "reporttypecode")));
			}
			set
			{
				this.SetAttributeValue("reporttypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reporttypecodename")]
		public string ReportTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("reporttypecode"))
				{
					return this.FormattedValues["reporttypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Đại diện cho phiên bản của một báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportversion")]
		public System.Nullable<int> ReportVersion
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("reportversion");
			}
			set
			{
				this.SetAttributeValue("reportversion", value);
			}
		}
		
		/// <summary>
		/// XML dùng để xác định lịch báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schedulexml")]
		public string ScheduleXml
		{
			get
			{
				return this.GetAttributeValue<string>("schedulexml");
			}
		}
		
		/// <summary>
		/// Ngày ký báo cáo, dùng để nhận dạng báo cáo cho nâng cấp và vá lỗi nóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signaturedate")]
		public System.Nullable<System.DateTime> SignatureDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("signaturedate");
			}
			set
			{
				this.SetAttributeValue("signaturedate", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của chữ ký báo cáo, dùng để nhận dạng báo cáo cho nâng cấp và vá lỗi nóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signatureid")]
		public System.Nullable<System.Guid> SignatureId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("signatureid");
			}
			set
			{
				this.SetAttributeValue("signatureid", value);
			}
		}
		
		/// <summary>
		/// Chữ ký báo cáo, mã ngôn ngữ dùng để nhận dạng báo cáo cho nâng cấp và vá lỗi nóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signaturelcid")]
		public System.Nullable<int> SignatureLcid
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("signaturelcid");
			}
			set
			{
				this.SetAttributeValue("signaturelcid", value);
			}
		}
		
		/// <summary>
		/// Phiên bản chính của chữ ký báo cáo, dùng để nhận dạng báo cáo cho nâng cấp và vá lỗi nóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signaturemajorversion")]
		public System.Nullable<int> SignatureMajorVersion
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("signaturemajorversion");
			}
			set
			{
				this.SetAttributeValue("signaturemajorversion", value);
			}
		}
		
		/// <summary>
		/// Phiên bản phụ của chữ ký báo cáo, dùng để nhận dạng báo cáo cho nâng cấp và vá lỗi nóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("signatureminorversion")]
		public System.Nullable<int> SignatureMinorVersion
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("signatureminorversion");
			}
			set
			{
				this.SetAttributeValue("signatureminorversion", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N Report_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> Report_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Report_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Report_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N report_parent_report
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Report> Referencedreport_parent_report
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Report>("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Report>("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N Report_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> Report_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("Report_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("Report_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Report_Report_DependentModelReportId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Report> ReferencedReport_Report_DependentModelReportId
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Report>("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Report>("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N report_reportcategories
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportcategories")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportCategory> report_reportcategories
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportCategory>("report_reportcategories", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportCategory>("report_reportcategories", null, value);
			}
		}
		
		/// <summary>
		/// 1:N report_reportentities
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportentities")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportEntity> report_reportentities
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportEntity>("report_reportentities", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportEntity>("report_reportentities", null, value);
			}
		}
		
		/// <summary>
		/// 1:N report_reportlink
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportlink")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportLink> report_reportlink
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportLink>("report_reportlink", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportLink>("report_reportlink", null, value);
			}
		}
		
		/// <summary>
		/// 1:N report_reportlink_sub
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportlink_sub")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportLink> report_reportlink_sub
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportLink>("report_reportlink_sub", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportLink>("report_reportlink_sub", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Report_ReportParameter_ReportId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_ReportParameter_ReportId")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportParameter> Report_ReportParameter_ReportId
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportParameter>("Report_ReportParameter_ReportId", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportParameter>("Report_ReportParameter_ReportId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N report_reportvisibility
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportvisibility")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ReportVisibility> report_reportvisibility
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ReportVisibility>("report_reportvisibility", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ReportVisibility>("report_reportvisibility", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Report_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> Report_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Report_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Report_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_report
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_report")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_report
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_report", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_report", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_reports
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_reports")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_reports
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_reports", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_report_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_report_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_report_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_report_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_report_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_report_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_report_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_report_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportbase_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportbase_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 report_parent_report
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentreportid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Dev.DevKit.ProxyTypes.Report Referencingreport_parent_report
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("report_parent_report", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 Report_Report_DependentModelReportId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependentmodelreportid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Dev.DevKit.ProxyTypes.Report ReferencingReport_Report_DependentModelReportId
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("Report_Report_DependentModelReportId", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
	}
}
#pragma warning restore CS1591
