#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Xác định tổng đếm mà trong đó, mẫu lặp lại hợp lệ đối với khoảng đã cho.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum recurrencerule_instance
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		utin = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thhai = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thba = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tht = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cuicng = 5,
	}
	
	/// <summary>
	/// Loại kết thúc mẫu của chuỗi lặp lại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum recurrencerule_patternendtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngcNgyKtthc = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Lnxyra = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NgyKtthcKiu = 3,
	}
	
	/// <summary>
	/// Loại lặp lại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum recurrencerule_recurrencepatterntype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngngy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngtun = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngthng = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngnm = 3,
	}
	
	/// <summary>
	/// Quy tắc lặp lại cho biết kiểu phạm vi ảnh hưởng của thực thể lặp lại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recurrencerule")]
	public partial class RecurrenceRule : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the recurrencerule entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DayOfMonth = "dayofmonth";
			public const string DaysOfWeekMask = "daysofweekmask";
			public const string Duration = "duration";
			public const string EffectiveEndDate = "effectiveenddate";
			public const string EffectiveStartDate = "effectivestartdate";
			public const string EndTime = "endtime";
			public const string FirstDayOfWeek = "firstdayofweek";
			public const string Instance = "instance";
			public const string InstanceName = "instancename";
			public const string Interval = "interval";
			public const string IsNthMonthly = "isnthmonthly";
			public const string IsNthMonthlyName = "isnthmonthlyname";
			public const string IsNthYearly = "isnthyearly";
			public const string IsNthYearlyName = "isnthyearlyname";
			public const string IsRegenerate = "isregenerate";
			public const string IsRegenerateName = "isregeneratename";
			public const string IsWeekDayPattern = "isweekdaypattern";
			public const string IsWeekDayPatternName = "isweekdaypatternname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MonthOfYear = "monthofyear";
			public const string MonthOfYearName = "monthofyearname";
			public const string ObjectId = "objectid";
			public const string Occurrences = "occurrences";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PatternEndDate = "patternenddate";
			public const string PatternEndType = "patternendtype";
			public const string PatternEndTypeName = "patternendtypename";
			public const string PatternStartDate = "patternstartdate";
			public const string RecurrencePatternType = "recurrencepatterntype";
			public const string RecurrencePatternTypeName = "recurrencepatterntypename";
			public const string RuleId = "ruleid";
			public const string Id = "ruleid";
			public const string StartTime = "starttime";
			public const string VersionNumber = "versionnumber";
			public const string recurrencerule_recurringappointmentmaster = "recurrencerule_recurringappointmentmaster";
			public const string activity_pointer_recurrencerule = "activity_pointer_recurrencerule";
			public const string business_unit_recurrencerule = "business_unit_recurrencerule";
			public const string lk_recurrencerule_createdby = "lk_recurrencerule_createdby";
			public const string lk_recurrencerule_modifiedby = "lk_recurrencerule_modifiedby";
			public const string lk_recurrencerulebase_createdonbehalfby = "lk_recurrencerulebase_createdonbehalfby";
			public const string lk_recurrencerulebase_modifiedonbehalfby = "lk_recurrencerulebase_modifiedonbehalfby";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public RecurrenceRule() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recurrencerule";
		
		public const string EntityLogicalCollectionName = "recurrencerules";
		
		public const string EntitySetName = "recurrencerules";
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày giờ tạo quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày của tháng xảy ra cuộc hẹn hoặc nhiệm vụ lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dayofmonth")]
		public System.Nullable<int> DayOfMonth
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dayofmonth");
			}
			set
			{
				this.SetAttributeValue("dayofmonth", value);
			}
		}
		
		/// <summary>
		/// Bitmask cho biết ngày của tuần xảy ra cuộc hẹn hoặc nhiệm vụ lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daysofweekmask")]
		public System.Nullable<int> DaysOfWeekMask
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("daysofweekmask");
			}
			set
			{
				this.SetAttributeValue("daysofweekmask", value);
			}
		}
		
		/// <summary>
		/// Khoảng thời gian của mẫu lặp lại, tính bằng phút.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
			set
			{
				this.SetAttributeValue("duration", value);
			}
		}
		
		/// <summary>
		/// Ngày kết thúc thực tế dành cho mở rộng mẫu lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectiveenddate")]
		public System.Nullable<System.DateTime> EffectiveEndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectiveenddate");
			}
			set
			{
				this.SetAttributeValue("effectiveenddate", value);
			}
		}
		
		/// <summary>
		/// Ngày bắt đầu thực tế dành cho mở rộng mẫu lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivestartdate")]
		public System.Nullable<System.DateTime> EffectiveStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectivestartdate");
			}
			set
			{
				this.SetAttributeValue("effectivestartdate", value);
			}
		}
		
		/// <summary>
		/// Thời gian kết thúc của hoạt động đã liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
			}
			set
			{
				this.SetAttributeValue("endtime", value);
			}
		}
		
		/// <summary>
		/// Ngày đầu tiên của tuần dành cho mẫu lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstdayofweek")]
		public System.Nullable<int> FirstDayOfWeek
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("firstdayofweek");
			}
			set
			{
				this.SetAttributeValue("firstdayofweek", value);
			}
		}
		
		/// <summary>
		/// Xác định tổng đếm mà trong đó, mẫu lặp lại hợp lệ đối với khoảng đã cho.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
		public virtual recurrencerule_instance? Instance
		{
			get
			{
				return ((recurrencerule_instance?)(EntityOptionSetEnum.GetEnum(this, "instance")));
			}
			set
			{
				this.SetAttributeValue("instance", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancename")]
		public string InstanceName
		{
			get
			{
				if (this.FormattedValues.Contains("instance"))
				{
					return this.FormattedValues["instance"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số lượng đơn vị của loại lặp lại đã cho giữa các lần xảy ra.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interval")]
		public System.Nullable<int> Interval
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("interval");
			}
			set
			{
				this.SetAttributeValue("interval", value);
			}
		}
		
		/// <summary>
		/// Xác định khả năng mẫu lập lại hàng tháng là vào ngày thứ N hàng tháng, duy nhất hợp lệ cho lặp lại hàng tháng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthmonthly")]
		public System.Nullable<bool> IsNthMonthly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthmonthly");
			}
			set
			{
				this.SetAttributeValue("isnthmonthly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthmonthlyname")]
		public string IsNthMonthlyName
		{
			get
			{
				if (this.FormattedValues.Contains("isnthmonthly"))
				{
					return this.FormattedValues["isnthmonthly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Xác định khả năng mẫu lập lại hàng năm là vào tháng thứ N hàng năm, duy nhất hợp lệ cho lặp lại hàng năm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthyearly")]
		public System.Nullable<bool> IsNthYearly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthyearly");
			}
			set
			{
				this.SetAttributeValue("isnthyearly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthyearlyname")]
		public string IsNthYearlyName
		{
			get
			{
				if (this.FormattedValues.Contains("isnthyearly"))
				{
					return this.FormattedValues["isnthyearly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Duy nhất hợp lệ cho lặp lại của loại nhiệm vụ, chỉ định có tạo nhiệm vụ hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregenerate")]
		public System.Nullable<bool> IsRegenerate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregenerate");
			}
			set
			{
				this.SetAttributeValue("isregenerate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregeneratename")]
		public string IsRegenerateName
		{
			get
			{
				if (this.FormattedValues.Contains("isregenerate"))
				{
					return this.FormattedValues["isregenerate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Xác định mẫu lặp lại hàng tuần thực sự là mẫu hàng ngày vào mỗi ngày trong tuần, duy nhất hợp lệ cho mẫu hàng tuần.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isweekdaypattern")]
		public System.Nullable<bool> IsWeekDayPattern
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isweekdaypattern");
			}
			set
			{
				this.SetAttributeValue("isweekdaypattern", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isweekdaypatternname")]
		public string IsWeekDayPatternName
		{
			get
			{
				if (this.FormattedValues.Contains("isweekdaypattern"))
				{
					return this.FormattedValues["isweekdaypattern"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi quy tắc lặp lại lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi quy tắc lặp lại lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Xác định tháng của năm hợp lệ cho mẫu lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
		public virtual recurrencerule_monthofyear? MonthOfYear
		{
			get
			{
				return ((recurrencerule_monthofyear?)(EntityOptionSetEnum.GetEnum(this, "monthofyear")));
			}
			set
			{
				this.SetAttributeValue("monthofyear", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyearname")]
		public string MonthOfYearName
		{
			get
			{
				if (this.FormattedValues.Contains("monthofyear"))
				{
					return this.FormattedValues["monthofyear"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đối tượng có liên kết với quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		public Microsoft.Xrm.Sdk.EntityReference ObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("objectid");
			}
			set
			{
				this.SetAttributeValue("objectid", value);
			}
		}
		
		/// <summary>
		/// Số lần xảy ra cho mẫu lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("occurrences")]
		public System.Nullable<int> Occurrences
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("occurrences");
			}
			set
			{
				this.SetAttributeValue("occurrences", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Ngày kết thúc của phạm vi lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternenddate")]
		public System.Nullable<System.DateTime> PatternEndDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternenddate");
			}
			set
			{
				this.SetAttributeValue("patternenddate", value);
			}
		}
		
		/// <summary>
		/// Loại kết thúc mẫu của chuỗi lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
		public virtual recurrencerule_patternendtype? PatternEndType
		{
			get
			{
				return ((recurrencerule_patternendtype?)(EntityOptionSetEnum.GetEnum(this, "patternendtype")));
			}
			set
			{
				this.SetAttributeValue("patternendtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtypename")]
		public string PatternEndTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("patternendtype"))
				{
					return this.FormattedValues["patternendtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày bắt đầu của Phạm vi lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternstartdate")]
		public System.Nullable<System.DateTime> PatternStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternstartdate");
			}
			set
			{
				this.SetAttributeValue("patternstartdate", value);
			}
		}
		
		/// <summary>
		/// Loại lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
		public virtual recurrencerule_recurrencepatterntype? RecurrencePatternType
		{
			get
			{
				return ((recurrencerule_recurrencepatterntype?)(EntityOptionSetEnum.GetEnum(this, "recurrencepatterntype")));
			}
			set
			{
				this.SetAttributeValue("recurrencepatterntype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntypename")]
		public string RecurrencePatternTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("recurrencepatterntype"))
				{
					return this.FormattedValues["recurrencepatterntype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của thực thể có liên kết với quy tắc lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ruleid")]
		public System.Nullable<System.Guid> RuleId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ruleid");
			}
			set
			{
				this.SetAttributeValue("ruleid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ruleid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.RuleId = value;
			}
		}
		
		/// <summary>
		/// Thời gian bắt đầu của hoạt động lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
			}
			set
			{
				this.SetAttributeValue("starttime", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N recurrencerule_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurrencerule_recurringappointmentmaster")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster> recurrencerule_recurringappointmentmaster
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster>("recurrencerule_recurringappointmentmaster", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster>("recurrencerule_recurringappointmentmaster", null, value);
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_recurrencerule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_recurrencerule")]
		public Dev.DevKit.ProxyTypes.ActivityPointer activity_pointer_recurrencerule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ActivityPointer>("activity_pointer_recurrencerule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ActivityPointer>("activity_pointer_recurrencerule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_recurrencerule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_recurrencerule")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_recurrencerule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_recurrencerule", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurrencerule_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurrencerule_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recurrencerule_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recurrencerule_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurrencerule_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurrencerule_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recurrencerule_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recurrencerule_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurrencerulebase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurrencerulebase_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recurrencerulebase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recurrencerulebase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurrencerulebase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurrencerulebase_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recurrencerulebase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recurrencerulebase_modifiedonbehalfby", null);
			}
		}
	}
}
#pragma warning restore CS1591
