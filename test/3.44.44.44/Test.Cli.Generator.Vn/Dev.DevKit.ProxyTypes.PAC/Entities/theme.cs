#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Trạng thái của Chủ đề
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum theme_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do cho trạng thái của Chủ đề
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum theme_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tychnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hthng = 2,
	}
	
	/// <summary>
	/// Thông tin được sử dụng để đặt tùy chọn chủ đề hình ảnh tùy chỉnh cho các ứng dụng khách.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("theme")]
	public partial class Theme : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the theme entity
		/// </summary>
		public partial class Fields
		{
			public const string AccentColor = "accentcolor";
			public const string BackgroundColor = "backgroundcolor";
			public const string ControlBorder = "controlborder";
			public const string ControlShade = "controlshade";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DefaultCustomEntityColor = "defaultcustomentitycolor";
			public const string DefaultEntityColor = "defaultentitycolor";
			public const string ExchangeRate = "exchangerate";
			public const string GlobalLinkColor = "globallinkcolor";
			public const string HeaderColor = "headercolor";
			public const string HoverLinkEffect = "hoverlinkeffect";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDefaultTheme = "isdefaulttheme";
			public const string IsDefaultThemeName = "isdefaultthemename";
			public const string LogoId = "logoid";
			public const string LogoIdName = "logoidname";
			public const string LogoToolTip = "logotooltip";
			public const string MainColor = "maincolor";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NavBarBackgroundColor = "navbarbackgroundcolor";
			public const string NavBarShelfColor = "navbarshelfcolor";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string PageHeaderBackgroundColor = "pageheaderbackgroundcolor";
			public const string PanelHeaderBackgroundColor = "panelheaderbackgroundcolor";
			public const string ProcessControlColor = "processcontrolcolor";
			public const string SelectedLinkEffect = "selectedlinkeffect";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string ThemeId = "themeid";
			public const string Id = "themeid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string Type = "type";
			public const string TypeName = "typename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string theme_AsyncOperations = "theme_AsyncOperations";
			public const string theme_BulkDeleteFailures = "theme_BulkDeleteFailures";
			public const string theme_ProcessSession = "theme_ProcessSession";
			public const string theme_UserEntityInstanceDatas = "theme_UserEntityInstanceDatas";
			public const string lk_theme_createdby = "lk_theme_createdby";
			public const string lk_theme_createdonbehalfby = "lk_theme_createdonbehalfby";
			public const string lk_theme_logoid = "lk_theme_logoid";
			public const string lk_theme_modifiedby = "lk_theme_modifiedby";
			public const string lk_theme_modifiedonbehalfby = "lk_theme_modifiedonbehalfby";
			public const string organization_theme = "organization_theme";
			public const string TransactionCurrency_Theme = "TransactionCurrency_Theme";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Theme() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "theme";
		
		public const string EntityLogicalCollectionName = "themes";
		
		public const string EntitySetName = "themes";
		
		public const int EntityTypeCode = 2015;
		
		/// <summary>
		/// Chọn màu chủ đề phụ cho Giao diện Hợp nhất được dùng trên kiểm soát quy trình
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accentcolor")]
		public string AccentColor
		{
			get
			{
				return this.GetAttributeValue<string>("accentcolor");
			}
			set
			{
				this.SetAttributeValue("accentcolor", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("backgroundcolor")]
		public string BackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("backgroundcolor");
			}
			set
			{
				this.SetAttributeValue("backgroundcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu mà các điều khiển sẽ sử dụng cho đường viền
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("controlborder")]
		public string ControlBorder
		{
			get
			{
				return this.GetAttributeValue<string>("controlborder");
			}
			set
			{
				this.SetAttributeValue("controlborder", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền cho các kiểm soát sẽ sử dụng để cho biết khi bạn di chuột qua các mục
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("controlshade")]
		public string ControlShade
		{
			get
			{
				return this.GetAttributeValue<string>("controlshade");
			}
			set
			{
				this.SetAttributeValue("controlshade", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn màu thực thể tùy chỉnh mặc định nếu không có màu nào được gán
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultcustomentitycolor")]
		public string DefaultCustomEntityColor
		{
			get
			{
				return this.GetAttributeValue<string>("defaultcustomentitycolor");
			}
			set
			{
				this.SetAttributeValue("defaultcustomentitycolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu mặc định cho các thực thể hệ thống nếu không có màu nào được gán
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultentitycolor")]
		public string DefaultEntityColor
		{
			get
			{
				return this.GetAttributeValue<string>("defaultentitycolor");
			}
			set
			{
				this.SetAttributeValue("defaultentitycolor", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với Chủ đề theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Chọn màu cho tất cả các liên kết, chẳng hạn như địa chỉ email và liên kết tra cứu, và cho tất cả các nút được tập trung
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globallinkcolor")]
		public string GlobalLinkColor
		{
			get
			{
				return this.GetAttributeValue<string>("globallinkcolor");
			}
			set
			{
				this.SetAttributeValue("globallinkcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu cho văn bản tiêu đề, chẳng hạn như các nhãn thẻ của biểu mẫu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("headercolor")]
		public string HeaderColor
		{
			get
			{
				return this.GetAttributeValue<string>("headercolor");
			}
			set
			{
				this.SetAttributeValue("headercolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu mà các lệnh hoặc danh sách sẽ sử dụng để cho biết các mục được di chuột qua
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hoverlinkeffect")]
		public string HoverLinkEffect
		{
			get
			{
				return this.GetAttributeValue<string>("hoverlinkeffect");
			}
			set
			{
				this.SetAttributeValue("hoverlinkeffect", value);
			}
		}
		
		/// <summary>
		/// Số thứ tự của quá trình nhập tạo ra bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Trạng thái mặc định của chủ đề.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaulttheme")]
		public System.Nullable<bool> IsDefaultTheme
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdefaulttheme");
			}
			set
			{
				this.SetAttributeValue("isdefaulttheme", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdefaultthemename")]
		public string IsDefaultThemeName
		{
			get
			{
				if (this.FormattedValues.Contains("isdefaulttheme"))
				{
					return this.FormattedValues["isdefaulttheme"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tải lên tài nguyên web để sử dụng làm logo. Kích thước được khuyến nghị là cao 50 pixel và rộng tối đa 400.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logoid")]
		public Microsoft.Xrm.Sdk.EntityReference LogoId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("logoid");
			}
			set
			{
				this.SetAttributeValue("logoid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logoidname")]
		public string LogoIdName
		{
			get
			{
				if (this.FormattedValues.Contains("logoid"))
				{
					return this.FormattedValues["logoid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập văn bản sẽ được dùng làm công cụ chú giải và văn bản thay thế cho logo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logotooltip")]
		public string LogoToolTip
		{
			get
			{
				return this.GetAttributeValue<string>("logotooltip");
			}
			set
			{
				this.SetAttributeValue("logotooltip", value);
			}
		}
		
		/// <summary>
		/// Chọn màu chủ đề chính cho Giao diện Hợp nhất được dùng trên thanh lệnh, các nút và thẻ chính
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maincolor")]
		public string MainColor
		{
			get
			{
				return this.GetAttributeValue<string>("maincolor");
			}
			set
			{
				this.SetAttributeValue("maincolor", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của Thực thể Chủ đề.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền của Thanh Điều hướng chính
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("navbarbackgroundcolor")]
		public string NavBarBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("navbarbackgroundcolor");
			}
			set
			{
				this.SetAttributeValue("navbarbackgroundcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền của Thanh Điều hướng phụ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("navbarshelfcolor")]
		public string NavBarShelfColor
		{
			get
			{
				return this.GetAttributeValue<string>("navbarshelfcolor");
			}
			set
			{
				this.SetAttributeValue("navbarshelfcolor", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho tổ chức
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ dịch chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền của tiêu đề trang
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("pageheaderbackgroundcolor")]
		public string PageHeaderBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("pageheaderbackgroundcolor");
			}
			set
			{
				this.SetAttributeValue("pageheaderbackgroundcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền của tiêu đề bảng điều khiển
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("panelheaderbackgroundcolor")]
		public string PanelHeaderBackgroundColor
		{
			get
			{
				return this.GetAttributeValue<string>("panelheaderbackgroundcolor");
			}
			set
			{
				this.SetAttributeValue("panelheaderbackgroundcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu nền chính cho các kiểm soát quy trình
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcontrolcolor")]
		public string ProcessControlColor
		{
			get
			{
				return this.GetAttributeValue<string>("processcontrolcolor");
			}
			set
			{
				this.SetAttributeValue("processcontrolcolor", value);
			}
		}
		
		/// <summary>
		/// Chọn màu mà các lệnh hoặc danh sách sẽ sử dụng để cho biết các mục được chọn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("selectedlinkeffect")]
		public string SelectedLinkEffect
		{
			get
			{
				return this.GetAttributeValue<string>("selectedlinkeffect");
			}
			set
			{
				this.SetAttributeValue("selectedlinkeffect", value);
			}
		}
		
		/// <summary>
		/// Trạng thái của Chủ đề
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual theme_statecode? statecode
		{
			get
			{
				return ((theme_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do cho trạng thái của Chủ đề
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual theme_statuscode? statuscode
		{
			get
			{
				return ((theme_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("themeid")]
		public System.Nullable<System.Guid> ThemeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("themeid");
			}
			set
			{
				this.SetAttributeValue("themeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("themeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ThemeId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với Chủ đề theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Định nghĩa loại chủ đề.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("type")]
		public System.Nullable<bool> Type
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("type");
			}
			set
			{
				this.SetAttributeValue("type", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("typename")]
		public string TypeName
		{
			get
			{
				if (this.FormattedValues.Contains("type"))
				{
					return this.FormattedValues["type"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N theme_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> theme_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("theme_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("theme_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N theme_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> theme_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("theme_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("theme_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N theme_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> theme_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("theme_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("theme_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N theme_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("theme_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> theme_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("theme_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("theme_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_theme_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_theme_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_theme_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_theme_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_logoid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logoid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_logoid")]
		public Dev.DevKit.ProxyTypes.WebResource lk_theme_logoid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.WebResource>("lk_theme_logoid", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.WebResource>("lk_theme_logoid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_theme_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_theme_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_theme_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_theme_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_theme_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_theme_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_theme")]
		public Dev.DevKit.ProxyTypes.Organization organization_theme
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_theme", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Theme
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Theme")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_Theme
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_Theme", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_Theme", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
