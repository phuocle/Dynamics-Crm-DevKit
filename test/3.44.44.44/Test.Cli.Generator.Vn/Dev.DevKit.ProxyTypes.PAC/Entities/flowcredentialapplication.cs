#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Kiểu chia sẻ flowcredentialapplication.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowcredentialapplication_sharingtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Xptng = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hyxptng = 1,
	}
	
	/// <summary>
	/// Trạng thái của flowcredentialapplication
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowcredentialapplication_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của flowcredentialapplication
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowcredentialapplication_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhoat = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghoatng = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("flowcredentialapplication")]
	public partial class flowcredentialapplication : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the flowcredentialapplication entity
		/// </summary>
		public partial class Fields
		{
			public const string applicationid = "applicationid";
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string description = "description";
			public const string flowcredentialapplicationId = "flowcredentialapplicationid";
			public const string Id = "flowcredentialapplicationid";
			public const string flowmachinegroupid = "flowmachinegroupid";
			public const string flowmachinegroupidName = "flowmachinegroupidname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string primarycertificatefile = "primarycertificatefile";
			public const string secondarycertificatefile = "secondarycertificatefile";
			public const string sharingtype = "sharingtype";
			public const string sharingtypeName = "sharingtypename";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string thumbprint = "thumbprint";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string flowcredentialapplication_AsyncOperations = "flowcredentialapplication_AsyncOperations";
			public const string flowcredentialapplication_BulkDeleteFailures = "flowcredentialapplication_BulkDeleteFailures";
			public const string flowcredentialapplication_DuplicateBaseRecord = "flowcredentialapplication_DuplicateBaseRecord";
			public const string flowcredentialapplication_DuplicateMatchingRecord = "flowcredentialapplication_DuplicateMatchingRecord";
			public const string flowcredentialapplication_MailboxTrackingFolders = "flowcredentialapplication_MailboxTrackingFolders";
			public const string flowcredentialapplication_PrincipalObjectAttributeAccesses = "flowcredentialapplication_PrincipalObjectAttributeAccesses";
			public const string flowcredentialapplication_ProcessSession = "flowcredentialapplication_ProcessSession";
			public const string flowcredentialapplication_SyncErrors = "flowcredentialapplication_SyncErrors";
			public const string flowcredentialapplication_UserEntityInstanceDatas = "flowcredentialapplication_UserEntityInstanceDatas";
			public const string business_unit_flowcredentialapplication = "business_unit_flowcredentialapplication";
			public const string flowcredentialapplication_flowmachinegroup = "flowcredentialapplication_flowmachinegroup";
			public const string lk_flowcredentialapplication_createdby = "lk_flowcredentialapplication_createdby";
			public const string lk_flowcredentialapplication_createdonbehalfby = "lk_flowcredentialapplication_createdonbehalfby";
			public const string lk_flowcredentialapplication_modifiedby = "lk_flowcredentialapplication_modifiedby";
			public const string lk_flowcredentialapplication_modifiedonbehalfby = "lk_flowcredentialapplication_modifiedonbehalfby";
			public const string team_flowcredentialapplication = "team_flowcredentialapplication";
			public const string user_flowcredentialapplication = "user_flowcredentialapplication";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public flowcredentialapplication() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "flowcredentialapplication";
		
		public const string EntityLogicalCollectionName = "flowcredentialapplications";
		
		public const string EntitySetName = "flowcredentialapplications";
		
		public const int EntityTypeCode = 10080;
		
		/// <summary>
		/// Mã định danh duy nhất của ứng dụng như được đăng ký trong CyberArk CCP
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationid")]
		public string applicationid
		{
			get
			{
				return this.GetAttributeValue<string>("applicationid");
			}
			set
			{
				this.SetAttributeValue("applicationid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mô tả về Ứng dụng thông tin xác thực dòng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho các phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowcredentialapplicationid")]
		public System.Nullable<System.Guid> flowcredentialapplicationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("flowcredentialapplicationid");
			}
			set
			{
				this.SetAttributeValue("flowcredentialapplicationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowcredentialapplicationid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.flowcredentialapplicationId = value;
			}
		}
		
		/// <summary>
		/// Nhóm máy trong dòng quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinegroupid")]
		public Microsoft.Xrm.Sdk.EntityReference flowmachinegroupid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("flowmachinegroupid");
			}
			set
			{
				this.SetAttributeValue("flowmachinegroupid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinegroupidname")]
		public string flowmachinegroupidName
		{
			get
			{
				if (this.FormattedValues.Contains("flowmachinegroupid"))
				{
					return this.FormattedValues["flowmachinegroupid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số thứ tự của lượt nhập đã tạo ra bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// ID chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Chứng chỉ sẽ được sử dụng làm chứng chỉ ứng dụng khách SSL để liên hệ với CCP. Trường này được mã hóa bằng khóa chung của nhóm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarycertificatefile")]
		public string primarycertificatefile
		{
			get
			{
				return this.GetAttributeValue<string>("primarycertificatefile");
			}
			set
			{
				this.SetAttributeValue("primarycertificatefile", value);
			}
		}
		
		/// <summary>
		/// Chứng chỉ sẽ được sử dụng làm chứng chỉ ứng dụng khách SSL để liên hệ với CCP. Trường này được mã hóa bằng khóa thứ cấp chung của nhóm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("secondarycertificatefile")]
		public string secondarycertificatefile
		{
			get
			{
				return this.GetAttributeValue<string>("secondarycertificatefile");
			}
			set
			{
				this.SetAttributeValue("secondarycertificatefile", value);
			}
		}
		
		/// <summary>
		/// Kiểu chia sẻ flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharingtype")]
		public virtual flowcredentialapplication_sharingtype? sharingtype
		{
			get
			{
				return ((flowcredentialapplication_sharingtype?)(EntityOptionSetEnum.GetEnum(this, "sharingtype")));
			}
			set
			{
				this.SetAttributeValue("sharingtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharingtypename")]
		public string sharingtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("sharingtype"))
				{
					return this.FormattedValues["sharingtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual flowcredentialapplication_statecode? statecode
		{
			get
			{
				return ((flowcredentialapplication_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual flowcredentialapplication_statuscode? statuscode
		{
			get
			{
				return ((flowcredentialapplication_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Vân tay tương ứng với chứng chỉ CyberArk được sử dụng để xác định chứng chỉ vì nó sẽ được mã hóa bằng các khóa nhóm máy dòng quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("thumbprint")]
		public string thumbprint
		{
			get
			{
				return this.GetAttributeValue<string>("thumbprint");
			}
			set
			{
				this.SetAttributeValue("thumbprint", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> flowcredentialapplication_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("flowcredentialapplication_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("flowcredentialapplication_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> flowcredentialapplication_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("flowcredentialapplication_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("flowcredentialapplication_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> flowcredentialapplication_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowcredentialapplication_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowcredentialapplication_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> flowcredentialapplication_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowcredentialapplication_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowcredentialapplication_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> flowcredentialapplication_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("flowcredentialapplication_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("flowcredentialapplication_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> flowcredentialapplication_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("flowcredentialapplication_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("flowcredentialapplication_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> flowcredentialapplication_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("flowcredentialapplication_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("flowcredentialapplication_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> flowcredentialapplication_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("flowcredentialapplication_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("flowcredentialapplication_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> flowcredentialapplication_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("flowcredentialapplication_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("flowcredentialapplication_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_flowcredentialapplication")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_flowcredentialapplication
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_flowcredentialapplication", null);
			}
		}
		
		/// <summary>
		/// N:1 flowcredentialapplication_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinegroupid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_flowmachinegroup")]
		public Dev.DevKit.ProxyTypes.flowmachinegroup flowcredentialapplication_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachinegroup>("flowcredentialapplication_flowmachinegroup", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachinegroup>("flowcredentialapplication_flowmachinegroup", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowcredentialapplication_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowcredentialapplication_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowcredentialapplication_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowcredentialapplication_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowcredentialapplication_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowcredentialapplication_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowcredentialapplication_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowcredentialapplication_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowcredentialapplication_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowcredentialapplication_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowcredentialapplication_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowcredentialapplication_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowcredentialapplication_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowcredentialapplication_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowcredentialapplication_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowcredentialapplication_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_flowcredentialapplication")]
		public Dev.DevKit.ProxyTypes.Team team_flowcredentialapplication
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_flowcredentialapplication", null);
			}
		}
		
		/// <summary>
		/// N:1 user_flowcredentialapplication
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_flowcredentialapplication")]
		public Dev.DevKit.ProxyTypes.SystemUser user_flowcredentialapplication
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_flowcredentialapplication", null);
			}
		}
	}
}
#pragma warning restore CS1591
