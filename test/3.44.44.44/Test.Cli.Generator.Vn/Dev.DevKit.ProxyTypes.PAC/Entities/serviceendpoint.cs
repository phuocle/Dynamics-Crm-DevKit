#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại xác thực cho Service Bus
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_authtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ACS = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhaSAS = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MthngboSAS = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhaWebhook = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TiuHttp = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuiTruyvnHttp = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ConnectionString = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phmtruynhp = 8,
	}
	
	/// <summary>
	/// Chế độ kết nối.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_connectionmode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bnhthng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hpnht = 2,
	}
	
	/// <summary>
	/// Loại hợp đồng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_contract
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OneWay = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngi = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phncnli = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TwoWay = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ch = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hngi_nnh = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrungtmSkin = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Webhook = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Liskin = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DataLakecqunl = 10,
	}
	
	/// <summary>
	/// Phương thức mã hóa ký tự dùng cho các tin nhắn gửi đến một điểm cuối dịch vụ
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_messagecharset
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mcnh = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UTF8 = 1,
	}
	
	/// <summary>
	///  Loại định dạng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_messageformat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XMLnhphn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Json = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		VnbnXML = 3,
	}
	
	/// <summary>
	/// Định dạng cho Vùng tên Service Bus
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_namespaceformat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TncaVngtn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		achVngtn = 2,
	}
	
	/// <summary>
	/// Loại sơ đồ cho Lưới sự kiện
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_schematype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Liskin = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Skinmmy = 2,
	}
	
	/// <summary>
	/// Loại giá trị của yêu cầu người dùng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum serviceendpoint_userclaim
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserId = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UserInfo = 3,
	}
	
	/// <summary>
	/// Điểm cuối dịch vụ có thể liên lạc được.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("serviceendpoint")]
	public partial class ServiceEndpoint : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the serviceendpoint entity
		/// </summary>
		public partial class Fields
		{
			public const string AuthType = "authtype";
			public const string AuthTypeName = "authtypename";
			public const string AuthValue = "authvalue";
			public const string ComponentState = "componentstate";
			public const string ConnectionMode = "connectionmode";
			public const string ConnectionModeName = "connectionmodename";
			public const string Contract = "contract";
			public const string ContractName = "contractname";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string IntroducedVersion = "introducedversion";
			public const string IsAuthValueSet = "isauthvalueset";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsSASKeySet = "issaskeyset";
			public const string IsSASTokenSet = "issastokenset";
			public const string KeyVaultReferenceId = "keyvaultreferenceid";
			public const string keyvaultreferenceidName = "keyvaultreferenceidname";
			public const string MessageCharset = "messagecharset";
			public const string messagecharsetName = "messagecharsetname";
			public const string MessageFormat = "messageformat";
			public const string MessageFormatName = "messageformatname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NamespaceAddress = "namespaceaddress";
			public const string NamespaceFormat = "namespaceformat";
			public const string NamespaceFormatName = "namespaceformatname";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string Path = "path";
			public const string RuntimeIntegrationProperties = "runtimeintegrationproperties";
			public const string SASKey = "saskey";
			public const string SASKeyName = "saskeyname";
			public const string SASToken = "sastoken";
			public const string SchemaType = "schematype";
			public const string schematypeName = "schematypename";
			public const string ServiceEndpointId = "serviceendpointid";
			public const string Id = "serviceendpointid";
			public const string ServiceEndpointIdUnique = "serviceendpointidunique";
			public const string SolutionId = "solutionid";
			public const string SolutionNamespace = "solutionnamespace";
			public const string Url = "url";
			public const string UseKeyVaultConfiguration = "usekeyvaultconfiguration";
			public const string usekeyvaultconfigurationName = "usekeyvaultconfigurationname";
			public const string UserClaim = "userclaim";
			public const string UserClaimName = "userclaimname";
			public const string serviceendpoint_sdkmessageprocessingstep = "serviceendpoint_sdkmessageprocessingstep";
			public const string userentityinstancedata_serviceendpoint = "userentityinstancedata_serviceendpoint";
			public const string createdby_serviceendpoint = "createdby_serviceendpoint";
			public const string keyvaultreference_ServiceEndpoint = "keyvaultreference_ServiceEndpoint";
			public const string lk_serviceendpointbase_createdonbehalfby = "lk_serviceendpointbase_createdonbehalfby";
			public const string lk_serviceendpointbase_modifiedonbehalfby = "lk_serviceendpointbase_modifiedonbehalfby";
			public const string modifiedby_serviceendpoint = "modifiedby_serviceendpoint";
			public const string organization_serviceendpoint = "organization_serviceendpoint";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ServiceEndpoint() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "serviceendpoint";
		
		public const string EntityLogicalCollectionName = "serviceendpoints";
		
		public const string EntitySetName = "serviceendpoints";
		
		public const int EntityTypeCode = 4618;
		
		/// <summary>
		/// Chỉ định chế độ xác thực với SB
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authtype")]
		public virtual serviceendpoint_authtype? AuthType
		{
			get
			{
				return ((serviceendpoint_authtype?)(EntityOptionSetEnum.GetEnum(this, "authtype")));
			}
			set
			{
				this.SetAttributeValue("authtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authtypename")]
		public string AuthTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("authtype"))
				{
					return this.FormattedValues["authtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Giá trị Xác thực
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("authvalue")]
		public string AuthValue
		{
			get
			{
				return this.GetAttributeValue<string>("authvalue");
			}
			set
			{
				this.SetAttributeValue("authvalue", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Chế độ kết nối để liên lạc với điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionmode")]
		public virtual serviceendpoint_connectionmode? ConnectionMode
		{
			get
			{
				return ((serviceendpoint_connectionmode?)(EntityOptionSetEnum.GetEnum(this, "connectionmode")));
			}
			set
			{
				this.SetAttributeValue("connectionmode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionmodename")]
		public string ConnectionModeName
		{
			get
			{
				if (this.FormattedValues.Contains("connectionmode"))
				{
					return this.FormattedValues["connectionmode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại hợp đồng điểm cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contract")]
		public virtual serviceendpoint_contract? Contract
		{
			get
			{
				return ((serviceendpoint_contract?)(EntityOptionSetEnum.GetEnum(this, "contract")));
			}
			set
			{
				this.SetAttributeValue("contract", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contractname")]
		public string ContractName
		{
			get
			{
				if (this.FormattedValues.Contains("contract"))
				{
					return this.FormattedValues["contract"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mô tả của điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Phiên bản có biểu mẫu được giới thiệu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isauthvalueset")]
		public System.Nullable<bool> IsAuthValueSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isauthvalueset");
			}
		}
		
		/// <summary>
		/// Thông tin cho biết liệu có thể tùy chỉnh thành phần này hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Thông tin chỉ định khả năng quản lý thành phần này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issaskeyset")]
		public System.Nullable<bool> IsSASKeySet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issaskeyset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("issastokenset")]
		public System.Nullable<bool> IsSASTokenSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("issastokenset");
			}
		}
		
		/// <summary>
		/// Unique identifier for keyvaultreference associated with serviceendpoint.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference KeyVaultReferenceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("keyvaultreferenceid");
			}
			set
			{
				this.SetAttributeValue("keyvaultreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceidname")]
		public string keyvaultreferenceidName
		{
			get
			{
				if (this.FormattedValues.Contains("keyvaultreferenceid"))
				{
					return this.FormattedValues["keyvaultreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ định phương thức mã hóa ký tự cho nội dung tin nhắn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagecharset")]
		public virtual serviceendpoint_messagecharset? MessageCharset
		{
			get
			{
				return ((serviceendpoint_messagecharset?)(EntityOptionSetEnum.GetEnum(this, "messagecharset")));
			}
			set
			{
				this.SetAttributeValue("messagecharset", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messagecharsetname")]
		public string messagecharsetName
		{
			get
			{
				if (this.FormattedValues.Contains("messagecharset"))
				{
					return this.FormattedValues["messagecharset"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại nội dung thông báo
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageformat")]
		public virtual serviceendpoint_messageformat? MessageFormat
		{
			get
			{
				return ((serviceendpoint_messageformat?)(EntityOptionSetEnum.GetEnum(this, "messageformat")));
			}
			set
			{
				this.SetAttributeValue("messageformat", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("messageformatname")]
		public string MessageFormatName
		{
			get
			{
				if (this.FormattedValues.Contains("messageformat"))
				{
					return this.FormattedValues["messageformat"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi điểm cuối dịch vụ lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi điểm cuối dịch vụ lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Địa chỉ điểm cuối dịch vụ đầy đủ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("namespaceaddress")]
		public string NamespaceAddress
		{
			get
			{
				return this.GetAttributeValue<string>("namespaceaddress");
			}
			set
			{
				this.SetAttributeValue("namespaceaddress", value);
			}
		}
		
		/// <summary>
		/// Định dạng của Vùng tên Service Bus
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("namespaceformat")]
		public virtual serviceendpoint_namespaceformat? NamespaceFormat
		{
			get
			{
				return ((serviceendpoint_namespaceformat?)(EntityOptionSetEnum.GetEnum(this, "namespaceformat")));
			}
			set
			{
				this.SetAttributeValue("namespaceformat", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("namespaceformatname")]
		public string NamespaceFormatName
		{
			get
			{
				if (this.FormattedValues.Contains("namespaceformat"))
				{
					return this.FormattedValues["namespaceformat"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tổ chức có liên kết với điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Đường dẫn đến điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("path")]
		public string Path
		{
			get
			{
				return this.GetAttributeValue<string>("path");
			}
			set
			{
				this.SetAttributeValue("path", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ. Giữ các thuộc tính chung liên quan đến tích hợp thời gian chạy.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("runtimeintegrationproperties")]
		public string RuntimeIntegrationProperties
		{
			get
			{
				return this.GetAttributeValue<string>("runtimeintegrationproperties");
			}
			set
			{
				this.SetAttributeValue("runtimeintegrationproperties", value);
			}
		}
		
		/// <summary>
		/// Khóa Truy cập được Chia sẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("saskey")]
		public string SASKey
		{
			get
			{
				return this.GetAttributeValue<string>("saskey");
			}
			set
			{
				this.SetAttributeValue("saskey", value);
			}
		}
		
		/// <summary>
		/// Tên Khóa Truy cập được Chia sẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("saskeyname")]
		public string SASKeyName
		{
			get
			{
				return this.GetAttributeValue<string>("saskeyname");
			}
			set
			{
				this.SetAttributeValue("saskeyname", value);
			}
		}
		
		/// <summary>
		/// Mã thông báo Truy cập được Chia sẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sastoken")]
		public string SASToken
		{
			get
			{
				return this.GetAttributeValue<string>("sastoken");
			}
			set
			{
				this.SetAttributeValue("sastoken", value);
			}
		}
		
		/// <summary>
		/// Chỉ định loại sơ đồ cho các sự kiện trong lưới sự kiện
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schematype")]
		public virtual serviceendpoint_schematype? SchemaType
		{
			get
			{
				return ((serviceendpoint_schematype?)(EntityOptionSetEnum.GetEnum(this, "schematype")));
			}
			set
			{
				this.SetAttributeValue("schematype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("schematypename")]
		public string schematypeName
		{
			get
			{
				if (this.FormattedValues.Contains("schematype"))
				{
					return this.FormattedValues["schematype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointid")]
		public System.Nullable<System.Guid> ServiceEndpointId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("serviceendpointid");
			}
			set
			{
				this.SetAttributeValue("serviceendpointid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ServiceEndpointId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của điểm cuối dịch vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceendpointidunique")]
		public System.Nullable<System.Guid> ServiceEndpointIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("serviceendpointidunique");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Vùng tên của giải pháp App Fabric.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionnamespace")]
		public string SolutionNamespace
		{
			get
			{
				return this.GetAttributeValue<string>("solutionnamespace");
			}
			set
			{
				this.SetAttributeValue("solutionnamespace", value);
			}
		}
		
		/// <summary>
		/// Url điểm cuối dịch vụ đầy đủ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("url")]
		public string Url
		{
			get
			{
				return this.GetAttributeValue<string>("url");
			}
			set
			{
				this.SetAttributeValue("url", value);
			}
		}
		
		/// <summary>
		/// Use Auth Information in KeyVault
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usekeyvaultconfiguration")]
		public System.Nullable<bool> UseKeyVaultConfiguration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usekeyvaultconfiguration");
			}
			set
			{
				this.SetAttributeValue("usekeyvaultconfiguration", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usekeyvaultconfigurationname")]
		public string usekeyvaultconfigurationName
		{
			get
			{
				if (this.FormattedValues.Contains("usekeyvaultconfiguration"))
				{
					return this.FormattedValues["usekeyvaultconfiguration"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại giá trị của yêu cầu người dùng bổ sung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userclaim")]
		public virtual serviceendpoint_userclaim? UserClaim
		{
			get
			{
				return ((serviceendpoint_userclaim?)(EntityOptionSetEnum.GetEnum(this, "userclaim")));
			}
			set
			{
				this.SetAttributeValue("userclaim", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userclaimname")]
		public string UserClaimName
		{
			get
			{
				if (this.FormattedValues.Contains("userclaim"))
				{
					return this.FormattedValues["userclaim"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N serviceendpoint_sdkmessageprocessingstep
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("serviceendpoint_sdkmessageprocessingstep")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SdkMessageProcessingStep> serviceendpoint_sdkmessageprocessingstep
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SdkMessageProcessingStep>("serviceendpoint_sdkmessageprocessingstep", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SdkMessageProcessingStep>("serviceendpoint_sdkmessageprocessingstep", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_serviceendpoint
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_serviceendpoint")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_serviceendpoint
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_serviceendpoint", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_serviceendpoint", null, value);
			}
		}
		
		/// <summary>
		/// N:1 createdby_serviceendpoint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("createdby_serviceendpoint")]
		public Dev.DevKit.ProxyTypes.SystemUser createdby_serviceendpoint
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("createdby_serviceendpoint", null);
			}
		}
		
		/// <summary>
		/// N:1 keyvaultreference_ServiceEndpoint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("keyvaultreference_ServiceEndpoint")]
		public Dev.DevKit.ProxyTypes.KeyVaultReference keyvaultreference_ServiceEndpoint
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_ServiceEndpoint", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_ServiceEndpoint", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceendpointbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceendpointbase_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_serviceendpointbase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_serviceendpointbase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_serviceendpointbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_serviceendpointbase_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_serviceendpointbase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_serviceendpointbase_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 modifiedby_serviceendpoint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("modifiedby_serviceendpoint")]
		public Dev.DevKit.ProxyTypes.SystemUser modifiedby_serviceendpoint
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("modifiedby_serviceendpoint", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_serviceendpoint
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_serviceendpoint")]
		public Dev.DevKit.ProxyTypes.Organization organization_serviceendpoint
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_serviceendpoint", null);
			}
		}
	}
}
#pragma warning restore CS1591
