#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Select a source to indicate where the credential should be fetched from - Client Secret or KeyVault or Is managed
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum credentialsource
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ClientSecret = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KeyVault = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IsManaged = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MicrosoftFirstPartyCertificate = 3,
	}
	
	/// <summary>
	/// Status of the Managed Identity
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum managedidentity_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Managed Identity
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum managedidentity_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	/// <summary>
	/// Select a scope to indicate the level of the subject name - Global Scope or Enviornment Scope or Dev Only Scope
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum subjectscope
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GlobalScope = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		EnviornmentScope = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DevOnlyScope = 2,
	}
	
	/// <summary>
	/// Contains data to represent an Azure Active Directory Application used to connect to secure web-hosted resources.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("managedidentity")]
	public partial class ManagedIdentity : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the managedidentity entity
		/// </summary>
		public partial class Fields
		{
			public const string ApplicationId = "applicationid";
			public const string ClientSecret = "clientsecret";
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CredentialSource = "credentialsource";
			public const string credentialsourceName = "credentialsourcename";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string KeyVaultReferenceId = "keyvaultreferenceid";
			public const string keyvaultreferenceidName = "keyvaultreferenceidname";
			public const string ManagedIdentityId = "managedidentityid";
			public const string Id = "managedidentityid";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string ObjectId = "objectid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string SubjectScope = "subjectscope";
			public const string subjectscopeName = "subjectscopename";
			public const string TenantId = "tenantid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string managedidentity_AsyncOperations = "managedidentity_AsyncOperations";
			public const string managedidentity_BulkDeleteFailures = "managedidentity_BulkDeleteFailures";
			public const string managedidentity_DuplicateBaseRecord = "managedidentity_DuplicateBaseRecord";
			public const string managedidentity_DuplicateMatchingRecord = "managedidentity_DuplicateMatchingRecord";
			public const string managedidentity_emailserverprofile_managedidentityid = "managedidentity_emailserverprofile_managedidentityid";
			public const string managedidentity_KeyVaultReference = "managedidentity_KeyVaultReference";
			public const string managedidentity_MailboxTrackingFolders = "managedidentity_MailboxTrackingFolders";
			public const string managedidentity_PluginAssembly = "managedidentity_PluginAssembly";
			public const string managedidentity_pluginpackage = "managedidentity_pluginpackage";
			public const string managedidentity_PrincipalObjectAttributeAccesses = "managedidentity_PrincipalObjectAttributeAccesses";
			public const string managedidentity_ProcessSession = "managedidentity_ProcessSession";
			public const string managedidentity_SyncErrors = "managedidentity_SyncErrors";
			public const string managedidentity_UserEntityInstanceDatas = "managedidentity_UserEntityInstanceDatas";
			public const string business_unit_managedidentity = "business_unit_managedidentity";
			public const string keyvaultreference_ManagedIdentity = "keyvaultreference_ManagedIdentity";
			public const string lk_managedidentity_createdby = "lk_managedidentity_createdby";
			public const string lk_managedidentity_createdonbehalfby = "lk_managedidentity_createdonbehalfby";
			public const string lk_managedidentity_modifiedby = "lk_managedidentity_modifiedby";
			public const string lk_managedidentity_modifiedonbehalfby = "lk_managedidentity_modifiedonbehalfby";
			public const string team_managedidentity = "team_managedidentity";
			public const string user_managedidentity = "user_managedidentity";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ManagedIdentity() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "managedidentity";
		
		public const string EntityLogicalCollectionName = "managedidentities";
		
		public const string EntitySetName = "managedidentities";
		
		public const int EntityTypeCode = 10023;
		
		/// <summary>
		/// Application Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationid")]
		public System.Nullable<System.Guid> ApplicationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("applicationid");
			}
			set
			{
				this.SetAttributeValue("applicationid", value);
			}
		}
		
		/// <summary>
		/// Contains a secret for the Azure Active Directory application. Once set, it cannot be read except by Dataverse.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientsecret")]
		public string ClientSecret
		{
			get
			{
				return this.GetAttributeValue<string>("clientsecret");
			}
			set
			{
				this.SetAttributeValue("clientsecret", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Where the Managed Identity will get the credentials to use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialsource")]
		public virtual credentialsource? CredentialSource
		{
			get
			{
				return ((credentialsource?)(EntityOptionSetEnum.GetEnum(this, "credentialsource")));
			}
			set
			{
				this.SetAttributeValue("credentialsource", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialsourcename")]
		public string credentialsourceName
		{
			get
			{
				if (this.FormattedValues.Contains("credentialsource"))
				{
					return this.FormattedValues["credentialsource"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for keyvaultreference which contains the secret.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference KeyVaultReferenceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("keyvaultreferenceid");
			}
			set
			{
				this.SetAttributeValue("keyvaultreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceidname")]
		public string keyvaultreferenceidName
		{
			get
			{
				if (this.FormattedValues.Contains("keyvaultreferenceid"))
				{
					return this.FormattedValues["keyvaultreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedidentityid")]
		public System.Nullable<System.Guid> ManagedIdentityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("managedidentityid");
			}
			set
			{
				this.SetAttributeValue("managedidentityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedidentityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ManagedIdentityId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The name assigned to this Managed Identity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// ObjectId
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		public System.Nullable<System.Guid> ObjectId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("objectid");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Status of the Managed Identity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual managedidentity_statecode? statecode
		{
			get
			{
				return ((managedidentity_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Managed Identity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual managedidentity_statuscode? statuscode
		{
			get
			{
				return ((managedidentity_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Where the Scope of the SubjectName for Managed Identity will be determined.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectscope")]
		public virtual subjectscope? SubjectScope
		{
			get
			{
				return ((subjectscope?)(EntityOptionSetEnum.GetEnum(this, "subjectscope")));
			}
			set
			{
				this.SetAttributeValue("subjectscope", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subjectscopename")]
		public string subjectscopeName
		{
			get
			{
				if (this.FormattedValues.Contains("subjectscope"))
				{
					return this.FormattedValues["subjectscope"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The Id of the Azure Active Directory Tenant that the Application is part of.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tenantid")]
		public System.Nullable<System.Guid> TenantId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("tenantid");
			}
			set
			{
				this.SetAttributeValue("tenantid", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> managedidentity_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("managedidentity_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("managedidentity_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> managedidentity_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("managedidentity_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("managedidentity_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> managedidentity_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("managedidentity_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("managedidentity_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> managedidentity_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("managedidentity_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("managedidentity_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_emailserverprofile_managedidentityid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_emailserverprofile_managedidentityid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.EmailServerProfile> managedidentity_emailserverprofile_managedidentityid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.EmailServerProfile>("managedidentity_emailserverprofile_managedidentityid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.EmailServerProfile>("managedidentity_emailserverprofile_managedidentityid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_KeyVaultReference
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_KeyVaultReference")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.KeyVaultReference> managedidentity_KeyVaultReference
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.KeyVaultReference>("managedidentity_KeyVaultReference", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.KeyVaultReference>("managedidentity_KeyVaultReference", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> managedidentity_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("managedidentity_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("managedidentity_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_PluginAssembly
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_PluginAssembly")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PluginAssembly> managedidentity_PluginAssembly
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PluginAssembly>("managedidentity_PluginAssembly", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PluginAssembly>("managedidentity_PluginAssembly", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_pluginpackage
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_pluginpackage")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PluginPackage> managedidentity_pluginpackage
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PluginPackage>("managedidentity_pluginpackage", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PluginPackage>("managedidentity_pluginpackage", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> managedidentity_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("managedidentity_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("managedidentity_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> managedidentity_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("managedidentity_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("managedidentity_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> managedidentity_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("managedidentity_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("managedidentity_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N managedidentity_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> managedidentity_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("managedidentity_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("managedidentity_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_managedidentity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_managedidentity")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_managedidentity
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_managedidentity", null);
			}
		}
		
		/// <summary>
		/// N:1 keyvaultreference_ManagedIdentity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("keyvaultreference_ManagedIdentity")]
		public Dev.DevKit.ProxyTypes.KeyVaultReference keyvaultreference_ManagedIdentity
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_ManagedIdentity", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_ManagedIdentity", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_managedidentity_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_managedidentity_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_managedidentity_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_managedidentity_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_managedidentity_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_managedidentity_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_managedidentity_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_managedidentity_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_managedidentity_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_managedidentity_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_managedidentity_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_managedidentity_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_managedidentity_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_managedidentity_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_managedidentity_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_managedidentity_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_managedidentity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_managedidentity")]
		public Dev.DevKit.ProxyTypes.Team team_managedidentity
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_managedidentity", null);
			}
		}
		
		/// <summary>
		/// N:1 user_managedidentity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_managedidentity")]
		public Dev.DevKit.ProxyTypes.SystemUser user_managedidentity
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_managedidentity", null);
			}
		}
	}
}
#pragma warning restore CS1591
