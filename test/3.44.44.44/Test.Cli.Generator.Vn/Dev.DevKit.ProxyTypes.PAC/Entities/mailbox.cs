#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_actdeliverymethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MicrosoftDynamics365dnhchoOutlook = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ngbphaMych = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_actstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngChy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 2,
	}
	
	/// <summary>
	/// Cho biết tùy chọn phê duyệt cho đồng bộ phía máy chủ hay truy cập Bộ định tuyến Email.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_emailrouteraccessapproval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Trng = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		phchun = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angchPhduyt = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Btchi = 3,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_exchangecontactsimportstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotImported = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Imported = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ImportFailed = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_incomingemaildeliverymethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MicrosoftDynamics365dnhchoOutlook = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ngbphaMychhocBnhtuynEmail = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hpthchuyntip = 3,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_incomingemailstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngChy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_status
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngChy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_officeappsdeploymentstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NotInstalled = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cit = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		InstallFailed = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UninstallFailed = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UpgradeRequired = 4,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_outgoingemaildeliverymethod
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MicrosoftDynamics365dnhchoOutlook = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ngbphaMychhocBnhtuynEmail = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_outgoingemailstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngChy = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 2,
	}
	
	/// <summary>
	/// Trạng thái của Hộp thư
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của Hộp thư
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailbox_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghotng = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("mailbox")]
	public partial class Mailbox : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the mailbox entity
		/// </summary>
		public partial class Fields
		{
			public const string ACTDeliveryMethod = "actdeliverymethod";
			public const string ACTDeliveryMethodName = "actdeliverymethodname";
			public const string ACTStatus = "actstatus";
			public const string ACTStatusName = "actstatusname";
			public const string AllowEmailConnectorToUseCredentials = "allowemailconnectortousecredentials";
			public const string AllowEmailConnectorToUseCredentialsName = "allowemailconnectortousecredentialsname";
			public const string AverageTotalDuration = "averagetotalduration";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string EmailAddress = "emailaddress";
			public const string EmailRouterAccessApproval = "emailrouteraccessapproval";
			public const string EmailRouterAccessApprovalName = "emailrouteraccessapprovalname";
			public const string EmailServerProfile = "emailserverprofile";
			public const string EmailServerProfileName = "emailserverprofilename";
			public const string EnabledForACT = "enabledforact";
			public const string EnabledForACTName = "enabledforactname";
			public const string EnabledForIncomingEmail = "enabledforincomingemail";
			public const string EnabledForIncomingEmailName = "enabledforincomingemailname";
			public const string EnabledForOutgoingEmail = "enabledforoutgoingemail";
			public const string EnabledForOutgoingEmailName = "enabledforoutgoingemailname";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string EWSURL = "ewsurl";
			public const string ExchangeContactsImportCompletedOn = "exchangecontactsimportcompletedon";
			public const string ExchangeContactsImportStatus = "exchangecontactsimportstatus";
			public const string ExchangeSyncStateXml = "exchangesyncstatexml";
			public const string ExchangeSyncStateXmlFileRef = "exchangesyncstatexmlfileref";
			public const string ExchangeSyncStateXmlFileRef_Name = "exchangesyncstatexmlfileref_name";
			public const string FolderHierarchy = "folderhierarchy";
			public const string ForcedUnlockCount = "forcedunlockcount";
			public const string HostId = "hostid";
			public const string IncomingEmailDeliveryMethod = "incomingemaildeliverymethod";
			public const string IncomingEmailDeliveryMethodName = "incomingemaildeliverymethodname";
			public const string IncomingEmailStatus = "incomingemailstatus";
			public const string IncomingEmailStatusName = "incomingemailstatusname";
			public const string IsACTSyncOrgFlagSet = "isactsyncorgflagset";
			public const string IsEmailAddressApprovedByO365Admin = "isemailaddressapprovedbyo365admin";
			public const string IsExchangeContactsImportScheduled = "isexchangecontactsimportscheduled";
			public const string IsForwardMailbox = "isforwardmailbox";
			public const string IsForwardMailboxName = "isforwardmailboxname";
			public const string IsOauthAccessTokenSet = "isoauthaccesstokenset";
			public const string IsOauthRefreshTokenSet = "isoauthrefreshtokenset";
			public const string IsPasswordSet = "ispasswordset";
			public const string IsServiceAccount = "isserviceaccount";
			public const string ItemsFailedForLastSync = "itemsfailedforlastsync";
			public const string ItemsProcessedForLastSync = "itemsprocessedforlastsync";
			public const string LastAutoDiscoveredOn = "lastautodiscoveredon";
			public const string LastDuration = "lastduration";
			public const string LastMailboxForcedUnlockOccurredOn = "lastmailboxforcedunlockoccurredon";
			public const string LastMessageId = "lastmessageid";
			public const string LastSuccessfulSyncCompletedOn = "lastsuccessfulsynccompletedon";
			public const string LastSyncError = "lastsyncerror";
			public const string LastSyncErrorCode = "lastsyncerrorcode";
			public const string LastSyncErrorCount = "lastsyncerrorcount";
			public const string LastSyncErrorMachineName = "lastsyncerrormachinename";
			public const string LastSyncErrorOccurredOn = "lastsyncerroroccurredon";
			public const string LastSyncStartedOn = "lastsyncstartedon";
			public const string LastTagCompletedOn = "lasttagcompletedon";
			public const string LastTaggedMessageId = "lasttaggedmessageid";
			public const string LastTagProcessedMaxItems = "lasttagprocessedmaxitems";
			public const string lasttagprocessedmaxitemsName = "lasttagprocessedmaxitemsname";
			public const string MailboxId = "mailboxid";
			public const string Id = "mailboxid";
			public const string MailboxProcessingContext = "mailboxprocessingcontext";
			public const string MailboxStatus = "mailboxstatus";
			public const string MailboxStatusName = "mailboxstatusname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string NextScheduledACTSyncInSeconds = "nextscheduledactsyncinseconds";
			public const string NoACTCount = "noactcount";
			public const string NoEmailCount = "noemailcount";
			public const string OauthAccessToken = "oauthaccesstoken";
			public const string OauthRefreshToken = "oauthrefreshtoken";
			public const string OauthTokenExpiresOn = "oauthtokenexpireson";
			public const string OfficeAppsDeploymentCompleteOn = "officeappsdeploymentcompleteon";
			public const string OfficeAppsDeploymentError = "officeappsdeploymenterror";
			public const string OfficeAppsDeploymentScheduled = "officeappsdeploymentscheduled";
			public const string OfficeAppsDeploymentScheduledName = "officeappsdeploymentscheduledname";
			public const string OfficeAppsDeploymentStatus = "officeappsdeploymentstatus";
			public const string OfficeAppsDeploymentStatusName = "officeappsdeploymentstatusname";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OrgMarkedAsPrimaryForExchangeSync = "orgmarkedasprimaryforexchangesync";
			public const string OutgoingEmailDeliveryMethod = "outgoingemaildeliverymethod";
			public const string OutgoingEmailDeliveryMethodName = "outgoingemaildeliverymethodname";
			public const string OutgoingEmailStatus = "outgoingemailstatus";
			public const string OutgoingEmailStatusName = "outgoingemailstatusname";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Password = "password";
			public const string PostponeMailboxProcessingUntil = "postponemailboxprocessinguntil";
			public const string PostponeOfficeAppsDeploymentUntil = "postponeofficeappsdeploymentuntil";
			public const string PostponeSendingUntil = "postponesendinguntil";
			public const string PostponeTestEmailConfigurationUntil = "postponetestemailconfigurationuntil";
			public const string ProcessAndDeleteEmails = "processanddeleteemails";
			public const string ProcessAndDeleteEmailsName = "processanddeleteemailsname";
			public const string ProcessedTimes = "processedtimes";
			public const string ProcessEmailReceivedAfter = "processemailreceivedafter";
			public const string ProcessingLastAttemptedOn = "processinglastattemptedon";
			public const string ProcessingStateCode = "processingstatecode";
			public const string ReceivingPostponedUntil = "receivingpostponeduntil";
			public const string ReceivingPostponedUntilForACT = "receivingpostponeduntilforact";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TagEmailsAfter = "tagemailsafter";
			public const string TestEmailConfigurationRetryCount = "testemailconfigurationretrycount";
			public const string TestEmailConfigurationScheduled = "testemailconfigurationscheduled";
			public const string TestEmailConfigurationScheduledName = "testemailconfigurationscheduledname";
			public const string TestMailboxAccessCompletedOn = "testmailboxaccesscompletedon";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransientFailureCount = "transientfailurecount";
			public const string UndeliverableFolder = "undeliverablefolder";
			public const string Username = "username";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VerboseLoggingEnabled = "verboseloggingenabled";
			public const string VersionNumber = "versionnumber";
			public const string activitypointer_sendermailboxid_mailbox = "activitypointer_sendermailboxid_mailbox";
			public const string adx_inviteredemption_mailbox_sendermailboxid = "adx_inviteredemption_mailbox_sendermailboxid";
			public const string adx_portalcomment_mailbox_sendermailboxid = "adx_portalcomment_mailbox_sendermailboxid";
			public const string chat_mailbox_sendermailboxid = "chat_mailbox_sendermailboxid";
			public const string email_sendermailboxid_mailbox = "email_sendermailboxid_mailbox";
			public const string Mailbox_Annotation = "Mailbox_Annotation";
			public const string mailbox_asyncoperations = "mailbox_asyncoperations";
			public const string mailbox_email_ReceivingMailboxId = "mailbox_email_ReceivingMailboxId";
			public const string mailbox_mailboxstatistics = "mailbox_mailboxstatistics";
			public const string Mailbox_mailboxtrackingcategory = "Mailbox_mailboxtrackingcategory";
			public const string Mailbox_MailboxTrackingFolder = "Mailbox_MailboxTrackingFolder";
			public const string mailbox_processsessions = "mailbox_processsessions";
			public const string Mailbox_SyncErrors = "Mailbox_SyncErrors";
			public const string mailbox_userentityinstancedatas = "mailbox_userentityinstancedatas";
			public const string queue_defaultmailbox_mailbox = "queue_defaultmailbox_mailbox";
			public const string systemuser_defaultmailbox_mailbox = "systemuser_defaultmailbox_mailbox";
			public const string tracelog_Mailbox = "tracelog_Mailbox";
			public const string business_unit_mailbox = "business_unit_mailbox";
			public const string emailserverprofile_mailbox = "emailserverprofile_mailbox";
			public const string lk_mailbox_createdby = "lk_mailbox_createdby";
			public const string lk_mailbox_createdonbehalfby = "lk_mailbox_createdonbehalfby";
			public const string lk_mailbox_entityimage = "lk_mailbox_entityimage";
			public const string lk_mailbox_modifiedby = "lk_mailbox_modifiedby";
			public const string lk_mailbox_modifiedonbehalfby = "lk_mailbox_modifiedonbehalfby";
			public const string mailbox_regarding_queue = "mailbox_regarding_queue";
			public const string mailbox_regarding_systemuser = "mailbox_regarding_systemuser";
			public const string organization_mailbox = "organization_mailbox";
			public const string team_mailbox = "team_mailbox";
			public const string user_mailbox = "user_mailbox";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Mailbox() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "mailbox";
		
		public const string EntityLogicalCollectionName = "mailboxes";
		
		public const string EntitySetName = "mailboxes";
		
		/// <summary>
		/// Chọn phương thức gửi cho hộp thư của cuộc hẹn, liên hệ và nhiệm vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actdeliverymethod")]
		public virtual mailbox_actdeliverymethod? ACTDeliveryMethod
		{
			get
			{
				return ((mailbox_actdeliverymethod?)(EntityOptionSetEnum.GetEnum(this, "actdeliverymethod")));
			}
			set
			{
				this.SetAttributeValue("actdeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actdeliverymethodname")]
		public string ACTDeliveryMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("actdeliverymethod"))
				{
					return this.FormattedValues["actdeliverymethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Trạng thái của Cuộc hẹn, Liên hệ và Nhiệm vụ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actstatus")]
		public virtual mailbox_actstatus? ACTStatus
		{
			get
			{
				return ((mailbox_actstatus?)(EntityOptionSetEnum.GetEnum(this, "actstatus")));
			}
			set
			{
				this.SetAttributeValue("actstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actstatusname")]
		public string ACTStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("actstatus"))
				{
					return this.FormattedValues["actstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn xem có cho phép bộ kết nối email sử dụng thông tin đăng nhập không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailconnectortousecredentials")]
		public System.Nullable<bool> AllowEmailConnectorToUseCredentials
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowemailconnectortousecredentials");
			}
			set
			{
				this.SetAttributeValue("allowemailconnectortousecredentials", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowemailconnectortousecredentialsname")]
		public string AllowEmailConnectorToUseCredentialsName
		{
			get
			{
				if (this.FormattedValues.Contains("allowemailconnectortousecredentials"))
				{
					return this.FormattedValues["allowemailconnectortousecredentials"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tổng Lượng thời gian Trung bình của Hộp thư
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("averagetotalduration")]
		public System.Nullable<int> AverageTotalDuration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("averagetotalduration");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập địa chỉ email của hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailaddress")]
		public string EmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("emailaddress");
			}
			set
			{
				this.SetAttributeValue("emailaddress", value);
			}
		}
		
		/// <summary>
		/// Cho biết trạng thái của địa chỉ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapproval")]
		public virtual mailbox_emailrouteraccessapproval? EmailRouterAccessApproval
		{
			get
			{
				return ((mailbox_emailrouteraccessapproval?)(EntityOptionSetEnum.GetEnum(this, "emailrouteraccessapproval")));
			}
			set
			{
				this.SetAttributeValue("emailrouteraccessapproval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailrouteraccessapprovalname")]
		public string EmailRouterAccessApprovalName
		{
			get
			{
				if (this.FormattedValues.Contains("emailrouteraccessapproval"))
				{
					return this.FormattedValues["emailrouteraccessapproval"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn cấu hình máy chủ email của hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofile")]
		public Microsoft.Xrm.Sdk.EntityReference EmailServerProfile
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("emailserverprofile");
			}
			set
			{
				this.SetAttributeValue("emailserverprofile", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofilename")]
		public string EmailServerProfileName
		{
			get
			{
				if (this.FormattedValues.Contains("emailserverprofile"))
				{
					return this.FormattedValues["emailserverprofile"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết có bật hộp thư cho Cuộc hẹn, Liên hệ và Nhiệm vụ không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforact")]
		public System.Nullable<bool> EnabledForACT
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enabledforact");
			}
			set
			{
				this.SetAttributeValue("enabledforact", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforactname")]
		public string EnabledForACTName
		{
			get
			{
				if (this.FormattedValues.Contains("enabledforact"))
				{
					return this.FormattedValues["enabledforact"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn xem có bật hộp thư cho email nhận không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforincomingemail")]
		public System.Nullable<bool> EnabledForIncomingEmail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enabledforincomingemail");
			}
			set
			{
				this.SetAttributeValue("enabledforincomingemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforincomingemailname")]
		public string EnabledForIncomingEmailName
		{
			get
			{
				if (this.FormattedValues.Contains("enabledforincomingemail"))
				{
					return this.FormattedValues["enabledforincomingemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn xem có bật hộp thư cho email gửi không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforoutgoingemail")]
		public System.Nullable<bool> EnabledForOutgoingEmail
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enabledforoutgoingemail");
			}
			set
			{
				this.SetAttributeValue("enabledforoutgoingemail", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforoutgoingemailname")]
		public string EnabledForOutgoingEmailName
		{
			get
			{
				if (this.FormattedValues.Contains("enabledforoutgoingemail"))
				{
					return this.FormattedValues["enabledforoutgoingemail"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hình ảnh mặc định cho thực thể.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// URL điểm cuối dịch vụ web Exchange cho hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ewsurl")]
		public string EWSURL
		{
			get
			{
				return this.GetAttributeValue<string>("ewsurl");
			}
			set
			{
				this.SetAttributeValue("ewsurl", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ hoàn thành việc nhập người liên hệ Exchange lần cuối cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangecontactsimportcompletedon")]
		public System.Nullable<System.DateTime> ExchangeContactsImportCompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("exchangecontactsimportcompletedon");
			}
		}
		
		/// <summary>
		/// Cho biết trạng thái nhập người liên hệ Exchange cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangecontactsimportstatus")]
		public virtual mailbox_exchangecontactsimportstatus? ExchangeContactsImportStatus
		{
			get
			{
				return ((mailbox_exchangecontactsimportstatus?)(EntityOptionSetEnum.GetEnum(this, "exchangecontactsimportstatus")));
			}
			set
			{
				this.SetAttributeValue("exchangecontactsimportstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Bao gồm trạng thái đồng bộ Exchange ở định dạng XML.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangesyncstatexml")]
		public string ExchangeSyncStateXml
		{
			get
			{
				return this.GetAttributeValue<string>("exchangesyncstatexml");
			}
			set
			{
				this.SetAttributeValue("exchangesyncstatexml", value);
			}
		}
		
		/// <summary>
		/// Tham chiếu đến tệp ExchangeSyncStateXml trên Azure.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangesyncstatexmlfileref")]
		public object ExchangeSyncStateXmlFileRef
		{
			get
			{
				return this.GetAttributeValue<object>("exchangesyncstatexmlfileref");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangesyncstatexmlfileref_name")]
		public string ExchangeSyncStateXmlFileRef_Name
		{
			get
			{
				if (this.FormattedValues.Contains("exchangesyncstatexmlfileref"))
				{
					return this.FormattedValues["exchangesyncstatexmlfileref"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chứa hệ thống cấp bậc của các thư mục bên dưới hộp thư đến ở định dạng XML.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("folderhierarchy")]
		public string FolderHierarchy
		{
			get
			{
				return this.GetAttributeValue<string>("folderhierarchy");
			}
			set
			{
				this.SetAttributeValue("folderhierarchy", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("forcedunlockcount")]
		public System.Nullable<int> ForcedUnlockCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("forcedunlockcount");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của máy chủ không đồng bộ đang xử lý hộp thư này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hostid")]
		public string HostId
		{
			get
			{
				return this.GetAttributeValue<string>("hostid");
			}
		}
		
		/// <summary>
		/// Chọn cách gửi email đến vào hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethod")]
		public virtual mailbox_incomingemaildeliverymethod? IncomingEmailDeliveryMethod
		{
			get
			{
				return ((mailbox_incomingemaildeliverymethod?)(EntityOptionSetEnum.GetEnum(this, "incomingemaildeliverymethod")));
			}
			set
			{
				this.SetAttributeValue("incomingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemaildeliverymethodname")]
		public string IncomingEmailDeliveryMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingemaildeliverymethod"))
				{
					return this.FormattedValues["incomingemaildeliverymethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái sẽ gán cho email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailstatus")]
		public virtual mailbox_incomingemailstatus? IncomingEmailStatus
		{
			get
			{
				return ((mailbox_incomingemailstatus?)(EntityOptionSetEnum.GetEnum(this, "incomingemailstatus")));
			}
			set
			{
				this.SetAttributeValue("incomingemailstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingemailstatusname")]
		public string IncomingEmailStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingemailstatus"))
				{
					return this.FormattedValues["incomingemailstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Đặt tổ chức hiện tại là tổ chức đồng bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactsyncorgflagset")]
		public System.Nullable<bool> IsACTSyncOrgFlagSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isactsyncorgflagset");
			}
			set
			{
				this.SetAttributeValue("isactsyncorgflagset", value);
			}
		}
		
		/// <summary>
		/// Cho biết trạng thái phê duyệt về địa chỉ email của Quản trị viên O365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isemailaddressapprovedbyo365admin")]
		public System.Nullable<bool> IsEmailAddressApprovedByO365Admin
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isemailaddressapprovedbyo365admin");
			}
			set
			{
				this.SetAttributeValue("isemailaddressapprovedbyo365admin", value);
			}
		}
		
		/// <summary>
		/// Đã Lập lịch trình Nhập Người liên hệ Exchange.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isexchangecontactsimportscheduled")]
		public System.Nullable<bool> IsExchangeContactsImportScheduled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isexchangecontactsimportscheduled");
			}
		}
		
		/// <summary>
		/// Chọn xem hộp thư có là hộp thư chuyển tiếp hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isforwardmailbox")]
		public System.Nullable<bool> IsForwardMailbox
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isforwardmailbox");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isforwardmailboxname")]
		public string IsForwardMailboxName
		{
			get
			{
				if (this.FormattedValues.Contains("isforwardmailbox"))
				{
					return this.FormattedValues["isforwardmailbox"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoauthaccesstokenset")]
		public System.Nullable<bool> IsOauthAccessTokenSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoauthaccesstokenset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoauthrefreshtokenset")]
		public System.Nullable<bool> IsOauthRefreshTokenSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoauthrefreshtokenset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispasswordset")]
		public System.Nullable<bool> IsPasswordSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispasswordset");
			}
		}
		
		/// <summary>
		/// Chọn xem hộp thư có phản hồi cho một tài khoản dịch vụ không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isserviceaccount")]
		public System.Nullable<bool> IsServiceAccount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isserviceaccount");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("itemsfailedforlastsync")]
		public System.Nullable<int> ItemsFailedForLastSync
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("itemsfailedforlastsync");
			}
			set
			{
				this.SetAttributeValue("itemsfailedforlastsync", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("itemsprocessedforlastsync")]
		public System.Nullable<int> ItemsProcessedForLastSync
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("itemsprocessedforlastsync");
			}
			set
			{
				this.SetAttributeValue("itemsprocessedforlastsync", value);
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ phát hiện lần cuối URL dịch vụ web Exchange bằng dịch vụ AutoDiscover.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastautodiscoveredon")]
		public System.Nullable<System.DateTime> LastAutoDiscoveredOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastautodiscoveredon");
			}
			set
			{
				this.SetAttributeValue("lastautodiscoveredon", value);
			}
		}
		
		/// <summary>
		/// Lượng thời gian Cuối cùng cho hộp thư
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastduration")]
		public System.Nullable<int> LastDuration
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("lastduration");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmailboxforcedunlockoccurredon")]
		public System.Nullable<System.DateTime> LastMailboxForcedUnlockOccurredOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastmailboxforcedunlockoccurredon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của thư trước.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastmessageid")]
		public string LastMessageId
		{
			get
			{
				return this.GetAttributeValue<string>("lastmessageid");
			}
			set
			{
				this.SetAttributeValue("lastmessageid", value);
			}
		}
		
		/// <summary>
		/// Thời gian Đồng bộ Thành công Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsuccessfulsynccompletedon")]
		public System.Nullable<System.DateTime> LastSuccessfulSyncCompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsuccessfulsynccompletedon");
			}
			set
			{
				this.SetAttributeValue("lastsuccessfulsynccompletedon", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerror")]
		public string LastSyncError
		{
			get
			{
				return this.GetAttributeValue<string>("lastsyncerror");
			}
			set
			{
				this.SetAttributeValue("lastsyncerror", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrorcode")]
		public System.Nullable<int> LastSyncErrorCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("lastsyncerrorcode");
			}
			set
			{
				this.SetAttributeValue("lastsyncerrorcode", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrorcount")]
		public System.Nullable<int> LastSyncErrorCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("lastsyncerrorcount");
			}
			set
			{
				this.SetAttributeValue("lastsyncerrorcount", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerrormachinename")]
		public string LastSyncErrorMachineName
		{
			get
			{
				return this.GetAttributeValue<string>("lastsyncerrormachinename");
			}
			set
			{
				this.SetAttributeValue("lastsyncerrormachinename", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncerroroccurredon")]
		public System.Nullable<System.DateTime> LastSyncErrorOccurredOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsyncerroroccurredon");
			}
			set
			{
				this.SetAttributeValue("lastsyncerroroccurredon", value);
			}
		}
		
		/// <summary>
		/// Thời gian Bắt đầu Đồng bộ Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsyncstartedon")]
		public System.Nullable<System.DateTime> LastSyncStartedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsyncstartedon");
			}
		}
		
		/// <summary>
		/// Identifies the timestamp when tagging last completed. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttagcompletedon")]
		public System.Nullable<System.DateTime> LastTagCompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lasttagcompletedon");
			}
			set
			{
				this.SetAttributeValue("lasttagcompletedon", value);
			}
		}
		
		/// <summary>
		/// Xác định MessageId cuối cùng đã được xử lý để gắn thẻ trong hệ thống từ xa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttaggedmessageid")]
		public string LastTaggedMessageId
		{
			get
			{
				return this.GetAttributeValue<string>("lasttaggedmessageid");
			}
			set
			{
				this.SetAttributeValue("lasttaggedmessageid", value);
			}
		}
		
		/// <summary>
		/// Indicates if the last tagging cycle processed the maximum number of items. For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttagprocessedmaxitems")]
		public System.Nullable<bool> LastTagProcessedMaxItems
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("lasttagprocessedmaxitems");
			}
			set
			{
				this.SetAttributeValue("lasttagprocessedmaxitems", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttagprocessedmaxitemsname")]
		public string lasttagprocessedmaxitemsName
		{
			get
			{
				if (this.FormattedValues.Contains("lasttagprocessedmaxitems"))
				{
					return this.FormattedValues["lasttagprocessedmaxitems"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxid")]
		public System.Nullable<System.Guid> MailboxId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("mailboxid");
			}
			set
			{
				this.SetAttributeValue("mailboxid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.MailboxId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxprocessingcontext")]
		public System.Nullable<int> MailboxProcessingContext
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("mailboxprocessingcontext");
			}
			set
			{
				this.SetAttributeValue("mailboxprocessingcontext", value);
			}
		}
		
		/// <summary>
		/// Trạng thái Đồng bộ hóa Lần cuối đối với toàn bộ nội dung Đi, Đến và ACT.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxstatus")]
		public virtual mailbox_status? MailboxStatus
		{
			get
			{
				return ((mailbox_status?)(EntityOptionSetEnum.GetEnum(this, "mailboxstatus")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailboxstatusname")]
		public string MailboxStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("mailboxstatus"))
				{
					return this.FormattedValues["mailboxstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi lần cuối thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập tên hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Độ trễ đồng bộ hóa ACT được lên lịch tiếp theo, tính bằng giây, để áp dụng cho hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextscheduledactsyncinseconds")]
		public System.Nullable<int> NextScheduledACTSyncInSeconds
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("nextscheduledactsyncinseconds");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("noactcount")]
		public System.Nullable<int> NoACTCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("noactcount");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("noemailcount")]
		public System.Nullable<int> NoEmailCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("noemailcount");
			}
		}
		
		/// <summary>
		/// Nhập mã thông báo truy cập Oauth cho hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthaccesstoken")]
		public string OauthAccessToken
		{
			get
			{
				return this.GetAttributeValue<string>("oauthaccesstoken");
			}
			set
			{
				this.SetAttributeValue("oauthaccesstoken", value);
			}
		}
		
		/// <summary>
		/// Nhập mã thông báo làm mới Oauth cho hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthrefreshtoken")]
		public string OauthRefreshToken
		{
			get
			{
				return this.GetAttributeValue<string>("oauthrefreshtoken");
			}
			set
			{
				this.SetAttributeValue("oauthrefreshtoken", value);
			}
		}
		
		/// <summary>
		/// Ngày giờ khi mã thông báo Oauth hết hạn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthtokenexpireson")]
		public System.Nullable<System.DateTime> OauthTokenExpiresOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("oauthtokenexpireson");
			}
			set
			{
				this.SetAttributeValue("oauthtokenexpireson", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ hoàn thành lần triển khai ứng dụng Office cuối cùng cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentcompleteon")]
		public System.Nullable<System.DateTime> OfficeAppsDeploymentCompleteOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("officeappsdeploymentcompleteon");
			}
		}
		
		/// <summary>
		/// Lỗi triển khai Ứng dụng Office.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymenterror")]
		public string OfficeAppsDeploymentError
		{
			get
			{
				return this.GetAttributeValue<string>("officeappsdeploymenterror");
			}
		}
		
		/// <summary>
		/// Cho biết quá trình triển khai ứng dụng Office đã được lên lịch cho bản ghi hộp thư hay chưa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentscheduled")]
		public System.Nullable<bool> OfficeAppsDeploymentScheduled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("officeappsdeploymentscheduled");
			}
			set
			{
				this.SetAttributeValue("officeappsdeploymentscheduled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentscheduledname")]
		public string OfficeAppsDeploymentScheduledName
		{
			get
			{
				if (this.FormattedValues.Contains("officeappsdeploymentscheduled"))
				{
					return this.FormattedValues["officeappsdeploymentscheduled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết loại triển khai ứng dụng Office cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentstatus")]
		public virtual mailbox_officeappsdeploymentstatus? OfficeAppsDeploymentStatus
		{
			get
			{
				return ((mailbox_officeappsdeploymentstatus?)(EntityOptionSetEnum.GetEnum(this, "officeappsdeploymentstatus")));
			}
			set
			{
				this.SetAttributeValue("officeappsdeploymentstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("officeappsdeploymentstatusname")]
		public string OfficeAppsDeploymentStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("officeappsdeploymentstatus"))
				{
					return this.FormattedValues["officeappsdeploymentstatus"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("officeappsdeploymentstatusname", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tổ chức được liên kết với bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết tổ chức crm có được đánh dấu là tổ chức đồng bộ chính cho bản ghi hộp thư hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("orgmarkedasprimaryforexchangesync")]
		public System.Nullable<bool> OrgMarkedAsPrimaryForExchangeSync
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("orgmarkedasprimaryforexchangesync");
			}
			set
			{
				this.SetAttributeValue("orgmarkedasprimaryforexchangesync", value);
			}
		}
		
		/// <summary>
		/// Chọn cách gửi email đi từ hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethod")]
		public virtual mailbox_outgoingemaildeliverymethod? OutgoingEmailDeliveryMethod
		{
			get
			{
				return ((mailbox_outgoingemaildeliverymethod?)(EntityOptionSetEnum.GetEnum(this, "outgoingemaildeliverymethod")));
			}
			set
			{
				this.SetAttributeValue("outgoingemaildeliverymethod", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemaildeliverymethodname")]
		public string OutgoingEmailDeliveryMethodName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingemaildeliverymethod"))
				{
					return this.FormattedValues["outgoingemaildeliverymethod"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái của email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemailstatus")]
		public virtual mailbox_outgoingemailstatus? OutgoingEmailStatus
		{
			get
			{
				return ((mailbox_outgoingemailstatus?)(EntityOptionSetEnum.GetEnum(this, "outgoingemailstatus")));
			}
			set
			{
				this.SetAttributeValue("outgoingemailstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingemailstatusname")]
		public string OutgoingEmailStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingemailstatus"))
				{
					return this.FormattedValues["outgoingemailstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập người dùng hoặc nhóm được gán để quản lý bản ghi. Trường này sẽ cập nhật mỗi lần bản ghi được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên phiên âm tiếng Nhật của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn đơn vị kinh doanh sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Nhập mật khẩu cho hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("password")]
		public string Password
		{
			get
			{
				return this.GetAttributeValue<string>("password");
			}
			set
			{
				this.SetAttributeValue("password", value);
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ bắt đầu xử lý trên hộp thư này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponemailboxprocessinguntil")]
		public System.Nullable<System.DateTime> PostponeMailboxProcessingUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponemailboxprocessinguntil");
			}
			set
			{
				this.SetAttributeValue("postponemailboxprocessinguntil", value);
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ chạy quá trình cài đặt ứng dụng thư outlook tiếp theo cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponeofficeappsdeploymentuntil")]
		public System.Nullable<System.DateTime> PostponeOfficeAppsDeploymentUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponeofficeappsdeploymentuntil");
			}
			set
			{
				this.SetAttributeValue("postponeofficeappsdeploymentuntil", value);
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ hộp thư có thể bắt đầu gửi email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponesendinguntil")]
		public System.Nullable<System.DateTime> PostponeSendingUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponesendinguntil");
			}
			set
			{
				this.SetAttributeValue("postponesendinguntil", value);
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ chạy quá trình kiểm tra cấu hình email tiếp theo cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("postponetestemailconfigurationuntil")]
		public System.Nullable<System.DateTime> PostponeTestEmailConfigurationUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("postponetestemailconfigurationuntil");
			}
			set
			{
				this.SetAttributeValue("postponetestemailconfigurationuntil", value);
			}
		}
		
		/// <summary>
		/// Chọn xem có xóa email khỏi hộp thư sau khi xử lý không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processanddeleteemails")]
		public System.Nullable<bool> ProcessAndDeleteEmails
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("processanddeleteemails");
			}
			set
			{
				this.SetAttributeValue("processanddeleteemails", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processanddeleteemailsname")]
		public string ProcessAndDeleteEmailsName
		{
			get
			{
				if (this.FormattedValues.Contains("processanddeleteemails"))
				{
					return this.FormattedValues["processanddeleteemails"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số lần xử lý hộp thư
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processedtimes")]
		public System.Nullable<int> ProcessedTimes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("processedtimes");
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ bắt đầu xử lý email mà hộp thư nhận được.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processemailreceivedafter")]
		public System.Nullable<System.DateTime> ProcessEmailReceivedAfter
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("processemailreceivedafter");
			}
			set
			{
				this.SetAttributeValue("processemailreceivedafter", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ gần đây nhất xử lý hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processinglastattemptedon")]
		public System.Nullable<System.DateTime> ProcessingLastAttemptedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("processinglastattemptedon");
			}
			set
			{
				this.SetAttributeValue("processinglastattemptedon", value);
			}
		}
		
		/// <summary>
		/// Thông tin cho biết có xử lý email cho hộp thư này hay không
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processingstatecode")]
		public System.Nullable<int> ProcessingStateCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("processingstatecode");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingpostponeduntil")]
		public System.Nullable<System.DateTime> ReceivingPostponedUntil
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("receivingpostponeduntil");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("receivingpostponeduntilforact")]
		public System.Nullable<System.DateTime> ReceivingPostponedUntilForACT
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("receivingpostponeduntilforact");
			}
		}
		
		/// <summary>
		/// Chọn người dùng được liên kết với hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
		}
		
		/// <summary>
		/// Tên của Người dùng được liên kết với Hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết hộp thư ở trạng thái đang hiện hoạt hay không hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual mailbox_statecode? StateCode
		{
			get
			{
				return ((mailbox_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái của hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual mailbox_statuscode? StatusCode
		{
			get
			{
				return ((mailbox_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Xác định dấu thời gian mà sau đó email sẽ được gắn thẻ trong hệ thống từ xa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tagemailsafter")]
		public System.Nullable<System.DateTime> TagEmailsAfter
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("tagemailsafter");
			}
			set
			{
				this.SetAttributeValue("tagemailsafter", value);
			}
		}
		
		/// <summary>
		/// Cho biết số lần thực hiện quá trình kiểm tra cấu hình email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testemailconfigurationretrycount")]
		public System.Nullable<int> TestEmailConfigurationRetryCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("testemailconfigurationretrycount");
			}
			set
			{
				this.SetAttributeValue("testemailconfigurationretrycount", value);
			}
		}
		
		/// <summary>
		/// Cho biết quá trình kiểm tra cấu hình email đã được lên lịch cho bản ghi hộp thư hay chưa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testemailconfigurationscheduled")]
		public System.Nullable<bool> TestEmailConfigurationScheduled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("testemailconfigurationscheduled");
			}
			set
			{
				this.SetAttributeValue("testemailconfigurationscheduled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testemailconfigurationscheduledname")]
		public string TestEmailConfigurationScheduledName
		{
			get
			{
				if (this.FormattedValues.Contains("testemailconfigurationscheduled"))
				{
					return this.FormattedValues["testemailconfigurationscheduled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ hoàn thành quá trình kiểm tra cấu hình email cuối cùng cho bản ghi hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testmailboxaccesscompletedon")]
		public System.Nullable<System.DateTime> TestMailboxAccessCompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("testmailboxaccesscompletedon");
			}
			set
			{
				this.SetAttributeValue("testmailboxaccesscompletedon", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Ghép chuỗi số lần lỗi nhất thời của tất cả thao tác với hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transientfailurecount")]
		public System.Nullable<int> TransientFailureCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("transientfailurecount");
			}
		}
		
		/// <summary>
		/// Cho biết ID của thư mục Không gửi được trong hộp thư do Microsoft Exchange quản lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("undeliverablefolder")]
		public string UndeliverableFolder
		{
			get
			{
				return this.GetAttributeValue<string>("undeliverablefolder");
			}
			set
			{
				this.SetAttributeValue("undeliverablefolder", value);
			}
		}
		
		/// <summary>
		/// Nhập tên người dùng được sử dụng cho xác thực hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("username")]
		public string Username
		{
			get
			{
				return this.GetAttributeValue<string>("username");
			}
			set
			{
				this.SetAttributeValue("username", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Cho biết có cần phải kích hoạt theo dõi diễn giải cho hộp thư này không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("verboseloggingenabled")]
		public System.Nullable<int> VerboseLoggingEnabled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("verboseloggingenabled");
			}
			set
			{
				this.SetAttributeValue("verboseloggingenabled", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của hộp thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N activitypointer_sendermailboxid_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activitypointer_sendermailboxid_mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityPointer> activitypointer_sendermailboxid_mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityPointer>("activitypointer_sendermailboxid_mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityPointer>("activitypointer_sendermailboxid_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// 1:N adx_inviteredemption_mailbox_sendermailboxid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_inviteredemption_mailbox_sendermailboxid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.adx_inviteredemption> adx_inviteredemption_mailbox_sendermailboxid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.adx_inviteredemption>("adx_inviteredemption_mailbox_sendermailboxid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.adx_inviteredemption>("adx_inviteredemption_mailbox_sendermailboxid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N adx_portalcomment_mailbox_sendermailboxid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_portalcomment_mailbox_sendermailboxid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.adx_portalcomment> adx_portalcomment_mailbox_sendermailboxid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.adx_portalcomment>("adx_portalcomment_mailbox_sendermailboxid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.adx_portalcomment>("adx_portalcomment_mailbox_sendermailboxid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N chat_mailbox_sendermailboxid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("chat_mailbox_sendermailboxid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.chat> chat_mailbox_sendermailboxid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.chat>("chat_mailbox_sendermailboxid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.chat>("chat_mailbox_sendermailboxid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N email_sendermailboxid_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_sendermailboxid_mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Email> email_sendermailboxid_mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Email>("email_sendermailboxid_mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Email>("email_sendermailboxid_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Mailbox_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_Annotation")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Annotation> Mailbox_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("Mailbox_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("Mailbox_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailbox_asyncoperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_asyncoperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> mailbox_asyncoperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("mailbox_asyncoperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("mailbox_asyncoperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailbox_email_ReceivingMailboxId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_email_ReceivingMailboxId")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Email> mailbox_email_ReceivingMailboxId
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Email>("mailbox_email_ReceivingMailboxId", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Email>("mailbox_email_ReceivingMailboxId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailbox_mailboxstatistics
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_mailboxstatistics")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxStatistics> mailbox_mailboxstatistics
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxStatistics>("mailbox_mailboxstatistics", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxStatistics>("mailbox_mailboxstatistics", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Mailbox_mailboxtrackingcategory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_mailboxtrackingcategory")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingCategory> Mailbox_mailboxtrackingcategory
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingCategory>("Mailbox_mailboxtrackingcategory", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingCategory>("Mailbox_mailboxtrackingcategory", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Mailbox_MailboxTrackingFolder
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_MailboxTrackingFolder")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> Mailbox_MailboxTrackingFolder
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("Mailbox_MailboxTrackingFolder", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("Mailbox_MailboxTrackingFolder", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailbox_processsessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_processsessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> mailbox_processsessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("mailbox_processsessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("mailbox_processsessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Mailbox_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Mailbox_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> Mailbox_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Mailbox_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Mailbox_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailbox_userentityinstancedatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_userentityinstancedatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> mailbox_userentityinstancedatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("mailbox_userentityinstancedatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("mailbox_userentityinstancedatas", null, value);
			}
		}
		
		/// <summary>
		/// 1:N queue_defaultmailbox_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("queue_defaultmailbox_mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Queue> queue_defaultmailbox_mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Queue>("queue_defaultmailbox_mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Queue>("queue_defaultmailbox_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// 1:N systemuser_defaultmailbox_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("systemuser_defaultmailbox_mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SystemUser> systemuser_defaultmailbox_mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SystemUser>("systemuser_defaultmailbox_mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SystemUser>("systemuser_defaultmailbox_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// 1:N tracelog_Mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("tracelog_Mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.TraceLog> tracelog_Mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.TraceLog>("tracelog_Mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.TraceLog>("tracelog_Mailbox", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_mailbox")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_mailbox
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_mailbox", null);
			}
		}
		
		/// <summary>
		/// N:1 emailserverprofile_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofile")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_mailbox")]
		public Dev.DevKit.ProxyTypes.EmailServerProfile emailserverprofile_mailbox
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EmailServerProfile>("emailserverprofile_mailbox", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EmailServerProfile>("emailserverprofile_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailbox_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailbox_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailbox_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailbox_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailbox_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailbox_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailbox_entityimage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_entityimage")]
		public Dev.DevKit.ProxyTypes.ImageDescriptor lk_mailbox_entityimage
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ImageDescriptor>("lk_mailbox_entityimage", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailbox_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailbox_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailbox_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailbox_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailbox_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailbox_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailbox_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 mailbox_regarding_queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_regarding_queue")]
		public Dev.DevKit.ProxyTypes.Queue mailbox_regarding_queue
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Queue>("mailbox_regarding_queue", null);
			}
		}
		
		/// <summary>
		/// N:1 mailbox_regarding_systemuser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_regarding_systemuser")]
		public Dev.DevKit.ProxyTypes.SystemUser mailbox_regarding_systemuser
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("mailbox_regarding_systemuser", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_mailbox")]
		public Dev.DevKit.ProxyTypes.Organization organization_mailbox
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_mailbox", null);
			}
		}
		
		/// <summary>
		/// N:1 team_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_mailbox")]
		public Dev.DevKit.ProxyTypes.Team team_mailbox
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_mailbox", null);
			}
		}
		
		/// <summary>
		/// N:1 user_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_mailbox")]
		public Dev.DevKit.ProxyTypes.SystemUser user_mailbox
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_mailbox", null);
			}
		}
	}
}
#pragma warning restore CS1591
