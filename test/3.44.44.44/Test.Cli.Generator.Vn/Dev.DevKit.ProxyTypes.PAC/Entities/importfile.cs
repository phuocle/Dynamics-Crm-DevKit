#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Dấu tách dữ liệu một ký tự được dùng trong tệp nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_datadelimitercode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		DoubleQuote = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleQuote = 3,
	}
	
	/// <summary>
	/// Dấu tách trường một ký tự được dùng trong tệp nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_fielddelimitercode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duhaichm = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duphy = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tab = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Duchmphy = 4,
	}
	
	/// <summary>
	/// Loại tệp của tệp nguồn được tải lên
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_filetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CSV = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrangtnhXML2003 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tpnhkm = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XLSX = 3,
	}
	
	/// <summary>
	/// Thông tin về việc có cần xử lý tệp nhập hay không.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_processcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Quytrnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bqua = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nib = 3,
	}
	
	/// <summary>
	/// Trạng thái chi tiết cho biết mức độ tệp nhập được xử lý.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_processingstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Chabtu = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angphntch = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PhntchHonthnh = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniPhchp = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniTracu = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniDanhschchn = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniChshu = 7,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniHonhnh = 8,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NhpChuynqua1 = 9,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NhpChuynqua2 = 10,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NhpHonthnh = 11,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ChuyniKhaChnh = 12,
	}
	
	/// <summary>
	/// Trạng thái của tệp nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của tệp nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		gi = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angphntch = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angchuyni = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angnhp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		honthnh = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngthnhcng = 5,
	}
	
	/// <summary>
	/// Chế độ upsert một ký tự được dùng trong tệp nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum importfile_upsertmodecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		To = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cpnht = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bqua = 2,
	}
	
	/// <summary>
	/// Tên tệp của tệp được sử dụng để nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("importfile")]
	public partial class ImportFile : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the importfile entity
		/// </summary>
		public partial class Fields
		{
			public const string AdditionalHeaderRow = "additionalheaderrow";
			public const string CompletedOn = "completedon";
			public const string Content = "content";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DataDelimiterCode = "datadelimitercode";
			public const string DataDelimiterName = "datadelimitername";
			public const string EnableDuplicateDetection = "enableduplicatedetection";
			public const string EnableDuplicateDetectionName = "enableduplicatedetectionname";
			public const string EntityKeyId = "entitykeyid";
			public const string FailureCount = "failurecount";
			public const string FieldDelimiterCode = "fielddelimitercode";
			public const string FieldDelimiterName = "fielddelimitername";
			public const string FileTypeCode = "filetypecode";
			public const string FileTypeName = "filetypename";
			public const string HeaderRow = "headerrow";
			public const string ImportFileId = "importfileid";
			public const string Id = "importfileid";
			public const string ImportId = "importid";
			public const string ImportIdName = "importidname";
			public const string ImportMapId = "importmapid";
			public const string ImportMapIdName = "importmapidname";
			public const string IsFirstRowHeader = "isfirstrowheader";
			public const string IsFirstRowHeaderName = "isfirstrowheadername";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParsedTableColumnPrefix = "parsedtablecolumnprefix";
			public const string ParsedTableColumnsNumber = "parsedtablecolumnsnumber";
			public const string ParsedTableName = "parsedtablename";
			public const string PartialFailureCount = "partialfailurecount";
			public const string ProcessCode = "processcode";
			public const string ProcessCodeName = "processcodename";
			public const string ProcessingStatus = "processingstatus";
			public const string ProcessingStatusName = "processingstatusname";
			public const string ProgressCounter = "progresscounter";
			public const string RecordsOwnerId = "recordsownerid";
			public const string RecordsOwnerIdName = "recordsowneridname";
			public const string RelatedEntityColumns = "relatedentitycolumns";
			public const string Size = "size";
			public const string Source = "source";
			public const string SourceEntityName = "sourceentityname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string SuccessCount = "successcount";
			public const string TargetEntityName = "targetentityname";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TotalCount = "totalcount";
			public const string UpsertModeCode = "upsertmodecode";
			public const string UpsertModeName = "upsertmodename";
			public const string UseSystemMap = "usesystemmap";
			public const string UseSystemMapName = "usesystemmapname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string ImportFile_AsyncOperations = "ImportFile_AsyncOperations";
			public const string ImportFile_BulkDeleteFailures = "ImportFile_BulkDeleteFailures";
			public const string ImportLog_ImportFile = "ImportLog_ImportFile";
			public const string userentityinstancedata_importfile = "userentityinstancedata_importfile";
			public const string BusinessUnit_ImportFiles = "BusinessUnit_ImportFiles";
			public const string Import_ImportFile = "Import_ImportFile";
			public const string ImportFile_SystemUser = "ImportFile_SystemUser";
			public const string ImportFile_Team = "ImportFile_Team";
			public const string ImportMap_ImportFile = "ImportMap_ImportFile";
			public const string lk_importfilebase_createdby = "lk_importfilebase_createdby";
			public const string lk_importfilebase_createdonbehalfby = "lk_importfilebase_createdonbehalfby";
			public const string lk_importfilebase_modifiedby = "lk_importfilebase_modifiedby";
			public const string lk_importfilebase_modifiedonbehalfby = "lk_importfilebase_modifiedonbehalfby";
			public const string SystemUser_ImportFiles = "SystemUser_ImportFiles";
			public const string team_ImportFiles = "team_ImportFiles";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ImportFile() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "importfile";
		
		public const string EntityLogicalCollectionName = "importfiles";
		
		public const string EntitySetName = "importfiles";
		
		public const int EntityTypeCode = 4412;
		
		/// <summary>
		/// Hiển thị các tiêu đề cột phụ. Các tiêu đề bổ sung được sử dụng trong quá trình biến đổi tệp nhập thành các bản ghi dữ liệu nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("additionalheaderrow")]
		public string AdditionalHeaderRow
		{
			get
			{
				return this.GetAttributeValue<string>("additionalheaderrow");
			}
		}
		
		/// <summary>
		/// Hiển thị ngày và giờ hoàn thành công việc nhập được liên kết với tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("completedon")]
		public System.Nullable<System.DateTime> CompletedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("completedon");
			}
		}
		
		/// <summary>
		/// Lưu trữ nội dung của tệp nhập, được lưu trữ dưới dạng các giá trị được phân tách bằng dấu phẩy.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("content")]
		public string Content
		{
			get
			{
				return this.GetAttributeValue<string>("content");
			}
			set
			{
				this.SetAttributeValue("content", value);
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ đã chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn dấu tách dữ liệu ký tự đơn được sử dụng trong tệp nhập. Đây thường là dấu ngoặc kép hoặc dấu nháy đơn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datadelimitercode")]
		public virtual importfile_datadelimitercode? DataDelimiterCode
		{
			get
			{
				return ((importfile_datadelimitercode?)(EntityOptionSetEnum.GetEnum(this, "datadelimitercode")));
			}
			set
			{
				this.SetAttributeValue("datadelimitercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Dấu tách dữ liệu cho nội dung của tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datadelimitername")]
		public string DataDelimiterName
		{
			get
			{
				if (this.FormattedValues.Contains("datadelimitercode"))
				{
					return this.FormattedValues["datadelimitercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn liệu quy tắc phát hiện sự trùng lặp có được chạy cho công việc nhập hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enableduplicatedetection")]
		public System.Nullable<bool> EnableDuplicateDetection
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enableduplicatedetection");
			}
			set
			{
				this.SetAttributeValue("enableduplicatedetection", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu tính năng phát hiện sự trùng lặp có được bật hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enableduplicatedetectionname")]
		public string EnableDuplicateDetectionName
		{
			get
			{
				if (this.FormattedValues.Contains("enableduplicatedetection"))
				{
					return this.FormattedValues["enableduplicatedetection"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của ID Khóa thay thế
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitykeyid")]
		public System.Nullable<System.Guid> EntityKeyId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entitykeyid");
			}
			set
			{
				this.SetAttributeValue("entitykeyid", value);
			}
		}
		
		/// <summary>
		/// Hiển thị số lượng bản ghi trong tệp nhập không nhập được.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("failurecount")]
		public System.Nullable<int> FailureCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("failurecount");
			}
		}
		
		/// <summary>
		/// Chọn ký tự được sử dụng để phân tách từng trường trong tệp nhập. Thông thường là dấu phẩy.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fielddelimitercode")]
		public virtual importfile_fielddelimitercode? FieldDelimiterCode
		{
			get
			{
				return ((importfile_fielddelimitercode?)(EntityOptionSetEnum.GetEnum(this, "fielddelimitercode")));
			}
			set
			{
				this.SetAttributeValue("fielddelimitercode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Dấu tách trường cho nội dung của tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fielddelimitername")]
		public string FieldDelimiterName
		{
			get
			{
				if (this.FormattedValues.Contains("fielddelimitercode"))
				{
					return this.FormattedValues["fielddelimitercode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị loại tệp nguồn được tải lên để nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filetypecode")]
		public virtual importfile_filetypecode? FileTypeCode
		{
			get
			{
				return ((importfile_filetypecode?)(EntityOptionSetEnum.GetEnum(this, "filetypecode")));
			}
			set
			{
				this.SetAttributeValue("filetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Loại tệp của tệp nguồn được tải lên
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filetypename")]
		public string FileTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("filetypecode"))
				{
					return this.FormattedValues["filetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị danh sách từng tiêu đề cột trong tệp nhập được phân tách bằng dấu phẩy. Tiêu đề được sử dụng để phân tích tệp trong quá trình diễn ra công việc nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("headerrow")]
		public string HeaderRow
		{
			get
			{
				return this.GetAttributeValue<string>("headerrow");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importfileid")]
		public System.Nullable<System.Guid> ImportFileId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("importfileid");
			}
			set
			{
				this.SetAttributeValue("importfileid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importfileid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ImportFileId = value;
			}
		}
		
		/// <summary>
		/// Chọn công việc nhập mà tệp được tải lên.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importid")]
		public Microsoft.Xrm.Sdk.EntityReference ImportId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("importid");
			}
			set
			{
				this.SetAttributeValue("importid", value);
			}
		}
		
		/// <summary>
		/// Tên công việc nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importidname")]
		public string ImportIdName
		{
			get
			{
				if (this.FormattedValues.Contains("importid"))
				{
					return this.FormattedValues["importid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn bản đồ dữ liệu để khớp tệp nhập và các tiêu đề cột của tệp với các trường và loại bản ghi trong Microsoft Dynamics 365. Nếu tiêu đề cột trong tệp khớp với tên hiển thị của trường đích trong Microsoft Dynamics 365, chúng tôi sẽ tự động nhập dữ liệu. Nếu không, bạn có thể khớp theo cách thủ công trong quá trình nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapid")]
		public Microsoft.Xrm.Sdk.EntityReference ImportMapId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("importmapid");
			}
			set
			{
				this.SetAttributeValue("importmapid", value);
			}
		}
		
		/// <summary>
		/// Tên của bản đồ nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapidname")]
		public string ImportMapIdName
		{
			get
			{
				if (this.FormattedValues.Contains("importmapid"))
				{
					return this.FormattedValues["importmapid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn liệu hàng đầu tiên của tệp nhập có chứa các tiêu đề cột hay không. Các tiêu đề này được sử dụng để ánh xạ dữ liệu trong quá trình diễn ra công việc nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfirstrowheader")]
		public System.Nullable<bool> IsFirstRowHeader
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isfirstrowheader");
			}
			set
			{
				this.SetAttributeValue("isfirstrowheader", value);
			}
		}
		
		/// <summary>
		/// Thông tin về việc liệu hàng đầu tiên có chứa tiêu đề cột hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isfirstrowheadername")]
		public string IsFirstRowHeaderName
		{
			get
			{
				if (this.FormattedValues.Contains("isfirstrowheader"))
				{
					return this.FormattedValues["isfirstrowheader"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi sau cùng. Ngày và giờ được hiển thị trong múi giờ đã chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị tên của tệp nhập. Tên này dựa trên tên của tệp được tải lên.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Nhập người dùng được gán để theo dõi hoặc quản lý tệp nhập. Trường này được cập nhật mỗi lần tệp nhập được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết đơn vị kinh doanh của chủ sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Hiển thị tiền tố được áp dụng cho từng cột sau khi tệp nhập được phân tích.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parsedtablecolumnprefix")]
		public string ParsedTableColumnPrefix
		{
			get
			{
				return this.GetAttributeValue<string>("parsedtablecolumnprefix");
			}
		}
		
		/// <summary>
		/// Hiển thị số lượng cột được bao gồm trong tệp nhập được phân tích.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parsedtablecolumnsnumber")]
		public System.Nullable<int> ParsedTableColumnsNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("parsedtablecolumnsnumber");
			}
		}
		
		/// <summary>
		/// Hiển thị tên bảng chứa dữ liệu được phân tích từ tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parsedtablename")]
		public string ParsedTableName
		{
			get
			{
				return this.GetAttributeValue<string>("parsedtablename");
			}
		}
		
		/// <summary>
		/// Hiển thị số lượng bản ghi trong tệp này không nhập được trong quá trình nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partialfailurecount")]
		public System.Nullable<int> PartialFailureCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("partialfailurecount");
			}
		}
		
		/// <summary>
		/// Cho biết liệu tệp nhập sẽ bị bỏ qua hay được xử lý trong quá trình nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcode")]
		public virtual importfile_processcode? ProcessCode
		{
			get
			{
				return ((importfile_processcode?)(EntityOptionSetEnum.GetEnum(this, "processcode")));
			}
			set
			{
				this.SetAttributeValue("processcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên mã quy trình cho ProcessCode
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcodename")]
		public string ProcessCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("processcode"))
				{
					return this.FormattedValues["processcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị mã trạng thái xử lý của tệp nhập. Mã này cho biết liệu dữ liệu trong tệp nhập đã được phân tích, biến đổi hay được nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processingstatus")]
		public virtual importfile_processingstatus? ProcessingStatus
		{
			get
			{
				return ((importfile_processingstatus?)(EntityOptionSetEnum.GetEnum(this, "processingstatus")));
			}
		}
		
		/// <summary>
		/// Tên Trạng thái Xử lý của ProcessingStatus
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processingstatusname")]
		public string ProcessingStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("processingstatus"))
				{
					return this.FormattedValues["processingstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị mã tiến trình cho quá trình xử lý tệp nhập. Trường này được sử dụng khi công việc nhập tạm dừng được tiếp tục.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("progresscounter")]
		public System.Nullable<int> ProgressCounter
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("progresscounter");
			}
		}
		
		/// <summary>
		/// Chọn người dùng mà bản ghi được tạo trong quá trình diễn ra công việc nhập sẽ được gán cho người dùng đó.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordsownerid")]
		public Microsoft.Xrm.Sdk.EntityReference RecordsOwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("recordsownerid");
			}
			set
			{
				this.SetAttributeValue("recordsownerid", value);
			}
		}
		
		/// <summary>
		/// Tên chủ sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordsowneridname")]
		public string RecordsOwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("recordsownerid"))
				{
					return this.FormattedValues["recordsownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị các cột được ánh xạ tới loại bản ghi (thực thể) có liên quan của loại bản ghi (thực thể) chính được bao gồm trong tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("relatedentitycolumns")]
		public string RelatedEntityColumns
		{
			get
			{
				return this.GetAttributeValue<string>("relatedentitycolumns");
			}
			set
			{
				this.SetAttributeValue("relatedentitycolumns", value);
			}
		}
		
		/// <summary>
		/// Hiển thị kích thước của tệp nhập, theo kilobyte.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("size")]
		public string Size
		{
			get
			{
				return this.GetAttributeValue<string>("size");
			}
			set
			{
				this.SetAttributeValue("size", value);
			}
		}
		
		/// <summary>
		/// Hiển thị tên của tệp nguồn dữ liệu được tải lên trong công việc nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public string Source
		{
			get
			{
				return this.GetAttributeValue<string>("source");
			}
			set
			{
				this.SetAttributeValue("source", value);
			}
		}
		
		/// <summary>
		/// Hiển thị loại bản ghi (thực thể) của dữ liệu nguồn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourceentityname")]
		public string SourceEntityName
		{
			get
			{
				return this.GetAttributeValue<string>("sourceentityname");
			}
			set
			{
				this.SetAttributeValue("sourceentityname", value);
			}
		}
		
		/// <summary>
		/// Hiển thị trạng thái của bản ghi tệp nhập. Theo mặc định, tất cả các bản ghi đều hiện hoạt và không thể bị hủy kích hoạt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual importfile_statecode? StateCode
		{
			get
			{
				return ((importfile_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên trạng thái của tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị mã lý do giải thích trạng thái của tệp nhập để xác định giai đoạn của quá trình nhập, từ khi phân tích dữ liệu cho tới khi hoàn tất.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual importfile_statuscode? StatusCode
		{
			get
			{
				return ((importfile_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên lý do dẫn đến trạng thái của tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị số lượng bản ghi trong tệp nhập được nhập thành công.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("successcount")]
		public System.Nullable<int> SuccessCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("successcount");
			}
		}
		
		/// <summary>
		/// Chọn loại bản ghi (thực thể) đích cho các bản ghi sẽ được tạo trong quá trình diễn ra công việc nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("targetentityname")]
		public string TargetEntityName
		{
			get
			{
				return this.GetAttributeValue<string>("targetentityname");
			}
			set
			{
				this.SetAttributeValue("targetentityname", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Hiển thị tổng số lượng bản ghi trong tệp nhập.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("totalcount")]
		public System.Nullable<int> TotalCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("totalcount");
			}
		}
		
		/// <summary>
		/// Chọn dữ liệu được dùng để xác định chế độ upsert. Chế độ này theo mặc định là Tạo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("upsertmodecode")]
		public virtual importfile_upsertmodecode? UpsertModeCode
		{
			get
			{
				return ((importfile_upsertmodecode?)(EntityOptionSetEnum.GetEnum(this, "upsertmodecode")));
			}
			set
			{
				this.SetAttributeValue("upsertmodecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Loại Chế độ Upsert của tệp nguồn được tải lên
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("upsertmodename")]
		public string UpsertModeName
		{
			get
			{
				if (this.FormattedValues.Contains("upsertmodecode"))
				{
					return this.FormattedValues["upsertmodecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu có áp dụng bản đồ hệ thống tự động cho tệp nhập hay không. Bản đồ này sẽ tự động ánh xạ dữ liệu nhập tới thực thể đích trong Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usesystemmap")]
		public System.Nullable<bool> UseSystemMap
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usesystemmap");
			}
			set
			{
				this.SetAttributeValue("usesystemmap", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usesystemmapname")]
		public string UseSystemMapName
		{
			get
			{
				if (this.FormattedValues.Contains("usesystemmap"))
				{
					return this.FormattedValues["usesystemmap"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// 1:N ImportFile_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportFile_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> ImportFile_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("ImportFile_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("ImportFile_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ImportFile_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportFile_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> ImportFile_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("ImportFile_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("ImportFile_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ImportLog_ImportFile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportLog_ImportFile")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ImportLog> ImportLog_ImportFile
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ImportLog>("ImportLog_ImportFile", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ImportLog>("ImportLog_ImportFile", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_importfile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_importfile")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_importfile
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_importfile", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_importfile", null, value);
			}
		}
		
		/// <summary>
		/// N:1 BusinessUnit_ImportFiles
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BusinessUnit_ImportFiles")]
		public Dev.DevKit.ProxyTypes.BusinessUnit BusinessUnit_ImportFiles
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("BusinessUnit_ImportFiles", null);
			}
		}
		
		/// <summary>
		/// N:1 Import_ImportFile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Import_ImportFile")]
		public Dev.DevKit.ProxyTypes.Import Import_ImportFile
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Import>("Import_ImportFile", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Import>("Import_ImportFile", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ImportFile_SystemUser
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordsownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportFile_SystemUser")]
		public Dev.DevKit.ProxyTypes.SystemUser ImportFile_SystemUser
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("ImportFile_SystemUser", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("ImportFile_SystemUser", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ImportFile_Team
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordsownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportFile_Team")]
		public Dev.DevKit.ProxyTypes.Team ImportFile_Team
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("ImportFile_Team", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("ImportFile_Team", null, value);
			}
		}
		
		/// <summary>
		/// N:1 ImportMap_ImportFile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importmapid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ImportMap_ImportFile")]
		public Dev.DevKit.ProxyTypes.ImportMap ImportMap_ImportFile
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ImportMap>("ImportMap_ImportFile", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ImportMap>("ImportMap_ImportFile", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_importfilebase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_importfilebase_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_importfilebase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_importfilebase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_importfilebase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_importfilebase_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_importfilebase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_importfilebase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_importfilebase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_importfilebase_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_importfilebase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_importfilebase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_importfilebase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_importfilebase_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_importfilebase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_importfilebase_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 SystemUser_ImportFiles
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SystemUser_ImportFiles")]
		public Dev.DevKit.ProxyTypes.SystemUser SystemUser_ImportFiles
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("SystemUser_ImportFiles", null);
			}
		}
		
		/// <summary>
		/// N:1 team_ImportFiles
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_ImportFiles")]
		public Dev.DevKit.ProxyTypes.Team team_ImportFiles
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_ImportFiles", null);
			}
		}
	}
}
#pragma warning restore CS1591
