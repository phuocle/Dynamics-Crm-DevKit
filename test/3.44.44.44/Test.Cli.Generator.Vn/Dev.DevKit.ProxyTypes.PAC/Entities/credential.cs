#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum credential_connectiontype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernamePassword = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernamePasswordList = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		UsernamePasswordListWithGroupMapping = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CyberArkIdentity = 4,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum credential_credentialtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SingleCredential = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ListOfCredentials = 2,
	}
	
	/// <summary>
	/// Trạng thái của thông tin xác thực
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum credential_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của thông tin xác thực
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum credential_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhoat = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghoatng = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("credential")]
	public partial class credential : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the credential entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string connectiontype = "connectiontype";
			public const string connectiontypeName = "connectiontypename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string credentialId = "credentialid";
			public const string Id = "credentialid";
			public const string credentials = "credentials";
			public const string credentialtype = "credentialtype";
			public const string credentialtypeName = "credentialtypename";
			public const string cyberarkapplicationid = "cyberarkapplicationid";
			public const string cyberarkobject = "cyberarkobject";
			public const string cyberarkobjectName = "cyberarkobjectname";
			public const string cyberarksafe = "cyberarksafe";
			public const string cyberarksafeName = "cyberarksafename";
			public const string cyberarkusername = "cyberarkusername";
			public const string cyberarkusernameName = "cyberarkusernamename";
			public const string description = "description";
			public const string groupmapping = "groupmapping";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string password = "password";
			public const string passwordName = "passwordname";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string username = "username";
			public const string usernameName = "usernamename";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string connectioninstance_CredentialId_credential = "connectioninstance_CredentialId_credential";
			public const string credential_AsyncOperations = "credential_AsyncOperations";
			public const string credential_BulkDeleteFailures = "credential_BulkDeleteFailures";
			public const string credential_DuplicateBaseRecord = "credential_DuplicateBaseRecord";
			public const string credential_DuplicateMatchingRecord = "credential_DuplicateMatchingRecord";
			public const string credential_MailboxTrackingFolders = "credential_MailboxTrackingFolders";
			public const string credential_PrincipalObjectAttributeAccesses = "credential_PrincipalObjectAttributeAccesses";
			public const string credential_ProcessSession = "credential_ProcessSession";
			public const string credential_SyncErrors = "credential_SyncErrors";
			public const string credential_UserEntityInstanceDatas = "credential_UserEntityInstanceDatas";
			public const string business_unit_credential = "business_unit_credential";
			public const string environmentvariabledefinition_credential_cyberarkobject = "environmentvariabledefinition_credential_cyberarkobject";
			public const string environmentvariabledefinition_credential_cyberarksafe = "environmentvariabledefinition_credential_cyberarksafe";
			public const string environmentvariabledefinition_credential_cyberarkusername = "environmentvariabledefinition_credential_cyberarkusername";
			public const string environmentvariabledefinition_credential_password = "environmentvariabledefinition_credential_password";
			public const string environmentvariabledefinition_credential_username = "environmentvariabledefinition_credential_username";
			public const string lk_credential_createdby = "lk_credential_createdby";
			public const string lk_credential_createdonbehalfby = "lk_credential_createdonbehalfby";
			public const string lk_credential_modifiedby = "lk_credential_modifiedby";
			public const string lk_credential_modifiedonbehalfby = "lk_credential_modifiedonbehalfby";
			public const string team_credential = "team_credential";
			public const string user_credential = "user_credential";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public credential() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "credential";
		
		public const string EntityLogicalCollectionName = "credentials";
		
		public const string EntitySetName = "credentials";
		
		public const int EntityTypeCode = 10077;
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectiontype")]
		public virtual credential_connectiontype? connectiontype
		{
			get
			{
				return ((credential_connectiontype?)(EntityOptionSetEnum.GetEnum(this, "connectiontype")));
			}
			set
			{
				this.SetAttributeValue("connectiontype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectiontypename")]
		public string connectiontypeName
		{
			get
			{
				if (this.FormattedValues.Contains("connectiontype"))
				{
					return this.FormattedValues["connectiontype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và thời gian tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho các phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialid")]
		public System.Nullable<System.Guid> credentialId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("credentialid");
			}
			set
			{
				this.SetAttributeValue("credentialid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.credentialId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentials")]
		public string credentials
		{
			get
			{
				return this.GetAttributeValue<string>("credentials");
			}
			set
			{
				this.SetAttributeValue("credentials", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialtype")]
		public virtual credential_credentialtype? credentialtype
		{
			get
			{
				return ((credential_credentialtype?)(EntityOptionSetEnum.GetEnum(this, "credentialtype")));
			}
			set
			{
				this.SetAttributeValue("credentialtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialtypename")]
		public string credentialtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("credentialtype"))
				{
					return this.FormattedValues["credentialtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkapplicationid")]
		public string cyberarkapplicationid
		{
			get
			{
				return this.GetAttributeValue<string>("cyberarkapplicationid");
			}
			set
			{
				this.SetAttributeValue("cyberarkapplicationid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkobject")]
		public Microsoft.Xrm.Sdk.EntityReference cyberarkobject
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cyberarkobject");
			}
			set
			{
				this.SetAttributeValue("cyberarkobject", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkobjectname")]
		public string cyberarkobjectName
		{
			get
			{
				if (this.FormattedValues.Contains("cyberarkobject"))
				{
					return this.FormattedValues["cyberarkobject"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Siêu dữ liệu của Két CyberArk nơi lưu trữ mật khẩu: Tên máy chủ hoặc địa chỉ IP của điểm cuối CCP, Thư mục và Tên của Két CyberArk nơi mật khẩu được lưu trữ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarksafe")]
		public Microsoft.Xrm.Sdk.EntityReference cyberarksafe
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cyberarksafe");
			}
			set
			{
				this.SetAttributeValue("cyberarksafe", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarksafename")]
		public string cyberarksafeName
		{
			get
			{
				if (this.FormattedValues.Contains("cyberarksafe"))
				{
					return this.FormattedValues["cyberarksafe"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkusername")]
		public Microsoft.Xrm.Sdk.EntityReference cyberarkusername
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cyberarkusername");
			}
			set
			{
				this.SetAttributeValue("cyberarkusername", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkusernamename")]
		public string cyberarkusernameName
		{
			get
			{
				if (this.FormattedValues.Contains("cyberarkusername"))
				{
					return this.FormattedValues["cyberarkusername"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mô tả về thông tin xác thực.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupmapping")]
		public string groupmapping
		{
			get
			{
				return this.GetAttributeValue<string>("groupmapping");
			}
			set
			{
				this.SetAttributeValue("groupmapping", value);
			}
		}
		
		/// <summary>
		/// Số thứ tự của lượt nhập đã tạo ra bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày và thời gian di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// ID chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("password")]
		public Microsoft.Xrm.Sdk.EntityReference password
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("password");
			}
			set
			{
				this.SetAttributeValue("password", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordname")]
		public string passwordName
		{
			get
			{
				if (this.FormattedValues.Contains("password"))
				{
					return this.FormattedValues["password"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của thông tin xác thực
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual credential_statecode? statecode
		{
			get
			{
				return ((credential_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của thông tin xác thực
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual credential_statuscode? statuscode
		{
			get
			{
				return ((credential_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("username")]
		public Microsoft.Xrm.Sdk.EntityReference username
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("username");
			}
			set
			{
				this.SetAttributeValue("username", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usernamename")]
		public string usernameName
		{
			get
			{
				if (this.FormattedValues.Contains("username"))
				{
					return this.FormattedValues["username"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_CredentialId_credential
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_CredentialId_credential")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ConnectionInstance> connectioninstance_CredentialId_credential
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ConnectionInstance>("connectioninstance_CredentialId_credential", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ConnectionInstance>("connectioninstance_CredentialId_credential", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> credential_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("credential_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("credential_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> credential_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("credential_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("credential_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> credential_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("credential_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("credential_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> credential_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("credential_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("credential_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> credential_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("credential_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("credential_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> credential_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("credential_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("credential_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> credential_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("credential_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("credential_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> credential_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("credential_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("credential_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N credential_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("credential_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> credential_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("credential_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("credential_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_credential
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_credential")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_credential
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_credential", null);
			}
		}
		
		/// <summary>
		/// N:1 environmentvariabledefinition_credential_cyberarkobject
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkobject")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("environmentvariabledefinition_credential_cyberarkobject")]
		public Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition environmentvariabledefinition_credential_cyberarkobject
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarkobject", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarkobject", null, value);
			}
		}
		
		/// <summary>
		/// N:1 environmentvariabledefinition_credential_cyberarksafe
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarksafe")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("environmentvariabledefinition_credential_cyberarksafe")]
		public Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition environmentvariabledefinition_credential_cyberarksafe
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarksafe", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarksafe", null, value);
			}
		}
		
		/// <summary>
		/// N:1 environmentvariabledefinition_credential_cyberarkusername
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cyberarkusername")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("environmentvariabledefinition_credential_cyberarkusername")]
		public Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition environmentvariabledefinition_credential_cyberarkusername
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarkusername", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_cyberarkusername", null, value);
			}
		}
		
		/// <summary>
		/// N:1 environmentvariabledefinition_credential_password
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("password")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("environmentvariabledefinition_credential_password")]
		public Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition environmentvariabledefinition_credential_password
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_password", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_password", null, value);
			}
		}
		
		/// <summary>
		/// N:1 environmentvariabledefinition_credential_username
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("username")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("environmentvariabledefinition_credential_username")]
		public Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition environmentvariabledefinition_credential_username
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_username", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.EnvironmentVariableDefinition>("environmentvariabledefinition_credential_username", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_credential_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_credential_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_credential_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_credential_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_credential_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_credential_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_credential_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_credential_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_credential_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_credential_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_credential_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_credential_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_credential_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_credential_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_credential_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_credential_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_credential
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_credential")]
		public Dev.DevKit.ProxyTypes.Team team_credential
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_credential", null);
			}
		}
		
		/// <summary>
		/// N:1 user_credential
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_credential")]
		public Dev.DevKit.ProxyTypes.SystemUser user_credential
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_credential", null);
			}
		}
	}
}
#pragma warning restore CS1591
