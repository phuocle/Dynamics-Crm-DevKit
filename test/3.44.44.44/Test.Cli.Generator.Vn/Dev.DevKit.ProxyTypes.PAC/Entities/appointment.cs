#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Lỗi tệp đính kèm trong biểu mẫu chi tiết.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum appointment_attachmenterrors
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khng = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CuchncluthnhbnghicuchnMicrosoftDynamics365nhngkhngthluttccctpnhkmvicuchnKhngthlumttpnhkmnutpbchnhocloitpkhnghpl = 1,
	}
	
	/// <summary>
	/// Loại phiên bản của chuỗi lặp lại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum appointment_instancetypecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KhngLpli = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		BnghichLpli = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		PhinbnLpli = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NgoilLpli = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		NgoilTnglaiLpli = 4,
	}
	
	/// <summary>
	/// Mức ưu tiên của cuộc hẹn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum appointment_prioritycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thp = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bnhthng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cao = 2,
	}
	
	/// <summary>
	/// Trạng thái của cuộc hẹn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum appointment_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 3,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của cuộc hẹn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum appointment_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Rnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Chadtkhot = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		honthnh = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		hy = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bn = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngcmtvnphng = 6,
	}
	
	/// <summary>
	/// Cam kết thể hiện khoảng cách với thời gian bắt đầu/kết thúc và khoảng thời gian.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("appointment")]
	public partial class Appointment : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the appointment entity
		/// </summary>
		public partial class Fields
		{
			public const string ActivityAdditionalParams = "activityadditionalparams";
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string ActivityTypeCodeName = "activitytypecodename";
			public const string ActualDurationMinutes = "actualdurationminutes";
			public const string ActualEnd = "actualend";
			public const string ActualStart = "actualstart";
			public const string AttachmentCount = "attachmentcount";
			public const string AttachmentErrors = "attachmenterrors";
			public const string AttachmentErrorsName = "attachmenterrorsname";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string FormattedScheduledEnd = "formattedscheduledend";
			public const string FormattedScheduledStart = "formattedscheduledstart";
			public const string GlobalObjectId = "globalobjectid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string InstanceTypeCode = "instancetypecode";
			public const string InstanceTypeCodeName = "instancetypecodename";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsAllDayEventName = "isalldayeventname";
			public const string IsBilled = "isbilled";
			public const string IsBilledName = "isbilledname";
			public const string IsDraft = "isdraft";
			public const string IsDraftName = "isdraftname";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsMapiPrivateName = "ismapiprivatename";
			public const string IsOnlineMeeting = "isonlinemeeting";
			public const string isonlinemeetingName = "isonlinemeetingname";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsRegularActivityName = "isregularactivityname";
			public const string IsUnsafe = "isunsafe";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string IsWorkflowCreatedName = "isworkflowcreatedname";
			public const string LastOnHoldTime = "lastonholdtime";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedFieldsMask = "modifiedfieldsmask";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OnHoldTime = "onholdtime";
			public const string OnlineMeetingChatId = "onlinemeetingchatid";
			public const string OnlineMeetingId = "onlinemeetingid";
			public const string OnlineMeetingJoinUrl = "onlinemeetingjoinurl";
			public const string OnlineMeetingType = "onlinemeetingtype";
			public const string onlinemeetingtypeName = "onlinemeetingtypename";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OriginalStartDate = "originalstartdate";
			public const string OutlookOwnerApptId = "outlookownerapptid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PriorityCode = "prioritycode";
			public const string PriorityCodeName = "prioritycodename";
			public const string ProcessId = "processid";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string RegardingObjectIdYomiName = "regardingobjectidyominame";
			public const string RequiredAttendees = "requiredattendees";
			public const string ScheduledDurationMinutes = "scheduleddurationminutes";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesId = "seriesid";
			public const string SLAId = "slaid";
			public const string SLAInvokedId = "slainvokedid";
			public const string SLAInvokedIdName = "slainvokedidname";
			public const string SLAName = "slaname";
			public const string SortDate = "sortdate";
			public const string StageId = "stageid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string TraversedPath = "traversedpath";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string appointment_actioncard = "appointment_actioncard";
			public const string appointment_activity_mime_attachment = "appointment_activity_mime_attachment";
			public const string appointment_activity_parties = "appointment_activity_parties";
			public const string Appointment_Annotation = "Appointment_Annotation";
			public const string Appointment_AsyncOperations = "Appointment_AsyncOperations";
			public const string Appointment_BulkDeleteFailures = "Appointment_BulkDeleteFailures";
			public const string appointment_connections1 = "appointment_connections1";
			public const string appointment_connections2 = "appointment_connections2";
			public const string Appointment_DuplicateBaseRecord = "Appointment_DuplicateBaseRecord";
			public const string Appointment_DuplicateMatchingRecord = "Appointment_DuplicateMatchingRecord";
			public const string appointment_PostFollows = "appointment_PostFollows";
			public const string appointment_principalobjectattributeaccess = "appointment_principalobjectattributeaccess";
			public const string Appointment_ProcessSessions = "Appointment_ProcessSessions";
			public const string Appointment_QueueItem = "Appointment_QueueItem";
			public const string Appointment_SyncErrors = "Appointment_SyncErrors";
			public const string slakpiinstance_appointment = "slakpiinstance_appointment";
			public const string userentityinstancedata_appointment = "userentityinstancedata_appointment";
			public const string Account_Appointments = "Account_Appointments";
			public const string activity_pointer_appointment = "activity_pointer_appointment";
			public const string adx_invitation_Appointments = "adx_invitation_Appointments";
			public const string business_unit_appointment_activities = "business_unit_appointment_activities";
			public const string Contact_Appointments = "Contact_Appointments";
			public const string KnowledgeArticle_Appointments = "KnowledgeArticle_Appointments";
			public const string KnowledgeBaseRecord_Appointments = "KnowledgeBaseRecord_Appointments";
			public const string lk_appointment_createdby = "lk_appointment_createdby";
			public const string lk_appointment_createdonbehalfby = "lk_appointment_createdonbehalfby";
			public const string lk_appointment_modifiedby = "lk_appointment_modifiedby";
			public const string lk_appointment_modifiedonbehalfby = "lk_appointment_modifiedonbehalfby";
			public const string manualsla_appointment = "manualsla_appointment";
			public const string mspp_adplacement_Appointments = "mspp_adplacement_Appointments";
			public const string mspp_pollplacement_Appointments = "mspp_pollplacement_Appointments";
			public const string mspp_publishingstatetransitionrule_Appointments = "mspp_publishingstatetransitionrule_Appointments";
			public const string mspp_redirect_Appointments = "mspp_redirect_Appointments";
			public const string mspp_shortcut_Appointments = "mspp_shortcut_Appointments";
			public const string mspp_website_Appointments = "mspp_website_Appointments";
			public const string processstage_appointments = "processstage_appointments";
			public const string recurringappointmentmaster_appointment = "recurringappointmentmaster_appointment";
			public const string sla_appointment = "sla_appointment";
			public const string team_appointment = "team_appointment";
			public const string TransactionCurrency_Appointment = "TransactionCurrency_Appointment";
			public const string user_appointment = "user_appointment";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public Appointment() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "appointment";
		
		public const string EntityLogicalCollectionName = "appointments";
		
		public const string EntitySetName = "appointments";
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityadditionalparams")]
		public string ActivityAdditionalParams
		{
			get
			{
				return this.GetAttributeValue<string>("activityadditionalparams");
			}
			set
			{
				this.SetAttributeValue("activityadditionalparams", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			set
			{
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Loại hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecodename")]
		public string ActivityTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("activitytypecode"))
				{
					return this.FormattedValues["activitytypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết giá trị được chọn trong trường Khoảng thời gian trong cuộc hẹn tại thời điểm đóng hoặc hoàn thành cuộc hẹn. Khoảng thời gian được dùng để báo cáo thời lượng sử dụng trong hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualdurationminutes")]
		public System.Nullable<int> ActualDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("actualdurationminutes");
			}
			set
			{
				this.SetAttributeValue("actualdurationminutes", value);
			}
		}
		
		/// <summary>
		/// Nhập ngày và giờ kết thúc thực tế của cuộc hẹn. Theo mặc định, trường này hiển thị ngày và giờ hoàn thành hoặc hủy hoạt động, nhưng có thể chỉnh sửa được để thu thập khoảng thời gian thực tế của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualend")]
		public System.Nullable<System.DateTime> ActualEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualend");
			}
			set
			{
				this.SetAttributeValue("actualend", value);
			}
		}
		
		/// <summary>
		/// Nhập ngày và giờ bắt đầu thực tế cho cuộc hẹn. Theo mặc định, trường này hiển thị ngày và giờ tạo hoạt động, nhưng có thể chỉnh sửa được để thu thập khoảng thời gian thực tế của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actualstart")]
		public System.Nullable<System.DateTime> ActualStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("actualstart");
			}
			set
			{
				this.SetAttributeValue("actualstart", value);
			}
		}
		
		/// <summary>
		/// Hiển thị số lượng tệp đính kèm trong cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmentcount")]
		public System.Nullable<int> AttachmentCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("attachmentcount");
			}
		}
		
		/// <summary>
		/// Chọn mã lỗi để xác định sự cố với người nhận hoặc tệp đính kèm trong mục outlook, chẳng hạn như tệp đính kèm bị chặn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmenterrors")]
		public virtual appointment_attachmenterrors? AttachmentErrors
		{
			get
			{
				return ((appointment_attachmenterrors?)(EntityOptionSetEnum.GetEnum(this, "attachmenterrors")));
			}
			set
			{
				this.SetAttributeValue("attachmenterrors", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("attachmenterrorsname")]
		public string AttachmentErrorsName
		{
			get
			{
				if (this.FormattedValues.Contains("attachmenterrors"))
				{
					return this.FormattedValues["attachmenterrors"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập một thể loại để xác định loại cuộc hẹn, chẳng hạn như giới thiệu bán hàng, gọi điện cho nhà tài trợ tiềm năng hay cuộc gọi dịch vụ, nhằm liên kết cuộc hẹn với chức năng hoặc nhóm kinh doanh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			set
			{
				this.SetAttributeValue("category", value);
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung để mô tả mục đích của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Cho biết tỷ giá quy đổi của loại tiền trên bản ghi. Tỷ giá được dùng để đổi tất cả các trường tiền trong bản ghi từ loại tiền địa phương sang loại tiền mặc định của hệ thống.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Thời gian kết thúc đã lên lịch đã được định dạng của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("formattedscheduledend")]
		public System.Nullable<System.DateTime> FormattedScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("formattedscheduledend");
			}
		}
		
		/// <summary>
		/// Thời gian bắt đầu đã lên lịch đã được định dạng của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("formattedscheduledstart")]
		public System.Nullable<System.DateTime> FormattedScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("formattedscheduledstart");
			}
		}
		
		/// <summary>
		/// Cho biết ID của cuộc hẹn trong Microsoft Office Outlook. ID được dùng để đồng bộ hóa cuộc hẹn giữa Microsoft Dynamics 365 và tài khoản Exchange chính xác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalobjectid")]
		public string GlobalObjectId
		{
			get
			{
				return this.GetAttributeValue<string>("globalobjectid");
			}
			set
			{
				this.SetAttributeValue("globalobjectid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của quá trình nhập dữ liệu hoặc dịch chuyển dữ liệu đã tạo bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Loại phiên bản của chuỗi lặp lại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual appointment_instancetypecode? InstanceTypeCode
		{
			get
			{
				return ((appointment_instancetypecode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecodename")]
		public string InstanceTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("instancetypecode"))
				{
					return this.FormattedValues["instancetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn cuộc hẹn có là sự kiện cả ngày hay không để đảm bảo rằng nguồn lực bắt buộc được lên lịch cho cả ngày.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayevent")]
		public System.Nullable<bool> IsAllDayEvent
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isalldayevent");
			}
			set
			{
				this.SetAttributeValue("isalldayevent", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayeventname")]
		public string IsAllDayEventName
		{
			get
			{
				if (this.FormattedValues.Contains("isalldayevent"))
				{
					return this.FormattedValues["isalldayevent"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc cuộc hẹn có được lập hóa đơn như một phần trong việc giải quyết trường hợp hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			set
			{
				this.SetAttributeValue("isbilled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilledname")]
		public string IsBilledName
		{
			get
			{
				if (this.FormattedValues.Contains("isbilled"))
				{
					return this.FormattedValues["isbilled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc cuộc hẹn có phải là bản nháp hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdraft")]
		public System.Nullable<bool> IsDraft
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdraft");
			}
			set
			{
				this.SetAttributeValue("isdraft", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdraftname")]
		public string IsDraftName
		{
			get
			{
				if (this.FormattedValues.Contains("isdraft"))
				{
					return this.FormattedValues["isdraft"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			set
			{
				this.SetAttributeValue("ismapiprivate", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivatename")]
		public string IsMapiPrivateName
		{
			get
			{
				if (this.FormattedValues.Contains("ismapiprivate"))
				{
					return this.FormattedValues["ismapiprivate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị xem đây có phải là cuộc họp trực tuyến hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isonlinemeeting")]
		public System.Nullable<bool> IsOnlineMeeting
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isonlinemeeting");
			}
			set
			{
				this.SetAttributeValue("isonlinemeeting", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isonlinemeetingname")]
		public string isonlinemeetingName
		{
			get
			{
				if (this.FormattedValues.Contains("isonlinemeeting"))
				{
					return this.FormattedValues["isonlinemeeting"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc hoạt động có loại hoạt động thông thường hay loại sự kiện.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivityname")]
		public string IsRegularActivityName
		{
			get
			{
				if (this.FormattedValues.Contains("isregularactivity"))
				{
					return this.FormattedValues["isregularactivity"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isunsafe")]
		public System.Nullable<int> IsUnsafe
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("isunsafe");
			}
		}
		
		/// <summary>
		/// Thông tin về việc cuộc hẹn có được tạo từ quy tắc quy trình làm việc hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			set
			{
				this.SetAttributeValue("isworkflowcreated", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreatedname")]
		public string IsWorkflowCreatedName
		{
			get
			{
				if (this.FormattedValues.Contains("isworkflowcreated"))
				{
					return this.FormattedValues["isworkflowcreated"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chứa nhãn ngày và giờ của lần tạm giữ gần đây nhất.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastonholdtime")]
		public System.Nullable<System.DateTime> LastOnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastonholdtime");
			}
			set
			{
				this.SetAttributeValue("lastonholdtime", value);
			}
		}
		
		/// <summary>
		/// Nhập vị trí diễn ra cuộc hẹn, chẳng hạn như phòng hội nghị hoặc văn phòng khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
		public string Location
		{
			get
			{
				return this.GetAttributeValue<string>("location");
			}
			set
			{
				this.SetAttributeValue("location", value);
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ. 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedfieldsmask")]
		public string ModifiedFieldsMask
		{
			get
			{
				return this.GetAttributeValue<string>("modifiedfieldsmask");
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị khoảng thời gian tính bằng phút mà bản ghi bị tạm giữ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onholdtime")]
		public System.Nullable<int> OnHoldTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("onholdtime");
			}
		}
		
		/// <summary>
		/// Hiển thị ID cuộc trò chuyện trong cuộc họp trực tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingchatid")]
		public string OnlineMeetingChatId
		{
			get
			{
				return this.GetAttributeValue<string>("onlinemeetingchatid");
			}
			set
			{
				this.SetAttributeValue("onlinemeetingchatid", value);
			}
		}
		
		/// <summary>
		/// Hiển thị ID cuộc họp trực tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingid")]
		public string OnlineMeetingId
		{
			get
			{
				return this.GetAttributeValue<string>("onlinemeetingid");
			}
			set
			{
				this.SetAttributeValue("onlinemeetingid", value);
			}
		}
		
		/// <summary>
		/// Hiển thị URL tham gia cuộc họp trực tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingjoinurl")]
		public string OnlineMeetingJoinUrl
		{
			get
			{
				return this.GetAttributeValue<string>("onlinemeetingjoinurl");
			}
			set
			{
				this.SetAttributeValue("onlinemeetingjoinurl", value);
			}
		}
		
		/// <summary>
		/// Hiển thị loại cuộc họp trực tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingtype")]
		public virtual onlinemeetingtype? OnlineMeetingType
		{
			get
			{
				return ((onlinemeetingtype?)(EntityOptionSetEnum.GetEnum(this, "onlinemeetingtype")));
			}
			set
			{
				this.SetAttributeValue("onlinemeetingtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("onlinemeetingtypename")]
		public string onlinemeetingtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("onlinemeetingtype"))
				{
					return this.FormattedValues["onlinemeetingtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập khách hàng, người liên hệ, khách hàng tiềm năng, người dùng hoặc nguồn lực thiết bị không cần thiết tại cuộc hẹn, nhưng có thể tham gia theo tùy chọn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityParty> OptionalAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Dev.DevKit.ProxyTypes.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Nhập người dùng phụ trách hợp tác hoặc chủ trì cuộc hẹn để đảm bảo cuộc hẹn được hiển thị trong dạng xem Hoạt động của tôi của người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityParty> Organizer
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Dev.DevKit.ProxyTypes.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Ngày bắt đầu ban đầu của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originalstartdate")]
		public System.Nullable<System.DateTime> OriginalStartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("originalstartdate");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của chủ sở hữu cuộc hẹn Microsoft Office Outlook liên quan đến thuộc tính MAPI PR_OWNER_APPT_ID.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlookownerapptid")]
		public System.Nullable<int> OutlookOwnerApptId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outlookownerapptid");
			}
			set
			{
				this.SetAttributeValue("outlookownerapptid", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ dịch chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Nhập người dùng hoặc nhóm được gán để quản lý bản ghi. Trường này sẽ cập nhật mỗi lần bản ghi được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết đơn vị kinh doanh của chủ sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Chọn mức ưu tiên sao cho khách hàng được ưu tiên hoặc những vấn đề nghiêm trọng sẽ được xử lý nhanh chóng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual appointment_prioritycode? PriorityCode
		{
			get
			{
				return ((appointment_prioritycode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			set
			{
				this.SetAttributeValue("prioritycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycodename")]
		public string PriorityCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("prioritycode"))
				{
					return this.FormattedValues["prioritycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ID của quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			set
			{
				this.SetAttributeValue("processid", value);
			}
		}
		
		/// <summary>
		/// Chọn bản ghi liên quan đến cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidyominame")]
		public string RegardingObjectIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập khách hàng, người liên hệ, khách hàng tiềm năng, người dùng hoặc nguồn lực thiết bị khác bắt buộc phải tham gia cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityParty> RequiredAttendees
		{
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Dev.DevKit.ProxyTypes.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			set
			{
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
			}
		}
		
		/// <summary>
		/// Cho biết khoảng thời gian dự kiến của cuộc hẹn, tính bằng phút.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduleddurationminutes")]
		public System.Nullable<int> ScheduledDurationMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("scheduleddurationminutes");
			}
			set
			{
				this.SetAttributeValue("scheduleddurationminutes", value);
			}
		}
		
		/// <summary>
		/// Nhập ngày và giờ hết hạn dự kiến để hoàn thành hoạt động nhằm cung cấp chi tiết về thời gian của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
			set
			{
				this.SetAttributeValue("scheduledend", value);
			}
		}
		
		/// <summary>
		/// Nhập ngày và giờ bắt đầu dự kiến để hoàn thành hoạt động nhằm cung cấp chi tiết về thời gian của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
			set
			{
				this.SetAttributeValue("scheduledstart", value);
			}
		}
		
		/// <summary>
		/// Cho biết ID của chuỗi lặp lại của phiên bản.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
		public System.Nullable<System.Guid> SeriesId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("seriesid");
			}
		}
		
		/// <summary>
		/// Chọn thỏa thuận cấp độ dịch vụ (SLA) mà bạn muốn áp dụng cho bản ghi cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slaid");
			}
			set
			{
				this.SetAttributeValue("slaid", value);
			}
		}
		
		/// <summary>
		/// Thỏa thuận Cấp độ Dịch vụ lần cuối đã được áp dụng cho cuộc hẹn này. Chỉ sử dụng nội bộ trường này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		public Microsoft.Xrm.Sdk.EntityReference SLAInvokedId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("slainvokedid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedidname")]
		public string SLAInvokedIdName
		{
			get
			{
				if (this.FormattedValues.Contains("slainvokedid"))
				{
					return this.FormattedValues["slainvokedid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaname")]
		public string SLAName
		{
			get
			{
				if (this.FormattedValues.Contains("slaid"))
				{
					return this.FormattedValues["slaid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị ngày và giờ sắp xếp hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sortdate")]
		public System.Nullable<System.DateTime> SortDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("sortdate");
			}
			set
			{
				this.SetAttributeValue("sortdate", value);
			}
		}
		
		/// <summary>
		/// Cho biết ID của giai đoạn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			set
			{
				this.SetAttributeValue("stageid", value);
			}
		}
		
		/// <summary>
		/// Cho biết cuộc hẹn đang mở, đã hoàn thành hay bị hủy. Cuộc hẹn đã hoàn thành hoặc bị hủy ở trạng thái chỉ đọc và không chỉnh sửa được.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual appointment_statecode? StateCode
		{
			get
			{
				return ((appointment_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual appointment_statuscode? StatusCode
		{
			get
			{
				return ((appointment_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập thể loại phụ để xác định loại cuộc hẹn và liên kết hoạt động với sản phẩm cụ thể, khu vực bán hàng, nhóm kinh doanh hoặc chức năng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			set
			{
				this.SetAttributeValue("subcategory", value);
			}
		}
		
		/// <summary>
		/// Nhập mô tả ngắn về mục tiêu hoặc chủ đề chính của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			set
			{
				this.SetAttributeValue("subject", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			set
			{
				this.SetAttributeValue("subscriptionid", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Chọn loại tiền địa phương cho bản ghi để đảm bảo ngân sách được báo cáo theo đúng loại tiền.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string TraversedPath
		{
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			set
			{
				this.SetAttributeValue("traversedpath", value);
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của cuộc hẹn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N appointment_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_actioncard")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActionCard> appointment_actioncard
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCard>("appointment_actioncard", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCard>("appointment_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_activity_mime_attachment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_activity_mime_attachment")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityMimeAttachment> appointment_activity_mime_attachment
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityMimeAttachment>("appointment_activity_mime_attachment", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityMimeAttachment>("appointment_activity_mime_attachment", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_activity_parties")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActivityParty> appointment_activity_parties
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityParty>("appointment_activity_parties", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActivityParty>("appointment_activity_parties", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_Annotation")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Annotation> Appointment_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("Appointment_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("Appointment_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> Appointment_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Appointment_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Appointment_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> Appointment_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("Appointment_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("Appointment_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_connections1")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Connection> appointment_connections1
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Connection>("appointment_connections1", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Connection>("appointment_connections1", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_connections2")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Connection> appointment_connections2
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Connection>("appointment_connections2", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Connection>("appointment_connections2", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> Appointment_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("Appointment_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("Appointment_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> Appointment_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("Appointment_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("Appointment_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_PostFollows
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_PostFollows")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PostFollow> appointment_PostFollows
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PostFollow>("appointment_PostFollows", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PostFollow>("appointment_PostFollows", null, value);
			}
		}
		
		/// <summary>
		/// 1:N appointment_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> appointment_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("appointment_principalobjectattributeaccess", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("appointment_principalobjectattributeaccess", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> Appointment_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("Appointment_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("Appointment_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_QueueItem")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.QueueItem> Appointment_QueueItem
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.QueueItem>("Appointment_QueueItem", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.QueueItem>("Appointment_QueueItem", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Appointment_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Appointment_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> Appointment_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Appointment_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("Appointment_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N slakpiinstance_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("slakpiinstance_appointment")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SLAKPIInstance> slakpiinstance_appointment
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SLAKPIInstance>("slakpiinstance_appointment", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SLAKPIInstance>("slakpiinstance_appointment", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_appointment")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_appointment
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_appointment", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_appointment", null, value);
			}
		}
		
		/// <summary>
		/// N:1 Account_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_Appointments")]
		public Dev.DevKit.ProxyTypes.Account Account_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("Account_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("Account_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_appointment")]
		public Dev.DevKit.ProxyTypes.ActivityPointer activity_pointer_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ActivityPointer>("activity_pointer_appointment", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ActivityPointer>("activity_pointer_appointment", null, value);
			}
		}
		
		/// <summary>
		/// N:1 adx_invitation_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_invitation_Appointments")]
		public Dev.DevKit.ProxyTypes.adx_invitation adx_invitation_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.adx_invitation>("adx_invitation_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.adx_invitation>("adx_invitation_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_appointment_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_appointment_activities")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_appointment_activities
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_appointment_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 Contact_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_Appointments")]
		public Dev.DevKit.ProxyTypes.Contact Contact_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("Contact_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("Contact_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeArticle_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeArticle_Appointments")]
		public Dev.DevKit.ProxyTypes.KnowledgeArticle KnowledgeArticle_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.KnowledgeArticle>("KnowledgeArticle_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.KnowledgeArticle>("KnowledgeArticle_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 KnowledgeBaseRecord_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("KnowledgeBaseRecord_Appointments")]
		public Dev.DevKit.ProxyTypes.KnowledgeBaseRecord KnowledgeBaseRecord_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.KnowledgeBaseRecord>("KnowledgeBaseRecord_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.KnowledgeBaseRecord>("KnowledgeBaseRecord_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_appointment_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_appointment_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_appointment_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_appointment_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_appointment_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_appointment_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_appointment_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_appointment_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_appointment_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_appointment_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_appointment_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_appointment_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_appointment_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_appointment_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_appointment_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_appointment_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 manualsla_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slaid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("manualsla_appointment")]
		public Dev.DevKit.ProxyTypes.SLA manualsla_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SLA>("manualsla_appointment", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SLA>("manualsla_appointment", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_adplacement_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_adplacement_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_adplacement mspp_adplacement_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_adplacement>("mspp_adplacement_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_adplacement>("mspp_adplacement_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_pollplacement_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_pollplacement_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_pollplacement mspp_pollplacement_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_pollplacement>("mspp_pollplacement_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_pollplacement>("mspp_pollplacement_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_publishingstatetransitionrule_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_publishingstatetransitionrule_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_publishingstatetransitionrule mspp_publishingstatetransitionrule_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_publishingstatetransitionrule>("mspp_publishingstatetransitionrule_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_publishingstatetransitionrule>("mspp_publishingstatetransitionrule_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_redirect_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_redirect_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_redirect mspp_redirect_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_redirect>("mspp_redirect_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_redirect>("mspp_redirect_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_shortcut_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_shortcut_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_shortcut mspp_shortcut_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_shortcut>("mspp_shortcut_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_shortcut>("mspp_shortcut_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 mspp_website_Appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mspp_website_Appointments")]
		public Dev.DevKit.ProxyTypes.mspp_website mspp_website_Appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_website>("mspp_website_Appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.mspp_website>("mspp_website_Appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 processstage_appointments
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_appointments")]
		public Dev.DevKit.ProxyTypes.ProcessStage processstage_appointments
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ProcessStage>("processstage_appointments", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ProcessStage>("processstage_appointments", null, value);
			}
		}
		
		/// <summary>
		/// N:1 recurringappointmentmaster_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_appointment")]
		public Dev.DevKit.ProxyTypes.RecurringAppointmentMaster recurringappointmentmaster_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster>("recurringappointmentmaster_appointment", null);
			}
		}
		
		/// <summary>
		/// N:1 sla_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("slainvokedid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sla_appointment")]
		public Dev.DevKit.ProxyTypes.SLA sla_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SLA>("sla_appointment", null);
			}
		}
		
		/// <summary>
		/// N:1 team_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_appointment")]
		public Dev.DevKit.ProxyTypes.Team team_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_appointment", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_Appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_Appointment")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_Appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_Appointment", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_Appointment", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_appointment")]
		public Dev.DevKit.ProxyTypes.SystemUser user_appointment
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_appointment", null);
			}
		}
	}
}
#pragma warning restore CS1591
