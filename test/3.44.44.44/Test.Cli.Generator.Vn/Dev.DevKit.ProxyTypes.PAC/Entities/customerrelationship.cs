#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Mối quan hệ giữa khách hàng và đối tác có thể có tài khoản khách hàng hoặc là người liên hệ.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("customerrelationship")]
	public partial class CustomerRelationship : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the customerrelationship entity
		/// </summary>
		public partial class Fields
		{
			public const string ConverseRelationshipId = "converserelationshipid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CustomerId = "customerid";
			public const string CustomerIdName = "customeridname";
			public const string CustomerIdYomiName = "customeridyominame";
			public const string CustomerRelationshipId = "customerrelationshipid";
			public const string Id = "customerrelationshipid";
			public const string CustomerRoleDescription = "customerroledescription";
			public const string CustomerRoleId = "customerroleid";
			public const string CustomerRoleIdName = "customerroleidname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PartnerId = "partnerid";
			public const string PartnerIdName = "partneridname";
			public const string PartnerIdYomiName = "partneridyominame";
			public const string PartnerRoleDescription = "partnerroledescription";
			public const string PartnerRoleId = "partnerroleid";
			public const string PartnerRoleIdName = "partnerroleidname";
			public const string VersionNumber = "versionnumber";
			public const string Referencedcustomer_relationship_converse_relationship = "Referencedcustomer_relationship_converse_relationship";
			public const string CustomerRelationship_AsyncOperations = "CustomerRelationship_AsyncOperations";
			public const string CustomerRelationship_BulkDeleteFailures = "CustomerRelationship_BulkDeleteFailures";
			public const string CustomerRelationship_ProcessSessions = "CustomerRelationship_ProcessSessions";
			public const string userentityinstancedata_customerrelationship = "userentityinstancedata_customerrelationship";
			public const string account_customer_relationship_customer = "account_customer_relationship_customer";
			public const string account_customer_relationship_partner = "account_customer_relationship_partner";
			public const string business_unit_customer_relationship = "business_unit_customer_relationship";
			public const string contact_customer_relationship_customer = "contact_customer_relationship_customer";
			public const string contact_customer_relationship_partner = "contact_customer_relationship_partner";
			public const string createdby_customer_relationship = "createdby_customer_relationship";
			public const string createdonbehalfby_customer_relationship = "createdonbehalfby_customer_relationship";
			public const string Referencingcustomer_relationship_converse_relationship = "customer_relationship_converse_relationship";
			public const string modifiedby_customer_relationship = "modifiedby_customer_relationship";
			public const string modifiedonbehalfby_customer_relationship = "modifiedonbehalfby_customer_relationship";
			public const string relationship_role_customer_role = "relationship_role_customer_role";
			public const string relationship_role_partner_role = "relationship_role_partner_role";
			public const string team_customer_relationship = "team_customer_relationship";
			public const string user_customer_relationship = "user_customer_relationship";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public CustomerRelationship() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "customerrelationship";
		
		public const string EntityLogicalCollectionName = "customerrelationships";
		
		public const string EntitySetName = "customerrelationships";
		
		public const int EntityTypeCode = 4502;
		
		/// <summary>
		/// Mã định danh duy nhất mối quan hệ nghịch đảo của mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("converserelationshipid")]
		public Microsoft.Xrm.Sdk.EntityReference ConverseRelationshipId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("converserelationshipid");
			}
			set
			{
				this.SetAttributeValue("converserelationshipid", value);
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Tên của người dùng đã tạo mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// YomiName của người dùng đã tạo mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo mối quan hệ khách hàng. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn tài khoản hoặc người liên hệ chính tham gia vào mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerid");
			}
			set
			{
				this.SetAttributeValue("customerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridname")]
		public string CustomerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customeridyominame")]
		public string CustomerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("customerid"))
				{
					return this.FormattedValues["customerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerrelationshipid")]
		public System.Nullable<System.Guid> CustomerRelationshipId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("customerrelationshipid");
			}
			set
			{
				this.SetAttributeValue("customerrelationshipid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerrelationshipid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.CustomerRelationshipId = value;
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung về vai trò của bên chính trong mối quan hệ khách hàng, chẳng hạn như độ dài hoặc chất lượng của mối quan hệ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerroledescription")]
		public string CustomerRoleDescription
		{
			get
			{
				return this.GetAttributeValue<string>("customerroledescription");
			}
			set
			{
				this.SetAttributeValue("customerroledescription", value);
			}
		}
		
		/// <summary>
		/// Chọn vai trò của bên chính hoặc đặc điểm của mối quan hệ khách hàng có với bên thứ hai. Trường này ở trạng thái chỉ đọc cho tới khi chọn cả hai bên. Quản trị viên có thể đặt cấu hình giá trị vai trò trong Quản lý Doanh nghiệp ở vùng Thiết đặt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerroleid")]
		public Microsoft.Xrm.Sdk.EntityReference CustomerRoleId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("customerroleid");
			}
			set
			{
				this.SetAttributeValue("customerroleid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerroleidname")]
		public string CustomerRoleIdName
		{
			get
			{
				if (this.FormattedValues.Contains("customerroleid"))
				{
					return this.FormattedValues["customerroleid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của quá trình nhập dữ liệu hoặc dịch chuyển dữ liệu đã tạo bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Tên của người dùng sửa đổi mối quan hệ khách hàng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// YomiName của người dùng sửa đổi mối quan hệ khách hàng lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ dịch chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Nhập người dùng hoặc nhóm được gán để quản lý bản ghi. Trường này sẽ cập nhật mỗi lần bản ghi được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên chủ sở hữu của mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu hoạt mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu hoạt mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Chọn tài khoản hoặc người liên hệ phụ tham gia vào mối quan hệ khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerid")]
		public Microsoft.Xrm.Sdk.EntityReference PartnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("partnerid");
			}
			set
			{
				this.SetAttributeValue("partnerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partneridname")]
		public string PartnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("partnerid"))
				{
					return this.FormattedValues["partnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partneridyominame")]
		public string PartnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("partnerid"))
				{
					return this.FormattedValues["partnerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung về vai trò của bên phụ trong mối quan hệ khách hàng, chẳng hạn như độ dài hoặc chất lượng của mối quan hệ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerroledescription")]
		public string PartnerRoleDescription
		{
			get
			{
				return this.GetAttributeValue<string>("partnerroledescription");
			}
			set
			{
				this.SetAttributeValue("partnerroledescription", value);
			}
		}
		
		/// <summary>
		/// Chọn vai trò của bên phụ hoặc đặc điểm của mối quan hệ khách hàng có với bên chính. Trường này ở trạng thái chỉ đọc cho tới khi chọn cả hai bên. Quản trị viên có thể đặt cấu hình giá trị vai trò trong Quản lý Doanh nghiệp ở vùng Thiết đặt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerroleid")]
		public Microsoft.Xrm.Sdk.EntityReference PartnerRoleId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("partnerroleid");
			}
			set
			{
				this.SetAttributeValue("partnerroleid", value);
			}
		}
		
		/// <summary>
		/// Tên vai trò của mối quan hệ của khách hàng thứ cấp.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerroleidname")]
		public string PartnerRoleIdName
		{
			get
			{
				if (this.FormattedValues.Contains("partnerroleid"))
				{
					return this.FormattedValues["partnerroleid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N customer_relationship_converse_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.CustomerRelationship> Referencedcustomer_relationship_converse_relationship
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.CustomerRelationship>("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.CustomerRelationship>("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
			}
		}
		
		/// <summary>
		/// 1:N CustomerRelationship_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CustomerRelationship_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> CustomerRelationship_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("CustomerRelationship_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("CustomerRelationship_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N CustomerRelationship_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CustomerRelationship_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> CustomerRelationship_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("CustomerRelationship_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("CustomerRelationship_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N CustomerRelationship_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CustomerRelationship_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> CustomerRelationship_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("CustomerRelationship_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("CustomerRelationship_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_customerrelationship
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_customerrelationship")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_customerrelationship
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_customerrelationship", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_customerrelationship", null, value);
			}
		}
		
		/// <summary>
		/// N:1 account_customer_relationship_customer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_customer_relationship_customer")]
		public Dev.DevKit.ProxyTypes.Account account_customer_relationship_customer
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_customer_relationship_customer", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_customer_relationship_customer", null, value);
			}
		}
		
		/// <summary>
		/// N:1 account_customer_relationship_partner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_customer_relationship_partner")]
		public Dev.DevKit.ProxyTypes.Account account_customer_relationship_partner
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_customer_relationship_partner", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_customer_relationship_partner", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_customer_relationship")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_relationship_customer
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_relationship_customer")]
		public Dev.DevKit.ProxyTypes.Contact contact_customer_relationship_customer
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_customer_relationship_customer", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_customer_relationship_customer", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_customer_relationship_partner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_customer_relationship_partner")]
		public Dev.DevKit.ProxyTypes.Contact contact_customer_relationship_partner
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_customer_relationship_partner", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_customer_relationship_partner", null, value);
			}
		}
		
		/// <summary>
		/// N:1 createdby_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("createdby_customer_relationship")]
		public Dev.DevKit.ProxyTypes.SystemUser createdby_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("createdby_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 createdonbehalfby_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("createdonbehalfby_customer_relationship")]
		public Dev.DevKit.ProxyTypes.SystemUser createdonbehalfby_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("createdonbehalfby_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 customer_relationship_converse_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("converserelationshipid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public Dev.DevKit.ProxyTypes.CustomerRelationship Referencingcustomer_relationship_converse_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.CustomerRelationship>("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.CustomerRelationship>("customer_relationship_converse_relationship", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
			}
		}
		
		/// <summary>
		/// N:1 modifiedby_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("modifiedby_customer_relationship")]
		public Dev.DevKit.ProxyTypes.SystemUser modifiedby_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("modifiedby_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 modifiedonbehalfby_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("modifiedonbehalfby_customer_relationship")]
		public Dev.DevKit.ProxyTypes.SystemUser modifiedonbehalfby_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("modifiedonbehalfby_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 relationship_role_customer_role
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("customerroleid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("relationship_role_customer_role")]
		public Dev.DevKit.ProxyTypes.RelationshipRole relationship_role_customer_role
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.RelationshipRole>("relationship_role_customer_role", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.RelationshipRole>("relationship_role_customer_role", null, value);
			}
		}
		
		/// <summary>
		/// N:1 relationship_role_partner_role
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partnerroleid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("relationship_role_partner_role")]
		public Dev.DevKit.ProxyTypes.RelationshipRole relationship_role_partner_role
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.RelationshipRole>("relationship_role_partner_role", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.RelationshipRole>("relationship_role_partner_role", null, value);
			}
		}
		
		/// <summary>
		/// N:1 team_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_customer_relationship")]
		public Dev.DevKit.ProxyTypes.Team team_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_customer_relationship", null);
			}
		}
		
		/// <summary>
		/// N:1 user_customer_relationship
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_customer_relationship")]
		public Dev.DevKit.ProxyTypes.SystemUser user_customer_relationship
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_customer_relationship", null);
			}
		}
	}
}
#pragma warning restore CS1591
