#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowrun_isprimary
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@true = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		@false = 0,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("flowrun")]
	public partial class flowrun : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the flowrun entity
		/// </summary>
		public partial class Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DurationInMs = "duration";
			public const string EndTime = "endtime";
			public const string ErrorCode = "errorcode";
			public const string ErrorMessage = "errormessage";
			public const string flowrunId = "flowrunid";
			public const string Id = "flowrunid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsPrimary = "isprimary";
			public const string isprimaryName = "isprimaryname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string parentRunId = "parentrunid";
			public const string PartitionId = "partitionid";
			public const string resourceId = "resourceid";
			public const string StartTime = "starttime";
			public const string Status = "status";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TriggerType = "triggertype";
			public const string TTLInSeconds = "ttlinseconds";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Workflow = "workflow";
			public const string WorkflowId = "workflowid";
			public const string WorkflowName = "workflowname";
			public const string flowrun_flowlog_cloudflowrunid = "flowrun_flowlog_cloudflowrunid";
			public const string business_unit_flowrun = "business_unit_flowrun";
			public const string lk_flowrun_createdby = "lk_flowrun_createdby";
			public const string lk_flowrun_createdonbehalfby = "lk_flowrun_createdonbehalfby";
			public const string lk_flowrun_modifiedby = "lk_flowrun_modifiedby";
			public const string lk_flowrun_modifiedonbehalfby = "lk_flowrun_modifiedonbehalfby";
			public const string team_flowrun = "team_flowrun";
			public const string user_flowrun = "user_flowrun";
			public const string workflow_flowrun_Workflow = "workflow_flowrun_Workflow";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public flowrun() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "flowrun";
		
		public const string EntityLogicalCollectionName = "flowruns";
		
		public const string EntitySetName = "flowruns";
		
		public const int EntityTypeCode = 10092;
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Duration of the run in milliseconds
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<long> DurationInMs
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("duration");
			}
			set
			{
				this.SetAttributeValue("duration", value);
			}
		}
		
		/// <summary>
		/// The date and time at which the flow run ended.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
		public System.Nullable<System.DateTime> EndTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
			}
			set
			{
				this.SetAttributeValue("endtime", value);
			}
		}
		
		/// <summary>
		/// Error code when flow run fails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errorcode")]
		public string ErrorCode
		{
			get
			{
				return this.GetAttributeValue<string>("errorcode");
			}
			set
			{
				this.SetAttributeValue("errorcode", value);
			}
		}
		
		/// <summary>
		/// Error message when flow run fails
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("errormessage")]
		public string ErrorMessage
		{
			get
			{
				return this.GetAttributeValue<string>("errormessage");
			}
			set
			{
				this.SetAttributeValue("errormessage", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of flow run
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowrunid")]
		public System.Nullable<System.Guid> flowrunId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("flowrunid");
			}
			set
			{
				this.SetAttributeValue("flowrunid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowrunid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.flowrunId = value;
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Primary run record indicator
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprimary")]
		public virtual flowrun_isprimary? IsPrimary
		{
			get
			{
				return ((flowrun_isprimary?)(EntityOptionSetEnum.GetEnum(this, "isprimary")));
			}
			set
			{
				this.SetAttributeValue("isprimary", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isprimaryname")]
		public string isprimaryName
		{
			get
			{
				if (this.FormattedValues.Contains("isprimary"))
				{
					return this.FormattedValues["isprimary"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the parent run that triggered this run
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentrunid")]
		public string parentRunId
		{
			get
			{
				return this.GetAttributeValue<string>("parentrunid");
			}
			set
			{
				this.SetAttributeValue("parentrunid", value);
			}
		}
		
		/// <summary>
		/// Logical partition id. A logical partition consists of a set of records with same partition id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partitionid")]
		public string PartitionId
		{
			get
			{
				return this.GetAttributeValue<string>("partitionid");
			}
			set
			{
				this.SetAttributeValue("partitionid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the runtime resource
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resourceid")]
		public string resourceId
		{
			get
			{
				return this.GetAttributeValue<string>("resourceid");
			}
			set
			{
				this.SetAttributeValue("resourceid", value);
			}
		}
		
		/// <summary>
		/// The date and time at which the flow run started
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
		public System.Nullable<System.DateTime> StartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
			}
			set
			{
				this.SetAttributeValue("starttime", value);
			}
		}
		
		/// <summary>
		/// Status of the flow run
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("status")]
		public string Status
		{
			get
			{
				return this.GetAttributeValue<string>("status");
			}
			set
			{
				this.SetAttributeValue("status", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Type of trigger in the flow run
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("triggertype")]
		public string TriggerType
		{
			get
			{
				return this.GetAttributeValue<string>("triggertype");
			}
			set
			{
				this.SetAttributeValue("triggertype", value);
			}
		}
		
		/// <summary>
		/// Time to live in seconds.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ttlinseconds")]
		public System.Nullable<int> TTLInSeconds
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ttlinseconds");
			}
			set
			{
				this.SetAttributeValue("ttlinseconds", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the workflow with which the flow run is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflow")]
		public Microsoft.Xrm.Sdk.EntityReference Workflow
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("workflow");
			}
			set
			{
				this.SetAttributeValue("workflow", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the workflow associated with this run
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public string WorkflowId
		{
			get
			{
				return this.GetAttributeValue<string>("workflowid");
			}
			set
			{
				this.SetAttributeValue("workflowid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowname")]
		public string WorkflowName
		{
			get
			{
				if (this.FormattedValues.Contains("workflow"))
				{
					return this.FormattedValues["workflow"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N flowrun_flowlog_cloudflowrunid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowrun_flowlog_cloudflowrunid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowlog> flowrun_flowlog_cloudflowrunid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowlog>("flowrun_flowlog_cloudflowrunid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowlog>("flowrun_flowlog_cloudflowrunid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_flowrun
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_flowrun")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_flowrun
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_flowrun", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowrun_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowrun_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowrun_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowrun_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowrun_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowrun_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowrun_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowrun_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowrun_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowrun_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowrun_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowrun_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowrun_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowrun_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowrun_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowrun_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_flowrun
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_flowrun")]
		public Dev.DevKit.ProxyTypes.Team team_flowrun
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_flowrun", null);
			}
		}
		
		/// <summary>
		/// N:1 user_flowrun
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_flowrun")]
		public Dev.DevKit.ProxyTypes.SystemUser user_flowrun
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_flowrun", null);
			}
		}
		
		/// <summary>
		/// N:1 workflow_flowrun_Workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflow")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflow_flowrun_Workflow")]
		public Dev.DevKit.ProxyTypes.Workflow workflow_flowrun_Workflow
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Workflow>("workflow_flowrun_Workflow", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Workflow>("workflow_flowrun_Workflow", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
