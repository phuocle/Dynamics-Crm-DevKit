#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại chênh lệch ruy băng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum ribbondiff_difftype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Chun = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tab = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mubcc = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nhnbnaha = 3,
	}
	
	/// <summary>
	/// Mọi tùy chỉnh bố cục để áp dụng cho ruy băng, chứa duy nhất các điểm khác biệt từ ruy băng cơ sở.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ribbondiff")]
	public partial class RibbonDiff : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the ribbondiff entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentState = "componentstate";
			public const string ContextGroupId = "contextgroupid";
			public const string DiffId = "diffid";
			public const string DiffType = "difftype";
			public const string Entity = "entity";
			public const string IsAppAware = "isappaware";
			public const string IsAppAwareName = "isappawarename";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string RDX = "rdx";
			public const string RibbonCustomizationId = "ribboncustomizationid";
			public const string RibbonDiffId = "ribbondiffid";
			public const string Id = "ribbondiffid";
			public const string RibbonDiffUniqueId = "ribbondiffuniqueid";
			public const string Sequence = "sequence";
			public const string SolutionId = "solutionid";
			public const string TabId = "tabid";
			public const string VersionNumber = "versionnumber";
			public const string userentityinstancedata_ribbondiff = "userentityinstancedata_ribbondiff";
			public const string organization_ribbon_diff = "organization_ribbon_diff";
			public const string RibbonCustomization_RibbonDiff = "RibbonCustomization_RibbonDiff";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public RibbonDiff() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ribbondiff";
		
		public const string EntityLogicalCollectionName = "ribbondiffs";
		
		public const string EntitySetName = "ribbondiffs";
		
		public const int EntityTypeCode = 1130;
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm bối cảnh dành cho thẻ này. Nếu định nghĩa thẻ này thêm thẻ mới thì nó là thẻ ngữ cảnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("contextgroupid")]
		public System.Nullable<System.Guid> ContextGroupId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("contextgroupid");
			}
			set
			{
				this.SetAttributeValue("contextgroupid", value);
			}
		}
		
		/// <summary>
		/// ID chuỗi của định nghĩa ruy băng này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("diffid")]
		public string DiffId
		{
			get
			{
				return this.GetAttributeValue<string>("diffid");
			}
			set
			{
				this.SetAttributeValue("diffid", value);
			}
		}
		
		/// <summary>
		/// Chỉ định loại định nghĩa ruy băng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("difftype")]
		public virtual ribbondiff_difftype? DiffType
		{
			get
			{
				return ((ribbondiff_difftype?)(EntityOptionSetEnum.GetEnum(this, "difftype")));
			}
		}
		
		/// <summary>
		/// Hệ thống sẽ xuất thực thể áp dụng quy tắc này, cũng là thực thể nhập quy tắc này từ đó.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entity")]
		public string Entity
		{
			get
			{
				return this.GetAttributeValue<string>("entity");
			}
			set
			{
				this.SetAttributeValue("entity", value);
			}
		}
		
		/// <summary>
		/// Thông tin về khả năng ribbondiff có được liên kết với mô-đun ứng dụng hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappaware")]
		public System.Nullable<bool> IsAppAware
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappaware");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappawarename")]
		public string IsAppAwareName
		{
			get
			{
				if (this.FormattedValues.Contains("isappaware"))
				{
					return this.FormattedValues["isappaware"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tổ chức.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Chuỗi XML của định nghĩa ruy băng, chứa một hành động thay đổi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rdx")]
		public string RDX
		{
			get
			{
				return this.GetAttributeValue<string>("rdx");
			}
			set
			{
				this.SetAttributeValue("rdx", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tùy chỉnh ruy băng có liên kết với lệnh trên ruy băng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribboncustomizationid")]
		public Microsoft.Xrm.Sdk.EntityReference RibbonCustomizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ribboncustomizationid");
			}
			set
			{
				this.SetAttributeValue("ribboncustomizationid", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribbondiffid")]
		public System.Nullable<System.Guid> RibbonDiffId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ribbondiffid");
			}
			set
			{
				this.SetAttributeValue("ribbondiffid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribbondiffid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.RibbonDiffId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của biểu mẫu được sử dụng khi đồng bộ các tùy chỉnh cho ứng dụng khách Microsoft Dynamics 365 dành cho Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribbondiffuniqueid")]
		public System.Nullable<System.Guid> RibbonDiffUniqueId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ribbondiffuniqueid");
			}
		}
		
		/// <summary>
		/// Trình tự áp dụng định nghĩa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sequence")]
		public System.Nullable<int> Sequence
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("sequence");
			}
			set
			{
				this.SetAttributeValue("sequence", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// ID của thẻ áp dụng định nghĩa này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tabid")]
		public string TabId
		{
			get
			{
				return this.GetAttributeValue<string>("tabid");
			}
			set
			{
				this.SetAttributeValue("tabid", value);
			}
		}
		
		/// <summary>
		/// Cho biết phiên bản của các tùy chỉnh sẽ được đồng bộ với ứng dụng khách Microsoft Dynamics 365 dành cho Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_ribbondiff
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_ribbondiff")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_ribbondiff
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_ribbondiff", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_ribbondiff", null, value);
			}
		}
		
		/// <summary>
		/// N:1 organization_ribbon_diff
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_ribbon_diff")]
		public Dev.DevKit.ProxyTypes.Organization organization_ribbon_diff
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_ribbon_diff", null);
			}
		}
		
		/// <summary>
		/// N:1 RibbonCustomization_RibbonDiff
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribboncustomizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RibbonCustomization_RibbonDiff")]
		public Dev.DevKit.ProxyTypes.RibbonCustomization RibbonCustomization_RibbonDiff
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.RibbonCustomization>("RibbonCustomization_RibbonDiff", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.RibbonCustomization>("RibbonCustomization_RibbonDiff", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
