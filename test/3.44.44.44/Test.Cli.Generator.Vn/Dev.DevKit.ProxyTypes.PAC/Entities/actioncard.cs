#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Nguồn thẻ hành động.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum actioncard_source
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CRM = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange = 2,
	}
	
	/// <summary>
	/// Trạng thái thẻ hành động.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum actioncard_state
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loib = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		honthnh = 2,
	}
	
	/// <summary>
	/// Thực thể thẻ hành động để hiển thị các thẻ hành động.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("actioncard")]
	public partial class ActionCard : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the actioncard entity
		/// </summary>
		public partial class Fields
		{
			public const string ActionCardId = "actioncardid";
			public const string Id = "actioncardid";
			public const string CardType = "cardtype";
			public const string CardTypeId = "cardtypeid";
			public const string CardTypeIdName = "cardtypeidname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Data = "data";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string ExpiryDate = "expirydate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentRegardingObjectId = "parentregardingobjectid";
			public const string ParentRegardingObjectIdData = "parentregardingobjectiddata";
			public const string Priority = "priority";
			public const string RecordId = "recordid";
			public const string RecordIdName = "recordidname";
			public const string RecordIdObjectTypeCode2 = "recordidobjecttypecode2";
			public const string ReferenceTokens = "referencetokens";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectIdName = "regardingobjectidname";
			public const string Source = "source";
			public const string SourceName = "sourcename";
			public const string StartDate = "startdate";
			public const string State = "state";
			public const string StateName = "statename";
			public const string Title = "title";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
			public const string Visibility = "visibility";
			public const string VisibilityName = "visibilityname";
			public const string ActionCardUserState_ActionCard = "ActionCardUserState_ActionCard";
			public const string account_actioncard = "account_actioncard";
			public const string adx_inviteredemption_ActionCards = "adx_inviteredemption_ActionCards";
			public const string adx_portalcomment_ActionCards = "adx_portalcomment_ActionCards";
			public const string appointment_actioncard = "appointment_actioncard";
			public const string business_unit_actioncards = "business_unit_actioncards";
			public const string cardtype_actioncard = "cardtype_actioncard";
			public const string chat_ActionCards = "chat_ActionCards";
			public const string contact_actioncard = "contact_actioncard";
			public const string email_actioncard = "email_actioncard";
			public const string fax_actioncard = "fax_actioncard";
			public const string letter_actioncard = "letter_actioncard";
			public const string lk_actioncardbase_createdby = "lk_actioncardbase_createdby";
			public const string lk_actioncardbase_createdonbehalfby = "lk_actioncardbase_createdonbehalfby";
			public const string lk_actioncardbase_modifiedby = "lk_actioncardbase_modifiedby";
			public const string lk_actioncardbase_modifiedonbehalfby = "lk_actioncardbase_modifiedonbehalfby";
			public const string phonecall_actioncard = "phonecall_actioncard";
			public const string recurringappointmentmaster_actioncard = "recurringappointmentmaster_actioncard";
			public const string task_actioncard = "task_actioncard";
			public const string transactioncurrency_actioncard = "transactioncurrency_actioncard";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ActionCard() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "actioncard";
		
		public const string EntityLogicalCollectionName = "actioncard";
		
		public const string EntitySetName = "actioncards";
		
		/// <summary>
		/// Mã định danh duy nhất của thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		public System.Nullable<System.Guid> ActionCardId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("actioncardid");
			}
			set
			{
				this.SetAttributeValue("actioncardid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActionCardId = value;
			}
		}
		
		/// <summary>
		/// Giá trị CardType ENUM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtype")]
		public System.Nullable<int> CardType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cardtype");
			}
			set
			{
				this.SetAttributeValue("cardtype", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của loại thẻ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public Microsoft.Xrm.Sdk.EntityReference CardTypeId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("cardtypeid");
			}
			set
			{
				this.SetAttributeValue("cardtypeid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeidname")]
		public string CardTypeIdName
		{
			get
			{
				if (this.FormattedValues.Contains("cardtypeid"))
				{
					return this.FormattedValues["cardtypeid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chuỗi theo định dạng Json dành cho mục đích chung.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("data")]
		public string Data
		{
			get
			{
				return this.GetAttributeValue<string>("data");
			}
			set
			{
				this.SetAttributeValue("data", value);
			}
		}
		
		/// <summary>
		/// Mô tả Thẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền đã liên kết với thẻ hành động theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Hiển thị Ngày Hết hạn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expirydate")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expirydate");
			}
			set
			{
				this.SetAttributeValue("expirydate", value);
			}
		}
		
		/// <summary>
		/// Số thứ tự của quá trình nhập tạo ra bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi thẻ hành động lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi thẻ hành động lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi thẻ hành động lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// ParentRegardingObjectId của ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentregardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentRegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentregardingobjectid");
			}
			set
			{
				this.SetAttributeValue("parentregardingobjectid", value);
			}
		}
		
		/// <summary>
		/// Chuỗi theo định dạng Json dành cho đối tượng bản lưu ý chính.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentregardingobjectiddata")]
		public string ParentRegardingObjectIdData
		{
			get
			{
				return this.GetAttributeValue<string>("parentregardingobjectiddata");
			}
			set
			{
				this.SetAttributeValue("parentregardingobjectiddata", value);
			}
		}
		
		/// <summary>
		/// Mức ưu tiên của ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("priority")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("priority");
			}
			set
			{
				this.SetAttributeValue("priority", value);
			}
		}
		
		/// <summary>
		/// Hiển thị ID bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordid")]
		public Microsoft.Xrm.Sdk.EntityReference RecordId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("recordid");
			}
			set
			{
				this.SetAttributeValue("recordid", value);
			}
		}
		
		/// <summary>
		/// Hiển thị tên ID bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordidname")]
		public string RecordIdName
		{
			get
			{
				if (this.FormattedValues.Contains("recordid"))
				{
					return this.FormattedValues["recordid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// RecordIdObjectTypeCode2 của Thẻ Hành động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordidobjecttypecode2")]
		public System.Nullable<int> RecordIdObjectTypeCode2
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("recordidobjecttypecode2");
			}
			set
			{
				this.SetAttributeValue("recordidobjecttypecode2", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("referencetokens")]
		public string ReferenceTokens
		{
			get
			{
				return this.GetAttributeValue<string>("referencetokens");
			}
			set
			{
				this.SetAttributeValue("referencetokens", value);
			}
		}
		
		/// <summary>
		/// Chọn bản ghi liên quan đến thẻ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			set
			{
				this.SetAttributeValue("regardingobjectid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectidname")]
		public string RegardingObjectIdName
		{
			get
			{
				if (this.FormattedValues.Contains("regardingobjectid"))
				{
					return this.FormattedValues["regardingobjectid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("regardingobjectidname", value);
			}
		}
		
		/// <summary>
		/// Nguồn cho Thẻ Hành động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("source")]
		public virtual actioncard_source? Source
		{
			get
			{
				return ((actioncard_source?)(EntityOptionSetEnum.GetEnum(this, "source")));
			}
			set
			{
				this.SetAttributeValue("source", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcename")]
		public string SourceName
		{
			get
			{
				if (this.FormattedValues.Contains("source"))
				{
					return this.FormattedValues["source"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị Ngày Bắt đầu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdate");
			}
			set
			{
				this.SetAttributeValue("startdate", value);
			}
		}
		
		/// <summary>
		/// Trạng thái của Thẻ Hành động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("state")]
		public virtual actioncard_state? State
		{
			get
			{
				return ((actioncard_state?)(EntityOptionSetEnum.GetEnum(this, "state")));
			}
			set
			{
				this.SetAttributeValue("state", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statename")]
		public string StateName
		{
			get
			{
				if (this.FormattedValues.Contains("state"))
				{
					return this.FormattedValues["state"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tiêu đề của ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của loại tiền liên kết với thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số phiên bản của thẻ hành động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Chọn đặt khả năng hiển thị là công khai/riêng tư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visibility")]
		public System.Nullable<bool> Visibility
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("visibility");
			}
			set
			{
				this.SetAttributeValue("visibility", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("visibilityname")]
		public string VisibilityName
		{
			get
			{
				if (this.FormattedValues.Contains("visibility"))
				{
					return this.FormattedValues["visibility"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N ActionCardUserState_ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ActionCardUserState_ActionCard")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActionCardUserState> ActionCardUserState_ActionCard
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCardUserState>("ActionCardUserState_ActionCard", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCardUserState>("ActionCardUserState_ActionCard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 account_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("account_actioncard")]
		public Dev.DevKit.ProxyTypes.Account account_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Account>("account_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 adx_inviteredemption_ActionCards
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_inviteredemption_ActionCards")]
		public Dev.DevKit.ProxyTypes.adx_inviteredemption adx_inviteredemption_ActionCards
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.adx_inviteredemption>("adx_inviteredemption_ActionCards", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.adx_inviteredemption>("adx_inviteredemption_ActionCards", null, value);
			}
		}
		
		/// <summary>
		/// N:1 adx_portalcomment_ActionCards
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_portalcomment_ActionCards")]
		public Dev.DevKit.ProxyTypes.adx_portalcomment adx_portalcomment_ActionCards
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.adx_portalcomment>("adx_portalcomment_ActionCards", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.adx_portalcomment>("adx_portalcomment_ActionCards", null, value);
			}
		}
		
		/// <summary>
		/// N:1 appointment_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("appointment_actioncard")]
		public Dev.DevKit.ProxyTypes.Appointment appointment_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Appointment>("appointment_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Appointment>("appointment_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_actioncards
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_actioncards")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_actioncards
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_actioncards", null);
			}
		}
		
		/// <summary>
		/// N:1 cardtype_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncard")]
		public Dev.DevKit.ProxyTypes.CardType cardtype_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.CardType>("cardtype_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.CardType>("cardtype_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 chat_ActionCards
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("chat_ActionCards")]
		public Dev.DevKit.ProxyTypes.chat chat_ActionCards
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.chat>("chat_ActionCards", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.chat>("chat_ActionCards", null, value);
			}
		}
		
		/// <summary>
		/// N:1 contact_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("contact_actioncard")]
		public Dev.DevKit.ProxyTypes.Contact contact_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Contact>("contact_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 email_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("email_actioncard")]
		public Dev.DevKit.ProxyTypes.Email email_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Email>("email_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Email>("email_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 fax_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("fax_actioncard")]
		public Dev.DevKit.ProxyTypes.Fax fax_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Fax>("fax_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Fax>("fax_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 letter_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("letter_actioncard")]
		public Dev.DevKit.ProxyTypes.Letter letter_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Letter>("letter_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Letter>("letter_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_actioncardbase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_actioncardbase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_actioncardbase_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_actioncardbase_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_actioncardbase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_actioncardbase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_actioncardbase_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_actioncardbase_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_actioncardbase_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_actioncardbase_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 phonecall_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("phonecall_actioncard")]
		public Dev.DevKit.ProxyTypes.PhoneCall phonecall_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.PhoneCall>("phonecall_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.PhoneCall>("phonecall_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 recurringappointmentmaster_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_actioncard")]
		public Dev.DevKit.ProxyTypes.RecurringAppointmentMaster recurringappointmentmaster_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster>("recurringappointmentmaster_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.RecurringAppointmentMaster>("recurringappointmentmaster_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 task_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("task_actioncard")]
		public Dev.DevKit.ProxyTypes.Task task_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Task>("task_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Task>("task_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 transactioncurrency_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_actioncard")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency transactioncurrency_actioncard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("transactioncurrency_actioncard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("transactioncurrency_actioncard", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
