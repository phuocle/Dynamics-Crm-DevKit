#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Most recently used data table.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recentlyused")]
	public partial class recentlyused : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the recentlyused entity
		/// </summary>
		public partial class Fields
		{
			public const string AppId = "appid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ImageUrl = "imageurl";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string LastAccessed = "lastaccessed";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string ObjectId = "objectid";
			public const string ObjectPartitionId = "objectpartitionid";
			public const string ObjectType = "objecttype";
			public const string ObjectTypeDisplayName = "objecttypedisplayname";
			public const string ObjectTypeId = "objecttypeid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PartitionId = "partitionid";
			public const string recentlyusedId = "recentlyusedid";
			public const string Id = "recentlyusedid";
			public const string RecordUrl = "recordurl";
			public const string SubTitle = "subtitle";
			public const string Title = "title";
			public const string TTLInSeconds = "ttlinseconds";
			public const string UserId = "userid";
			public const string VersionNumber = "versionnumber";
			public const string business_unit_recentlyused = "business_unit_recentlyused";
			public const string lk_recentlyused_createdby = "lk_recentlyused_createdby";
			public const string lk_recentlyused_createdonbehalfby = "lk_recentlyused_createdonbehalfby";
			public const string lk_recentlyused_modifiedby = "lk_recentlyused_modifiedby";
			public const string lk_recentlyused_modifiedonbehalfby = "lk_recentlyused_modifiedonbehalfby";
			public const string team_recentlyused = "team_recentlyused";
			public const string user_recentlyused = "user_recentlyused";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public recentlyused() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recentlyused";
		
		public const string EntityLogicalCollectionName = "recentlyuseds";
		
		public const string EntitySetName = "recentlyused";
		
		public const int EntityTypeCode = 5000;
		
		/// <summary>
		/// Source application Identifier for MRU record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("appid")]
		public string AppId
		{
			get
			{
				return this.GetAttributeValue<string>("appid");
			}
			set
			{
				this.SetAttributeValue("appid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Entity image url
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("imageurl")]
		public string ImageUrl
		{
			get
			{
				return this.GetAttributeValue<string>("imageurl");
			}
			set
			{
				this.SetAttributeValue("imageurl", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Date and time when entity was accessed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastaccessed")]
		public System.Nullable<System.DateTime> LastAccessed
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastaccessed");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The name of the custom entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Object instance Identifier
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		public string ObjectId
		{
			get
			{
				return this.GetAttributeValue<string>("objectid");
			}
			set
			{
				this.SetAttributeValue("objectid", value);
			}
		}
		
		/// <summary>
		/// Logical object partition id to be used by an elastic table row.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectpartitionid")]
		public string ObjectPartitionId
		{
			get
			{
				return this.GetAttributeValue<string>("objectpartitionid");
			}
			set
			{
				this.SetAttributeValue("objectpartitionid", value);
			}
		}
		
		/// <summary>
		/// Identifies the type of entity
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttype")]
		public string ObjectType
		{
			get
			{
				return this.GetAttributeValue<string>("objecttype");
			}
			set
			{
				this.SetAttributeValue("objecttype", value);
			}
		}
		
		/// <summary>
		/// Friendly name for the object
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttypedisplayname")]
		public string ObjectTypeDisplayName
		{
			get
			{
				return this.GetAttributeValue<string>("objecttypedisplayname");
			}
			set
			{
				this.SetAttributeValue("objecttypedisplayname", value);
			}
		}
		
		/// <summary>
		/// Object Type Identifier (OTC)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttypeid")]
		public string ObjectTypeId
		{
			get
			{
				return this.GetAttributeValue<string>("objecttypeid");
			}
			set
			{
				this.SetAttributeValue("objecttypeid", value);
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Logical partition id. A logical partition consists of a set of records with same partition id.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("partitionid")]
		public string PartitionId
		{
			get
			{
				return this.GetAttributeValue<string>("partitionid");
			}
			set
			{
				this.SetAttributeValue("partitionid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recentlyusedid")]
		public System.Nullable<System.Guid> recentlyusedId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("recentlyusedid");
			}
			set
			{
				this.SetAttributeValue("recentlyusedid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recentlyusedid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.recentlyusedId = value;
			}
		}
		
		/// <summary>
		/// Entity record external url
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordurl")]
		public string RecordUrl
		{
			get
			{
				return this.GetAttributeValue<string>("recordurl");
			}
			set
			{
				this.SetAttributeValue("recordurl", value);
			}
		}
		
		/// <summary>
		/// Entity subtitle value
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subtitle")]
		public string SubTitle
		{
			get
			{
				return this.GetAttributeValue<string>("subtitle");
			}
			set
			{
				this.SetAttributeValue("subtitle", value);
			}
		}
		
		/// <summary>
		/// Entity title
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("title")]
		public string Title
		{
			get
			{
				return this.GetAttributeValue<string>("title");
			}
			set
			{
				this.SetAttributeValue("title", value);
			}
		}
		
		/// <summary>
		/// Time to live in seconds.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ttlinseconds")]
		public System.Nullable<int> TTLInSeconds
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("ttlinseconds");
			}
			set
			{
				this.SetAttributeValue("ttlinseconds", value);
			}
		}
		
		/// <summary>
		/// AAD User Identifier
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userid")]
		public string UserId
		{
			get
			{
				return this.GetAttributeValue<string>("userid");
			}
			set
			{
				this.SetAttributeValue("userid", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_recentlyused
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_recentlyused")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_recentlyused
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_recentlyused", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recentlyused_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recentlyused_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recentlyused_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recentlyused_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recentlyused_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recentlyused_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recentlyused_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recentlyused_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recentlyused_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recentlyused_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recentlyused_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recentlyused_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recentlyused_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recentlyused_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_recentlyused_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_recentlyused_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_recentlyused
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_recentlyused")]
		public Dev.DevKit.ProxyTypes.Team team_recentlyused
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_recentlyused", null);
			}
		}
		
		/// <summary>
		/// N:1 user_recentlyused
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_recentlyused")]
		public Dev.DevKit.ProxyTypes.SystemUser user_recentlyused
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_recentlyused", null);
			}
		}
	}
}
#pragma warning restore CS1591
