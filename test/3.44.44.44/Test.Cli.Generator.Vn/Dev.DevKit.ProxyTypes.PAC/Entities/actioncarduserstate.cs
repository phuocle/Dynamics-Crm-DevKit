#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Trạng thái người dùng thẻ hành động.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum actioncarduserstate_state
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		loib = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		honthnh = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("actioncarduserstate")]
	public partial class ActionCardUserState : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the actioncarduserstate entity
		/// </summary>
		public partial class Fields
		{
			public const string ActionCardId = "actioncardid";
			public const string ActionCardIdName = "actioncardidname";
			public const string ActionCardUserStateId = "actioncarduserstateid";
			public const string Id = "actioncarduserstateid";
			public const string ExchangeRate = "exchangerate";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string StartDate = "startdate";
			public const string State = "state";
			public const string StateName = "statename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string ActionCardUserState_ActionCard = "ActionCardUserState_ActionCard";
			public const string TransactionCurrency_ActionCardUserState = "TransactionCurrency_ActionCardUserState";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ActionCardUserState() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "actioncarduserstate";
		
		public const string EntityLogicalCollectionName = "actioncarduserstates";
		
		public const string EntitySetName = "actioncarduserstates";
		
		public const int EntityTypeCode = 9968;
		
		/// <summary>
		/// ID ActionCard Mẹ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		public Microsoft.Xrm.Sdk.EntityReference ActionCardId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("actioncardid");
			}
			set
			{
				this.SetAttributeValue("actioncardid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardidname")]
		public string ActionCardIdName
		{
			get
			{
				if (this.FormattedValues.Contains("actioncardid"))
				{
					return this.FormattedValues["actioncardid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("actioncardidname", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncarduserstateid")]
		public System.Nullable<System.Guid> ActionCardUserStateId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("actioncarduserstateid");
			}
			set
			{
				this.SetAttributeValue("actioncarduserstateid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncarduserstateid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ActionCardUserStateId = value;
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền được liên kết với ActionCardUserState theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu trạng thái của thẻ hành động này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bộ phận kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Hiển thị Ngày Bắt đầu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("startdate")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("startdate");
			}
			set
			{
				this.SetAttributeValue("startdate", value);
			}
		}
		
		/// <summary>
		/// Trạng thái của Thẻ Hành động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("state")]
		public virtual actioncarduserstate_state? State
		{
			get
			{
				return ((actioncarduserstate_state?)(EntityOptionSetEnum.GetEnum(this, "state")));
			}
			set
			{
				this.SetAttributeValue("state", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statename")]
		public string StateName
		{
			get
			{
				if (this.FormattedValues.Contains("state"))
				{
					return this.FormattedValues["state"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền được liên kết với ActionCardUserState theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// N:1 ActionCardUserState_ActionCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actioncardid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ActionCardUserState_ActionCard")]
		public Dev.DevKit.ProxyTypes.ActionCard ActionCardUserState_ActionCard
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ActionCard>("ActionCardUserState_ActionCard", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ActionCard>("ActionCardUserState_ActionCard", null, value);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_ActionCardUserState
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ActionCardUserState")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_ActionCardUserState
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ActionCardUserState", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ActionCardUserState", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
