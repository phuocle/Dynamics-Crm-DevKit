#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Phiên bản của định dạng Microsoft Office Word XML mà mẫu sử dụng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailmergetemplate_documentformat
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2003 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		_2007 = 2,
	}
	
	/// <summary>
	/// Danh sách thả xuống để chọn loại trộn thư.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailmergetemplate_mailmergetype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thtn = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Email = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phongb = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nhn = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bogi = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Fax = 6,
	}
	
	/// <summary>
	/// Trạng thái của mẫu trộn thư.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailmergetemplate_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của mẫu trộn thư.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum mailmergetemplate_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghotng = 2,
	}
	
	/// <summary>
	/// Mẫu cho tài liệu trộn thư có chứa các thuộc tính chuẩn của tài liệu đó.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("mailmergetemplate")]
	public partial class MailMergeTemplate : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the mailmergetemplate entity
		/// </summary>
		public partial class Fields
		{
			public const string Body = "body";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DefaultFilter = "defaultfilter";
			public const string Description = "description";
			public const string DocumentFormat = "documentformat";
			public const string DocumentFormatName = "documentformatname";
			public const string ExchangeRate = "exchangerate";
			public const string FileName = "filename";
			public const string FileSize = "filesize";
			public const string IntroducedVersion = "introducedversion";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string IsPersonal = "ispersonal";
			public const string IsPersonalName = "ispersonalname";
			public const string LanguageCode = "languagecode";
			public const string MailMergeTemplateId = "mailmergetemplateid";
			public const string Id = "mailmergetemplateid";
			public const string MailMergeTemplateIdUnique = "mailmergetemplateidunique";
			public const string MailMergeType = "mailmergetype";
			public const string MailMergeTypeName = "mailmergetypename";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParameterXml = "parameterxml";
			public const string SolutionId = "solutionid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TemplateTypeCode = "templatetypecode";
			public const string TemplateTypeCodeName = "templatetypecodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string MailMergeTemplate_AsyncOperations = "MailMergeTemplate_AsyncOperations";
			public const string mailmergetemplate_principalobjectattributeaccess = "mailmergetemplate_principalobjectattributeaccess";
			public const string MailMergeTemplate_ProcessSessions = "MailMergeTemplate_ProcessSessions";
			public const string MailMergeTemplate_SyncErrors = "MailMergeTemplate_SyncErrors";
			public const string userentityinstancedata_mailmergetemplate = "userentityinstancedata_mailmergetemplate";
			public const string business_unit_mailmergetemplates = "business_unit_mailmergetemplates";
			public const string lk_mailmergetemplate_createdonbehalfby = "lk_mailmergetemplate_createdonbehalfby";
			public const string lk_mailmergetemplate_modifiedonbehalfby = "lk_mailmergetemplate_modifiedonbehalfby";
			public const string lk_mailmergetemplatebase_createdby = "lk_mailmergetemplatebase_createdby";
			public const string lk_mailmergetemplatebase_modifiedby = "lk_mailmergetemplatebase_modifiedby";
			public const string TransactionCurrency_MailMergeTemplate = "TransactionCurrency_MailMergeTemplate";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public MailMergeTemplate() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "mailmergetemplate";
		
		public const string EntityLogicalCollectionName = "mailmergetemplates";
		
		public const string EntitySetName = "mailmergetemplates";
		
		public const int EntityTypeCode = 9106;
		
		/// <summary>
		/// Nội dung của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("body")]
		public string Body
		{
			get
			{
				return this.GetAttributeValue<string>("body");
			}
			set
			{
				this.SetAttributeValue("body", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo mailmergetemplate.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Trường dữ liệu mặc định được liên kết với mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultfilter")]
		public string DefaultFilter
		{
			get
			{
				return this.GetAttributeValue<string>("defaultfilter");
			}
			set
			{
				this.SetAttributeValue("defaultfilter", value);
			}
		}
		
		/// <summary>
		/// Mô tả về mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Phiên bản của định dạng Microsoft Office Word XML mà mẫu sử dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentformat")]
		public virtual mailmergetemplate_documentformat? DocumentFormat
		{
			get
			{
				return ((mailmergetemplate_documentformat?)(EntityOptionSetEnum.GetEnum(this, "documentformat")));
			}
			set
			{
				this.SetAttributeValue("documentformat", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("documentformatname")]
		public string DocumentFormatName
		{
			get
			{
				if (this.FormattedValues.Contains("documentformat"))
				{
					return this.FormattedValues["documentformat"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với mailmergetemplate theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Tên tệp của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filename")]
		public string FileName
		{
			get
			{
				return this.GetAttributeValue<string>("filename");
			}
			set
			{
				this.SetAttributeValue("filename", value);
			}
		}
		
		/// <summary>
		/// Kích thước tệp của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("filesize")]
		public System.Nullable<int> FileSize
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("filesize");
			}
		}
		
		/// <summary>
		/// Phiên bản có biểu mẫu được giới thiệu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Thông tin cho biết liệu có thể tùy chỉnh thành phần này hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Cho biết thành phần giải pháp có là một phần của giải pháp được quản lý hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc mẫu trộn thư ở chế độ cá nhân hay có sẵn cho tất cả người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispersonal")]
		public System.Nullable<bool> IsPersonal
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispersonal");
			}
			set
			{
				this.SetAttributeValue("ispersonal", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispersonalname")]
		public string IsPersonalName
		{
			get
			{
				if (this.FormattedValues.Contains("ispersonal"))
				{
					return this.FormattedValues["ispersonal"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngôn ngữ của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languagecode")]
		public System.Nullable<int> LanguageCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languagecode");
			}
			set
			{
				this.SetAttributeValue("languagecode", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailmergetemplateid")]
		public System.Nullable<System.Guid> MailMergeTemplateId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("mailmergetemplateid");
			}
			set
			{
				this.SetAttributeValue("mailmergetemplateid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailmergetemplateid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.MailMergeTemplateId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailmergetemplateidunique")]
		public System.Nullable<System.Guid> MailMergeTemplateIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("mailmergetemplateidunique");
			}
		}
		
		/// <summary>
		/// Danh sách thả xuống để chọn loại trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailmergetype")]
		public virtual mailmergetemplate_mailmergetype? MailMergeType
		{
			get
			{
				return ((mailmergetemplate_mailmergetype?)(EntityOptionSetEnum.GetEnum(this, "mailmergetype")));
			}
			set
			{
				this.SetAttributeValue("mailmergetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mailmergetypename")]
		public string MailMergeTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("mailmergetype"))
				{
					return this.FormattedValues["mailmergetype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại MIME của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("mimetype")]
		public string MimeType
		{
			get
			{
				return this.GetAttributeValue<string>("mimetype");
			}
			set
			{
				this.SetAttributeValue("mimetype", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi mẫu trộn thư lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi mẫu trộn thư lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi mailmergetemplate lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bơn vị kinh doanh sở hữu mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Tham số Xml.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parameterxml")]
		public string ParameterXml
		{
			get
			{
				return this.GetAttributeValue<string>("parameterxml");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual mailmergetemplate_statecode? StateCode
		{
			get
			{
				return ((mailmergetemplate_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual mailmergetemplate_statuscode? StatusCode
		{
			get
			{
				return ((mailmergetemplate_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Loại mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templatetypecode")]
		public string TemplateTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("templatetypecode");
			}
			set
			{
				this.SetAttributeValue("templatetypecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("templatetypecodename")]
		public string TemplateTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("templatetypecode"))
				{
					return this.FormattedValues["templatetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của loại tiền liên kết với mailmergetemplate.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của mẫu trộn thư.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N MailMergeTemplate_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("MailMergeTemplate_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> MailMergeTemplate_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("MailMergeTemplate_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("MailMergeTemplate_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N mailmergetemplate_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailmergetemplate_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> mailmergetemplate_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("mailmergetemplate_principalobjectattributeaccess", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("mailmergetemplate_principalobjectattributeaccess", null, value);
			}
		}
		
		/// <summary>
		/// 1:N MailMergeTemplate_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("MailMergeTemplate_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> MailMergeTemplate_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("MailMergeTemplate_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("MailMergeTemplate_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N MailMergeTemplate_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("MailMergeTemplate_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> MailMergeTemplate_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("MailMergeTemplate_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("MailMergeTemplate_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_mailmergetemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_mailmergetemplate")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_mailmergetemplate
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_mailmergetemplate", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_mailmergetemplate", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_mailmergetemplates
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_mailmergetemplates")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_mailmergetemplates
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_mailmergetemplates", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailmergetemplate_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailmergetemplate_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailmergetemplate_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailmergetemplate_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailmergetemplate_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailmergetemplate_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailmergetemplate_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailmergetemplate_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailmergetemplatebase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailmergetemplatebase_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailmergetemplatebase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailmergetemplatebase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_mailmergetemplatebase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_mailmergetemplatebase_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_mailmergetemplatebase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_mailmergetemplatebase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_MailMergeTemplate
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_MailMergeTemplate")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_MailMergeTemplate
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_MailMergeTemplate", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_MailMergeTemplate", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
