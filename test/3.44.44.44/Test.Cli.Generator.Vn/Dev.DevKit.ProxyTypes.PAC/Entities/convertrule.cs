#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại nguồn.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum converttorule_sourcetype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Gimstmngxhi = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Email = 2,
	}
	
	/// <summary>
	/// Trạng thái của Quy tắc Chuyển đổi.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum convertrule_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Draft = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
	}
	
	/// <summary>
	/// Lý do cho trạng thái của Quy tắc Chuyển đổi
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum convertrule_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bnnhp = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 2,
	}
	
	/// <summary>
	/// Xác định thiết đặt để tạo bản ghi tự động.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("convertrule")]
	public partial class ConvertRule : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the convertrule entity
		/// </summary>
		public partial class Fields
		{
			public const string AllowUnknownSender = "allowunknownsender";
			public const string AllowUnknownSenderName = "allowunknownsendername";
			public const string ChannelPropertyGroupId = "channelpropertygroupid";
			public const string ChannelPropertyGroupIdName = "channelpropertygroupidname";
			public const string CheckActiveEntitlement = "checkactiveentitlement";
			public const string CheckActiveEntitlementName = "checkactiveentitlementname";
			public const string CheckBlockedSocialProfile = "checkblockedsocialprofile";
			public const string CheckBlockedSocialProfileName = "checkblockedsocialprofilename";
			public const string CheckDirectMessages = "checkdirectmessages";
			public const string CheckDirectMessagesName = "checkdirectmessagesname";
			public const string CheckIfResolved = "checkifresolved";
			public const string CheckIfResolvedName = "checkifresolvedname";
			public const string ComponentState = "componentstate";
			public const string ConvertRuleId = "convertruleid";
			public const string Id = "convertruleid";
			public const string ConvertRuleIdUnique = "convertruleidunique";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string ExchangeRate = "exchangerate";
			public const string IsManaged = "ismanaged";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string QueueId = "queueid";
			public const string QueueIdName = "queueidname";
			public const string RecordVersion = "recordversion";
			public const string ResolvedSince = "resolvedsince";
			public const string ResponseTemplateId = "responsetemplateid";
			public const string ResponseTemplateIdName = "responsetemplateidname";
			public const string SendAutomaticResponse = "sendautomaticresponse";
			public const string SendAutomaticResponseName = "sendautomaticresponsename";
			public const string SolutionId = "solutionid";
			public const string SourceChannelTypeCode = "sourcechanneltypecode";
			public const string SourceChannelTypeCodeName = "sourcechanneltypecodename";
			public const string SourceTypeCode = "sourcetypecode";
			public const string SourceTypeCodeName = "sourcetypecodename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
			public const string WorkflowId = "workflowid";
			public const string WorkflowIdName = "workflowidname";
			public const string ConvertRule_Annotation = "ConvertRule_Annotation";
			public const string Convertrule_AsyncOperations = "Convertrule_AsyncOperations";
			public const string convertrule_convertruleitem = "convertrule_convertruleitem";
			public const string ConvertRule_ProcessSessions = "ConvertRule_ProcessSessions";
			public const string ConvertRule_userentityinstancedatas = "ConvertRule_userentityinstancedatas";
			public const string business_unit_convertrule = "business_unit_convertrule";
			public const string channelpropertygroup_convertrule = "channelpropertygroup_convertrule";
			public const string convertrule_queue = "convertrule_queue";
			public const string emailtemplate_convertrule = "emailtemplate_convertrule";
			public const string lk_convertrule_createdby = "lk_convertrule_createdby";
			public const string lk_ConvertRule_createdonbehalfby = "lk_ConvertRule_createdonbehalfby";
			public const string lk_ConvertRule_modifiedby = "lk_ConvertRule_modifiedby";
			public const string lk_ConvertRule_modifiedonbehalfby = "lk_ConvertRule_modifiedonbehalfby";
			public const string team_convertrule = "team_convertrule";
			public const string TransactionCurrency_ConvertRule = "TransactionCurrency_ConvertRule";
			public const string user_convertrule = "user_convertrule";
			public const string workflowid_convertrule = "workflowid_convertrule";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ConvertRule() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "convertrule";
		
		public const string EntityLogicalCollectionName = "convertrules";
		
		public const string EntitySetName = "convertrules";
		
		public const int EntityTypeCode = 9300;
		
		/// <summary>
		/// Chọn có chuyển đổi thành bản ghi hay không cho những mục từ người gửi không xác định.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowunknownsender")]
		public System.Nullable<bool> AllowUnknownSender
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowunknownsender");
			}
			set
			{
				this.SetAttributeValue("allowunknownsender", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowunknownsendername")]
		public string AllowUnknownSenderName
		{
			get
			{
				if (this.FormattedValues.Contains("allowunknownsender"))
				{
					return this.FormattedValues["allowunknownsender"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// nhóm thuộc tính kênh được liên kết với quy tắc chuyển đổi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channelpropertygroupid")]
		public Microsoft.Xrm.Sdk.EntityReference ChannelPropertyGroupId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("channelpropertygroupid");
			}
			set
			{
				this.SetAttributeValue("channelpropertygroupid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channelpropertygroupidname")]
		public string ChannelPropertyGroupIdName
		{
			get
			{
				if (this.FormattedValues.Contains("channelpropertygroupid"))
				{
					return this.FormattedValues["channelpropertygroupid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("channelpropertygroupidname", value);
			}
		}
		
		/// <summary>
		/// Chọn có tạo trường hợp hay không cho khách hàng có quyền được hưởng hiện hoạt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkactiveentitlement")]
		public System.Nullable<bool> CheckActiveEntitlement
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("checkactiveentitlement");
			}
			set
			{
				this.SetAttributeValue("checkactiveentitlement", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkactiveentitlementname")]
		public string CheckActiveEntitlementName
		{
			get
			{
				if (this.FormattedValues.Contains("checkactiveentitlement"))
				{
					return this.FormattedValues["checkactiveentitlement"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc có cần tạo bản ghi hay không cho các hồ sơ thuộc mạng xã hội bị ghi vào danh sách bị chặn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkblockedsocialprofile")]
		public System.Nullable<bool> CheckBlockedSocialProfile
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("checkblockedsocialprofile");
			}
			set
			{
				this.SetAttributeValue("checkblockedsocialprofile", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkblockedsocialprofilename")]
		public string CheckBlockedSocialProfileName
		{
			get
			{
				if (this.FormattedValues.Contains("checkblockedsocialprofile"))
				{
					return this.FormattedValues["checkblockedsocialprofile"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin về việc có cần tạo bản ghi hay không cho thư trực tiếp.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkdirectmessages")]
		public System.Nullable<bool> CheckDirectMessages
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("checkdirectmessages");
			}
			set
			{
				this.SetAttributeValue("checkdirectmessages", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkdirectmessagesname")]
		public string CheckDirectMessagesName
		{
			get
			{
				if (this.FormattedValues.Contains("checkdirectmessages"))
				{
					return this.FormattedValues["checkdirectmessages"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn chuyển đổi thành trường hợp hay không cho mục liên quan đến trường hợp đã giải quyết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkifresolved")]
		public System.Nullable<bool> CheckIfResolved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("checkifresolved");
			}
			set
			{
				this.SetAttributeValue("checkifresolved", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("checkifresolvedname")]
		public string CheckIfResolvedName
		{
			get
			{
				if (this.FormattedValues.Contains("checkifresolved"))
				{
					return this.FormattedValues["checkifresolved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("convertruleid")]
		public System.Nullable<System.Guid> ConvertRuleId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("convertruleid");
			}
			set
			{
				this.SetAttributeValue("convertruleid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("convertruleid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ConvertRuleId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("convertruleidunique")]
		public System.Nullable<System.Guid> ConvertRuleIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("convertruleidunique");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdbyname"))
				{
					return this.FormattedValues["createdbyname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung để mô tả quy tắc tạo bản ghi tự động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền liên kết với hàng đợi theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedbyname"))
				{
					return this.FormattedValues["modifiedbyname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfbyname"))
				{
					return this.FormattedValues["modifiedonbehalfbyname"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập tiêu đề hoặc tên của hàng đợi có thiết đặt được xác định.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Id Chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên chủ sở hữu của quy tắc định tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
			set
			{
				this.SetAttributeValue("owneridname", value);
			}
		}
		
		/// <summary>
		/// Cho biết đơn vị kinh doanh của chủ sở hữu quy tắc chuyển đổi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
			set
			{
				this.SetAttributeValue("owningteam", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
			set
			{
				this.SetAttributeValue("owninguser", value);
			}
		}
		
		/// <summary>
		/// Chọn hàng đợi được gán quy tắc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		public Microsoft.Xrm.Sdk.EntityReference QueueId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("queueid");
			}
			set
			{
				this.SetAttributeValue("queueid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueidname")]
		public string QueueIdName
		{
			get
			{
				if (this.FormattedValues.Contains("queueid"))
				{
					return this.FormattedValues["queueid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Phiên bản bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recordversion")]
		public string RecordVersion
		{
			get
			{
				return this.GetAttributeValue<string>("recordversion");
			}
		}
		
		/// <summary>
		/// Nếu bạn muốn tạo trường hợp mới cho một mục kết hợp với trường hợp đã được giải quyết, hãy nhập khoảng thời gian trường hợp phải duy trì trạng thái đã giải quyết trước khi tạo trường hợp mới cho mục được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("resolvedsince")]
		public System.Nullable<int> ResolvedSince
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("resolvedsince");
			}
			set
			{
				this.SetAttributeValue("resolvedsince", value);
			}
		}
		
		/// <summary>
		/// Chọn mẫu email để sử dụng cho việc tạo phản hồi tự động cho khách hàng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsetemplateid")]
		public Microsoft.Xrm.Sdk.EntityReference ResponseTemplateId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("responsetemplateid");
			}
			set
			{
				this.SetAttributeValue("responsetemplateid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsetemplateidname")]
		public string ResponseTemplateIdName
		{
			get
			{
				if (this.FormattedValues.Contains("responsetemplateid"))
				{
					return this.FormattedValues["responsetemplateid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn có gửi phản hồi email tự động cho khách hàng sau khi tạo bản ghi hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendautomaticresponse")]
		public System.Nullable<bool> SendAutomaticResponse
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendautomaticresponse");
			}
			set
			{
				this.SetAttributeValue("sendautomaticresponse", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendautomaticresponsename")]
		public string SendAutomaticResponseName
		{
			get
			{
				if (this.FormattedValues.Contains("sendautomaticresponse"))
				{
					return this.FormattedValues["sendautomaticresponse"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Xác định hoạt động Dynamics 365 là nguồn của bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcechanneltypecode")]
		public string SourceChannelTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("sourcechanneltypecode");
			}
			set
			{
				this.SetAttributeValue("sourcechanneltypecode", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcechanneltypecodename")]
		public string SourceChannelTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("sourcechanneltypecode"))
				{
					return this.FormattedValues["sourcechanneltypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nguồn của bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcetypecode")]
		public virtual converttorule_sourcetype? SourceTypeCode
		{
			get
			{
				return ((converttorule_sourcetype?)(EntityOptionSetEnum.GetEnum(this, "sourcetypecode")));
			}
			set
			{
				this.SetAttributeValue("sourcetypecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcetypecodename")]
		public string SourceTypeCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("sourcetypecode"))
				{
					return this.FormattedValues["sourcetypecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Trạng thái của Quy tắc Chuyển đổi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual convertrule_statecode? StateCode
		{
			get
			{
				return ((convertrule_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do cho trạng thái của Quy tắc Chuyển đổi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual convertrule_statuscode? StatusCode
		{
			get
			{
				return ((convertrule_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của loại tiền liên kết với hàng đợi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số phiên bản của quy tắc chuyển đổi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// Cho biết quy trình làm việc của quy tắc này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		public Microsoft.Xrm.Sdk.EntityReference WorkflowId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("workflowid");
			}
			set
			{
				this.SetAttributeValue("workflowid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowidname")]
		public string WorkflowIdName
		{
			get
			{
				if (this.FormattedValues.Contains("workflowid"))
				{
					return this.FormattedValues["workflowid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// 1:N ConvertRule_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ConvertRule_Annotation")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Annotation> ConvertRule_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("ConvertRule_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("ConvertRule_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N Convertrule_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Convertrule_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> Convertrule_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Convertrule_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("Convertrule_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N convertrule_convertruleitem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("convertrule_convertruleitem")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ConvertRuleItem> convertrule_convertruleitem
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ConvertRuleItem>("convertrule_convertruleitem", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ConvertRuleItem>("convertrule_convertruleitem", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ConvertRule_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ConvertRule_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> ConvertRule_ProcessSessions
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("ConvertRule_ProcessSessions", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("ConvertRule_ProcessSessions", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ConvertRule_userentityinstancedatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ConvertRule_userentityinstancedatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> ConvertRule_userentityinstancedatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("ConvertRule_userentityinstancedatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("ConvertRule_userentityinstancedatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_convertrule")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_convertrule", null);
			}
		}
		
		/// <summary>
		/// N:1 channelpropertygroup_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("channelpropertygroupid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("channelpropertygroup_convertrule")]
		public Dev.DevKit.ProxyTypes.ChannelPropertyGroup channelpropertygroup_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ChannelPropertyGroup>("channelpropertygroup_convertrule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ChannelPropertyGroup>("channelpropertygroup_convertrule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 convertrule_queue
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("queueid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("convertrule_queue")]
		public Dev.DevKit.ProxyTypes.Queue convertrule_queue
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Queue>("convertrule_queue", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Queue>("convertrule_queue", null, value);
			}
		}
		
		/// <summary>
		/// N:1 emailtemplate_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("responsetemplateid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailtemplate_convertrule")]
		public Dev.DevKit.ProxyTypes.Template emailtemplate_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Template>("emailtemplate_convertrule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Template>("emailtemplate_convertrule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_convertrule_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_convertrule_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_convertrule_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_convertrule_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ConvertRule_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ConvertRule_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ConvertRule_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ConvertRule_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ConvertRule_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ConvertRule_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ConvertRule_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ConvertRule_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_ConvertRule_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_ConvertRule_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_ConvertRule_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_ConvertRule_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_convertrule")]
		public Dev.DevKit.ProxyTypes.Team team_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_convertrule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_convertrule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_ConvertRule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ConvertRule")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_ConvertRule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ConvertRule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ConvertRule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 user_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_convertrule")]
		public Dev.DevKit.ProxyTypes.SystemUser user_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_convertrule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_convertrule", null, value);
			}
		}
		
		/// <summary>
		/// N:1 workflowid_convertrule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("workflowid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("workflowid_convertrule")]
		public Dev.DevKit.ProxyTypes.Workflow workflowid_convertrule
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Workflow>("workflowid_convertrule", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Workflow>("workflowid_convertrule", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
