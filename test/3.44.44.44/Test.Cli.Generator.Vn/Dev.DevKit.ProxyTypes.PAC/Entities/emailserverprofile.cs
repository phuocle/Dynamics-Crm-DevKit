#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Phiên bản Exchange của máy chủ email
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_exchangeversion
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2007 = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2007SP1 = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2010 = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2010SP1 = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2010SP2 = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Exchange2013 = 5,
	}
	
	/// <summary>
	/// Tùy chọn chỉ định phương pháp truy xuất thông tin đăng nhập.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_incomingcredentialretrieval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thngtinxcthcdongidnghochngichnh = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThngtinxcthccchnhtrongCuhnhmychemail = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Xcthcmychtimych = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XcthctchhpcaWindows = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngcthngtinxcthc_ndanh = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GmailOAuth = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phngthcxcthchinikthp_HMAcaExchange = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OauthviMicrosoftEntraID = 7,
	}
	
	/// <summary>
	/// Lựa chọn cục bộ dựa trên việc thực thi Kiểm tra
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_lastauthorizationstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
	}
	
	/// <summary>
	/// Lựa chọn cục bộ dựa trên việc thực thi Kiểm tra
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_lasttestexecutionstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cnhbo = 2,
	}
	
	/// <summary>
	/// Lựa chọn cục bộ dựa trên việc thực thi Kiểm tra
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_lasttestvalidationstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thnhcng = 1,
	}
	
	/// <summary>
	/// Tùy chọn chỉ định phương pháp truy xuất thông tin đăng nhập cho kết nối đi.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_outgoingcredentialretrieval
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Thngtinxcthcdongidnghochngichnh = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ThngtinxcthccchnhtrongCuhnhmychemail = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Xcthcmychtimych = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		XcthctchhpcaWindows = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngcthngtinxcthc_ndanh = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		GmailOAuth = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Phngthcxcthchinikthp_HMAcaExchange = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		OauthviMicrosoftEntraID = 7,
	}
	
	/// <summary>
	/// Tùy chọn chỉ định quyền của máy chủ email.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_serverauthority
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Cngcng_GCC_httpsloginmicrosoftonlinecom = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		CquanchnhphHoaK_GCCHighvDoD_httpsloginmicrosoftonlineus = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		TrungQuc_21Vianet_httpsloginchinacloudapicn = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tng_cxcnhbimmyDynamics365 = 3,
	}
	
	/// <summary>
	/// Loại máy chủ thư
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_servertype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExchangeServer = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khc_POP3SMTP = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExchangeServer_Kthp = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExchangeOnline_Kthp = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		IMAPSMTP = 4,
	}
	
	/// <summary>
	/// Trạng thái của Cấu hình Máy chủ Thư
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của MailServerProfile
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum emailserverprofile_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghotng = 2,
	}
	
	/// <summary>
	/// Giữ Cấu hình Máy chủ Email của tổ chức
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("emailserverprofile")]
	public partial class EmailServerProfile : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the emailserverprofile entity
		/// </summary>
		public partial class Fields
		{
			public const string AadResourceId = "aadresourceid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DefaultServerLocation = "defaultserverlocation";
			public const string Description = "description";
			public const string EmailServerProfileId = "emailserverprofileid";
			public const string Id = "emailserverprofileid";
			public const string EmailServerTypeName = "emailservertypename";
			public const string EncodingCodePage = "encodingcodepage";
			public const string EntityImage = "entityimage";
			public const string EntityImage_Timestamp = "entityimage_timestamp";
			public const string EntityImage_URL = "entityimage_url";
			public const string EntityImageId = "entityimageid";
			public const string ExchangeOnlineTenantId = "exchangeonlinetenantid";
			public const string ExchangeVersion = "exchangeversion";
			public const string ExchangeVersionName = "exchangeversionname";
			public const string IncomingAuthenticationProtocol = "incomingauthenticationprotocol";
			public const string IncomingAuthenticationProtocolName = "incomingauthenticationprotocolname";
			public const string IncomingCredentialRetrieval = "incomingcredentialretrieval";
			public const string IncomingCredentialRetrievalName = "incomingcredentialretrievalname";
			public const string IncomingPartnerApplication = "incomingpartnerapplication";
			public const string IncomingPartnerApplicationName = "incomingpartnerapplicationname";
			public const string IncomingPassword = "incomingpassword";
			public const string IncomingPortNumber = "incomingportnumber";
			public const string IncomingServerLocation = "incomingserverlocation";
			public const string IncomingUseImpersonation = "incominguseimpersonation";
			public const string IncomingUseImpersonationName = "incominguseimpersonationname";
			public const string IncomingUserName = "incomingusername";
			public const string IncomingUseSSL = "incomingusessl";
			public const string IncomingUseSslName = "incomingusesslname";
			public const string IsIncomingPasswordSet = "isincomingpasswordset";
			public const string IsOauthClientSecretSet = "isoauthclientsecretset";
			public const string IsOutgoingPasswordSet = "isoutgoingpasswordset";
			public const string keyvaultreferenceid = "keyvaultreferenceid";
			public const string keyvaultreferenceidName = "keyvaultreferenceidname";
			public const string LastAuthorizationStatus = "lastauthorizationstatus";
			public const string LastCrmMessage = "lastcrmmessage";
			public const string LastTestExecutionStatus = "lasttestexecutionstatus";
			public const string LastTestRequest = "lasttestrequest";
			public const string LastTestResponse = "lasttestresponse";
			public const string LastTestStartTime = "lastteststarttime";
			public const string LastTestTotalExecutionTime = "lasttesttotalexecutiontime";
			public const string LastTestValidationStatus = "lasttestvalidationstatus";
			public const string managedidentityid = "managedidentityid";
			public const string managedidentityidName = "managedidentityidname";
			public const string MaxConcurrentConnections = "maxconcurrentconnections";
			public const string MinPollingIntervalInMinutes = "minpollingintervalinminutes";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string MoveUndeliveredEmails = "moveundeliveredemails";
			public const string MoveUndeliveredEmailsName = "moveundeliveredemailsname";
			public const string Name = "name";
			public const string OauthClientId = "oauthclientid";
			public const string OauthClientSecret = "oauthclientsecret";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OutgoingAuthenticationProtocol = "outgoingauthenticationprotocol";
			public const string OutgoingAuthenticationProtocolName = "outgoingauthenticationprotocolname";
			public const string OutgoingAutoGrantDelegateAccess = "outgoingautograntdelegateaccess";
			public const string OutgoingAutoGrantDelegateAccessName = "outgoingautograntdelegateaccessname";
			public const string OutgoingCredentialRetrieval = "outgoingcredentialretrieval";
			public const string OutgoingCredentialRetrievalName = "outgoingcredentialretrievalname";
			public const string OutgoingPartnerApplication = "outgoingpartnerapplication";
			public const string OutgoingPartnerApplicationName = "outgoingpartnerapplicationname";
			public const string OutgoingPassword = "outgoingpassword";
			public const string OutgoingPortNumber = "outgoingportnumber";
			public const string OutgoingServerLocation = "outgoingserverlocation";
			public const string OutgoingUseImpersonation = "outgoinguseimpersonation";
			public const string OutgoingUseImpersonationName = "outgoinguseimpersonationname";
			public const string OutgoingUsername = "outgoingusername";
			public const string OutgoingUseSSL = "outgoingusessl";
			public const string OutgoingUseSslName = "outgoingusesslname";
			public const string OwnerEmailAddress = "owneremailaddress";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ProcessEmailsReceivedAfter = "processemailsreceivedafter";
			public const string SendEmailAlert = "sendemailalert";
			public const string SendEmailAlertName = "sendemailalertname";
			public const string ServerAuthority = "serverauthority";
			public const string serverauthorityName = "serverauthorityname";
			public const string ServerType = "servertype";
			public const string ServerTypeName = "servertypename";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TimeoutMailboxConnection = "timeoutmailboxconnection";
			public const string TimeoutMailboxConnectionAfterAmount = "timeoutmailboxconnectionafteramount";
			public const string TimeoutMailboxConnectionName = "timeoutmailboxconnectionname";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UseAutoDiscover = "useautodiscover";
			public const string UseAutoDiscoverName = "useautodiscovername";
			public const string UseDefaultTenantId = "usedefaulttenantid";
			public const string UseDefaultTenantIdName = "usedefaulttenantidname";
			public const string UseSameSettingsForOutgoingConnections = "usesamesettingsforoutgoingconnections";
			public const string UseSameSettingsForOutgoingConnectionsName = "usesamesettingsforoutgoingconnectionsname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string EmailServerProfile_Annotation = "EmailServerProfile_Annotation";
			public const string emailserverprofile_asyncoperations = "emailserverprofile_asyncoperations";
			public const string emailserverprofile_bulkdeletefailures = "emailserverprofile_bulkdeletefailures";
			public const string emailserverprofile_duplicatebaserecord = "emailserverprofile_duplicatebaserecord";
			public const string emailserverprofile_duplicatematchingrecord = "emailserverprofile_duplicatematchingrecord";
			public const string emailserverprofile_mailbox = "emailserverprofile_mailbox";
			public const string EmailServerProfile_Organization = "EmailServerProfile_Organization";
			public const string EmailServerProfile_SyncErrors = "EmailServerProfile_SyncErrors";
			public const string tracelog_EmailServerProfile = "tracelog_EmailServerProfile";
			public const string business_unit_emailserverprofile = "business_unit_emailserverprofile";
			public const string keyvaultreference_emailserverprofile_keyvaultreferenceid = "keyvaultreference_emailserverprofile_keyvaultreferenceid";
			public const string lk_emailserverprofile_createdby = "lk_emailserverprofile_createdby";
			public const string lk_emailserverprofile_createdonbehalfby = "lk_emailserverprofile_createdonbehalfby";
			public const string lk_emailserverprofile_entityimage = "lk_emailserverprofile_entityimage";
			public const string lk_emailserverprofile_modifiedby = "lk_emailserverprofile_modifiedby";
			public const string lk_emailserverprofile_modifiedonbehalfby = "lk_emailserverprofile_modifiedonbehalfby";
			public const string managedidentity_emailserverprofile_managedidentityid = "managedidentity_emailserverprofile_managedidentityid";
			public const string organization_emailserverprofile = "organization_emailserverprofile";
			public const string team_emailserverprofile = "team_emailserverprofile";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public EmailServerProfile() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "emailserverprofile";
		
		public const string EntityLogicalCollectionName = "emailserverprofiles";
		
		public const string EntitySetName = "emailserverprofiles";
		
		/// <summary>
		/// ID nguồn lực Microsoft Entra được dùng cho sơ đồ xác thực OAuth
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aadresourceid")]
		public string AadResourceId
		{
			get
			{
				return this.GetAttributeValue<string>("aadresourceid");
			}
			set
			{
				this.SetAttributeValue("aadresourceid", value);
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập vị trí mặc định của máy chủ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("defaultserverlocation")]
		public string DefaultServerLocation
		{
			get
			{
				return this.GetAttributeValue<string>("defaultserverlocation");
			}
			set
			{
				this.SetAttributeValue("defaultserverlocation", value);
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung mô tả cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofileid")]
		public System.Nullable<System.Guid> EmailServerProfileId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("emailserverprofileid");
			}
			set
			{
				this.SetAttributeValue("emailserverprofileid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailserverprofileid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.EmailServerProfileId = value;
			}
		}
		
		/// <summary>
		/// Tên Loại Máy chủ Email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("emailservertypename")]
		public string EmailServerTypeName
		{
			get
			{
				return this.GetAttributeValue<string>("emailservertypename");
			}
		}
		
		/// <summary>
		/// Cho biết trang mã để sử dụng khi mã hóa nội dung email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("encodingcodepage")]
		public string EncodingCodePage
		{
			get
			{
				return this.GetAttributeValue<string>("encodingcodepage");
			}
			set
			{
				this.SetAttributeValue("encodingcodepage", value);
			}
		}
		
		/// <summary>
		/// Hình ảnh mặc định cho thực thể.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage")]
		public byte[] EntityImage
		{
			get
			{
				return this.GetAttributeValue<byte[]>("entityimage");
			}
			set
			{
				this.SetAttributeValue("entityimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_timestamp")]
		public System.Nullable<long> EntityImage_Timestamp
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("entityimage_timestamp");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimage_url")]
		public string EntityImage_URL
		{
			get
			{
				return this.GetAttributeValue<string>("entityimage_url");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		public System.Nullable<System.Guid> EntityImageId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityimageid");
			}
		}
		
		/// <summary>
		/// Nhập ID đối tượng thuê của Exchange Online.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeonlinetenantid")]
		public string ExchangeOnlineTenantId
		{
			get
			{
				return this.GetAttributeValue<string>("exchangeonlinetenantid");
			}
			set
			{
				this.SetAttributeValue("exchangeonlinetenantid", value);
			}
		}
		
		/// <summary>
		/// Chọn phiên bản Exchange trên máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeversion")]
		public virtual emailserverprofile_exchangeversion? ExchangeVersion
		{
			get
			{
				return ((emailserverprofile_exchangeversion?)(EntityOptionSetEnum.GetEnum(this, "exchangeversion")));
			}
			set
			{
				this.SetAttributeValue("exchangeversion", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangeversionname")]
		public string ExchangeVersionName
		{
			get
			{
				if (this.FormattedValues.Contains("exchangeversion"))
				{
					return this.FormattedValues["exchangeversion"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn giao thức xác thực email đến được sử dụng để kết nối với máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingauthenticationprotocol")]
		public virtual emailserverprofile_authenticationprotocol? IncomingAuthenticationProtocol
		{
			get
			{
				return ((emailserverprofile_authenticationprotocol?)(EntityOptionSetEnum.GetEnum(this, "incomingauthenticationprotocol")));
			}
			set
			{
				this.SetAttributeValue("incomingauthenticationprotocol", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingauthenticationprotocolname")]
		public string IncomingAuthenticationProtocolName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingauthenticationprotocol"))
				{
					return this.FormattedValues["incomingauthenticationprotocol"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn cách truy xuất thông tin đăng nhập của email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingcredentialretrieval")]
		public virtual emailserverprofile_incomingcredentialretrieval? IncomingCredentialRetrieval
		{
			get
			{
				return ((emailserverprofile_incomingcredentialretrieval?)(EntityOptionSetEnum.GetEnum(this, "incomingcredentialretrieval")));
			}
			set
			{
				this.SetAttributeValue("incomingcredentialretrieval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingcredentialretrievalname")]
		public string IncomingCredentialRetrievalName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingcredentialretrieval"))
				{
					return this.FormattedValues["incomingcredentialretrieval"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ứng dụng đối tác của email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingpartnerapplication")]
		public Microsoft.Xrm.Sdk.EntityReference IncomingPartnerApplication
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("incomingpartnerapplication");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingpartnerapplicationname")]
		public string IncomingPartnerApplicationName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingpartnerapplication"))
				{
					return this.FormattedValues["incomingpartnerapplication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập mật khẩu cho email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingpassword")]
		public string IncomingPassword
		{
			get
			{
				return this.GetAttributeValue<string>("incomingpassword");
			}
			set
			{
				this.SetAttributeValue("incomingpassword", value);
			}
		}
		
		/// <summary>
		/// Nhấp số cổng Exchange cho thư đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingportnumber")]
		public System.Nullable<int> IncomingPortNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("incomingportnumber");
			}
			set
			{
				this.SetAttributeValue("incomingportnumber", value);
			}
		}
		
		/// <summary>
		/// Nhập vị trí máy chủ cho email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingserverlocation")]
		public string IncomingServerLocation
		{
			get
			{
				return this.GetAttributeValue<string>("incomingserverlocation");
			}
			set
			{
				this.SetAttributeValue("incomingserverlocation", value);
			}
		}
		
		/// <summary>
		/// Chọn liệu có truy cập hộp thư dưới hình thức mạo danh để xử lý các email đến không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incominguseimpersonation")]
		public System.Nullable<bool> IncomingUseImpersonation
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("incominguseimpersonation");
			}
			set
			{
				this.SetAttributeValue("incominguseimpersonation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incominguseimpersonationname")]
		public string IncomingUseImpersonationName
		{
			get
			{
				if (this.FormattedValues.Contains("incominguseimpersonation"))
				{
					return this.FormattedValues["incominguseimpersonation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập tên người dùng cho email đến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingusername")]
		public string IncomingUserName
		{
			get
			{
				return this.GetAttributeValue<string>("incomingusername");
			}
			set
			{
				this.SetAttributeValue("incomingusername", value);
			}
		}
		
		/// <summary>
		/// Chọn liệu có sử dụng giao thức Tầng Khe Bảo mật (giao thức SSL) cho email đến hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingusessl")]
		public System.Nullable<bool> IncomingUseSSL
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("incomingusessl");
			}
			set
			{
				this.SetAttributeValue("incomingusessl", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incomingusesslname")]
		public string IncomingUseSslName
		{
			get
			{
				if (this.FormattedValues.Contains("incomingusessl"))
				{
					return this.FormattedValues["incomingusessl"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isincomingpasswordset")]
		public System.Nullable<bool> IsIncomingPasswordSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isincomingpasswordset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoauthclientsecretset")]
		public System.Nullable<bool> IsOauthClientSecretSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoauthclientsecretset");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isoutgoingpasswordset")]
		public System.Nullable<bool> IsOutgoingPasswordSet
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isoutgoingpasswordset");
			}
		}
		
		/// <summary>
		/// ID tham chiếu cho Azure Key Vault
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference keyvaultreferenceid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("keyvaultreferenceid");
			}
			set
			{
				this.SetAttributeValue("keyvaultreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceidname")]
		public string keyvaultreferenceidName
		{
			get
			{
				if (this.FormattedValues.Contains("keyvaultreferenceid"))
				{
					return this.FormattedValues["keyvaultreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Hiển thị trạng thái ủy quyền kiểm tra lần cuối của cấu hình máy chủ email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastauthorizationstatus")]
		public virtual emailserverprofile_lastauthorizationstatus? LastAuthorizationStatus
		{
			get
			{
				return ((emailserverprofile_lastauthorizationstatus?)(EntityOptionSetEnum.GetEnum(this, "lastauthorizationstatus")));
			}
			set
			{
				this.SetAttributeValue("lastauthorizationstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Hiển thị Thông báo Dynamics 365 nhận được trong quá trình Kiểm tra Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastcrmmessage")]
		public string LastCrmMessage
		{
			get
			{
				return this.GetAttributeValue<string>("lastcrmmessage");
			}
			set
			{
				this.SetAttributeValue("lastcrmmessage", value);
			}
		}
		
		/// <summary>
		/// Hiển thị trạng thái Thực thi kiểm tra lần cuối của cấu hình máy chủ email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestexecutionstatus")]
		public virtual emailserverprofile_lasttestexecutionstatus? LastTestExecutionStatus
		{
			get
			{
				return ((emailserverprofile_lasttestexecutionstatus?)(EntityOptionSetEnum.GetEnum(this, "lasttestexecutionstatus")));
			}
			set
			{
				this.SetAttributeValue("lasttestexecutionstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Hiển thị Yêu cầu EWS được tạo trong quá trình Kiểm tra Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestrequest")]
		public string LastTestRequest
		{
			get
			{
				return this.GetAttributeValue<string>("lasttestrequest");
			}
			set
			{
				this.SetAttributeValue("lasttestrequest", value);
			}
		}
		
		/// <summary>
		/// Hiển thị Phản hồi EWS nhận được trong quá trình Kiểm tra Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestresponse")]
		public string LastTestResponse
		{
			get
			{
				return this.GetAttributeValue<string>("lasttestresponse");
			}
			set
			{
				this.SetAttributeValue("lasttestresponse", value);
			}
		}
		
		/// <summary>
		/// Hiển thị ngày và giờ Bắt đầu Kiểm tra Lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastteststarttime")]
		public System.Nullable<System.DateTime> LastTestStartTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastteststarttime");
			}
			set
			{
				this.SetAttributeValue("lastteststarttime", value);
			}
		}
		
		/// <summary>
		/// Hiển thị Thời gian đã bỏ ra trong khi chạy kiểm tra lần cuối
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttesttotalexecutiontime")]
		public System.Nullable<long> LastTestTotalExecutionTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("lasttesttotalexecutiontime");
			}
			set
			{
				this.SetAttributeValue("lasttesttotalexecutiontime", value);
			}
		}
		
		/// <summary>
		/// Hiển thị trạng thái Xác thực kiểm tra lần cuối của cấu hình máy chủ email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lasttestvalidationstatus")]
		public virtual emailserverprofile_lasttestvalidationstatus? LastTestValidationStatus
		{
			get
			{
				return ((emailserverprofile_lasttestvalidationstatus?)(EntityOptionSetEnum.GetEnum(this, "lasttestvalidationstatus")));
			}
			set
			{
				this.SetAttributeValue("lasttestvalidationstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// ID danh tính được quản lý
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedidentityid")]
		public Microsoft.Xrm.Sdk.EntityReference managedidentityid
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("managedidentityid");
			}
			set
			{
				this.SetAttributeValue("managedidentityid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedidentityidname")]
		public string managedidentityidName
		{
			get
			{
				if (this.FormattedValues.Contains("managedidentityid"))
				{
					return this.FormattedValues["managedidentityid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số lượng kết nối đồng thời tối đa được phép tới máy chủ email cho mỗi người dùng được xác thực.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxconcurrentconnections")]
		public System.Nullable<int> MaxConcurrentConnections
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxconcurrentconnections");
			}
			set
			{
				this.SetAttributeValue("maxconcurrentconnections", value);
			}
		}
		
		/// <summary>
		/// Khoảng thời gian kiểm soát vòng tối thiểu, tính theo phút, cho các hộp thư được liên kết với cấu hình máy chủ email này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("minpollingintervalinminutes")]
		public System.Nullable<int> MinPollingIntervalInMinutes
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("minpollingintervalinminutes");
			}
			set
			{
				this.SetAttributeValue("minpollingintervalinminutes", value);
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi lần cuối thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu có di chuyển các email đến không gửi được tới thư mục Không gửi được trong Microsoft Exchange hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("moveundeliveredemails")]
		public System.Nullable<bool> MoveUndeliveredEmails
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("moveundeliveredemails");
			}
			set
			{
				this.SetAttributeValue("moveundeliveredemails", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("moveundeliveredemailsname")]
		public string MoveUndeliveredEmailsName
		{
			get
			{
				if (this.FormattedValues.Contains("moveundeliveredemails"))
				{
					return this.FormattedValues["moveundeliveredemails"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập một tên có nghĩa cho cấu hình máy chủ email. Tên này được hiển thị khi bạn cần chọn một cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Id máy khách được dùng cho sơ đồ xác thực OAuth
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthclientid")]
		public string OauthClientId
		{
			get
			{
				return this.GetAttributeValue<string>("oauthclientid");
			}
			set
			{
				this.SetAttributeValue("oauthclientid", value);
			}
		}
		
		/// <summary>
		/// Mã bí mật máy khách được dùng cho sơ đồ xác thực OAuth
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("oauthclientsecret")]
		public string OauthClientSecret
		{
			get
			{
				return this.GetAttributeValue<string>("oauthclientsecret");
			}
			set
			{
				this.SetAttributeValue("oauthclientsecret", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của tổ chức được liên kết với bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn giao thức xác thực email đi được sử dụng để kết nối với máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingauthenticationprotocol")]
		public virtual emailserverprofile_authenticationprotocol? OutgoingAuthenticationProtocol
		{
			get
			{
				return ((emailserverprofile_authenticationprotocol?)(EntityOptionSetEnum.GetEnum(this, "outgoingauthenticationprotocol")));
			}
			set
			{
				this.SetAttributeValue("outgoingauthenticationprotocol", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingauthenticationprotocolname")]
		public string OutgoingAuthenticationProtocolName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingauthenticationprotocol"))
				{
					return this.FormattedValues["outgoingauthenticationprotocol"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết liệu bộ liên kết email có cấp quyền truy cập đại diện cho người dùng đang truy cập khi được yêu cầu trong lúc xử lý email đi hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingautograntdelegateaccess")]
		public System.Nullable<bool> OutgoingAutoGrantDelegateAccess
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoingautograntdelegateaccess");
			}
			set
			{
				this.SetAttributeValue("outgoingautograntdelegateaccess", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingautograntdelegateaccessname")]
		public string OutgoingAutoGrantDelegateAccessName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingautograntdelegateaccess"))
				{
					return this.FormattedValues["outgoingautograntdelegateaccess"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn cách truy xuất thông tin đăng nhập cho email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingcredentialretrieval")]
		public virtual emailserverprofile_outgoingcredentialretrieval? OutgoingCredentialRetrieval
		{
			get
			{
				return ((emailserverprofile_outgoingcredentialretrieval?)(EntityOptionSetEnum.GetEnum(this, "outgoingcredentialretrieval")));
			}
			set
			{
				this.SetAttributeValue("outgoingcredentialretrieval", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingcredentialretrievalname")]
		public string OutgoingCredentialRetrievalName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingcredentialretrieval"))
				{
					return this.FormattedValues["outgoingcredentialretrieval"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ứng dụng đối tác của email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingpartnerapplication")]
		public Microsoft.Xrm.Sdk.EntityReference OutgoingPartnerApplication
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("outgoingpartnerapplication");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingpartnerapplicationname")]
		public string OutgoingPartnerApplicationName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingpartnerapplication"))
				{
					return this.FormattedValues["outgoingpartnerapplication"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập mật khẩu cho email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingpassword")]
		public string OutgoingPassword
		{
			get
			{
				return this.GetAttributeValue<string>("outgoingpassword");
			}
			set
			{
				this.SetAttributeValue("outgoingpassword", value);
			}
		}
		
		/// <summary>
		/// Nhấp số cổng Exchange cho thư đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingportnumber")]
		public System.Nullable<int> OutgoingPortNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outgoingportnumber");
			}
			set
			{
				this.SetAttributeValue("outgoingportnumber", value);
			}
		}
		
		/// <summary>
		/// Nhập vị trí máy chủ cho email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingserverlocation")]
		public string OutgoingServerLocation
		{
			get
			{
				return this.GetAttributeValue<string>("outgoingserverlocation");
			}
			set
			{
				this.SetAttributeValue("outgoingserverlocation", value);
			}
		}
		
		/// <summary>
		/// Chọn liệu có truy cập hộp thư dưới hình thức mạo danh để xử lý các email đi không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoinguseimpersonation")]
		public System.Nullable<bool> OutgoingUseImpersonation
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoinguseimpersonation");
			}
			set
			{
				this.SetAttributeValue("outgoinguseimpersonation", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoinguseimpersonationname")]
		public string OutgoingUseImpersonationName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoinguseimpersonation"))
				{
					return this.FormattedValues["outgoinguseimpersonation"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập tên người dùng cho email đi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingusername")]
		public string OutgoingUsername
		{
			get
			{
				return this.GetAttributeValue<string>("outgoingusername");
			}
			set
			{
				this.SetAttributeValue("outgoingusername", value);
			}
		}
		
		/// <summary>
		/// Chọn liệu có sử dụng giao thức Tầng Khe Bảo mật (giao thức SSL) cho email đi hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingusessl")]
		public System.Nullable<bool> OutgoingUseSSL
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("outgoingusessl");
			}
			set
			{
				this.SetAttributeValue("outgoingusessl", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outgoingusesslname")]
		public string OutgoingUseSslName
		{
			get
			{
				if (this.FormattedValues.Contains("outgoingusessl"))
				{
					return this.FormattedValues["outgoingusessl"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Địa chỉ email của chủ sở hữu cấu hình máy chủ email
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneremailaddress")]
		public string OwnerEmailAddress
		{
			get
			{
				return this.GetAttributeValue<string>("owneremailaddress");
			}
			set
			{
				this.SetAttributeValue("owneremailaddress", value);
			}
		}
		
		/// <summary>
		/// Nhập người dùng hoặc nhóm được gán để quản lý bản ghi. Trường này sẽ cập nhật mỗi lần bản ghi được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên phiên âm tiếng Nhật của chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn đơn vị kinh doanh sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Hiển thị ngày và giờ mà sau đó email nhận được sẽ được xử lý cho các hộp thư được liên kết với cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processemailsreceivedafter")]
		public System.Nullable<System.DateTime> ProcessEmailsReceivedAfter
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("processemailsreceivedafter");
			}
			set
			{
				this.SetAttributeValue("processemailsreceivedafter", value);
			}
		}
		
		/// <summary>
		/// Chọn xem có gửi cảnh báo qua email nếu hơn 50% hộp thư trong cấu hình máy chủ email này không thể đồng bộ hóa trong khoảng thời gian một giờ được không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendemailalert")]
		public System.Nullable<bool> SendEmailAlert
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("sendemailalert");
			}
			set
			{
				this.SetAttributeValue("sendemailalert", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sendemailalertname")]
		public string SendEmailAlertName
		{
			get
			{
				if (this.FormattedValues.Contains("sendemailalert"))
				{
					return this.FormattedValues["sendemailalert"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn quyền cho máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serverauthority")]
		public virtual emailserverprofile_serverauthority? ServerAuthority
		{
			get
			{
				return ((emailserverprofile_serverauthority?)(EntityOptionSetEnum.GetEnum(this, "serverauthority")));
			}
			set
			{
				this.SetAttributeValue("serverauthority", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serverauthorityname")]
		public string serverauthorityName
		{
			get
			{
				if (this.FormattedValues.Contains("serverauthority"))
				{
					return this.FormattedValues["serverauthority"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn loại máy chủ email của cấu hình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servertype")]
		public virtual emailserverprofile_servertype? ServerType
		{
			get
			{
				return ((emailserverprofile_servertype?)(EntityOptionSetEnum.GetEnum(this, "servertype")));
			}
			set
			{
				this.SetAttributeValue("servertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("servertypename")]
		public string ServerTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("servertype"))
				{
					return this.FormattedValues["servertype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết cấu hình máy chủ email hiện hoạt hay không hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual emailserverprofile_statecode? StateCode
		{
			get
			{
				return ((emailserverprofile_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái của cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual emailserverprofile_statuscode? StatusCode
		{
			get
			{
				return ((emailserverprofile_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn xem đã hết thời gian chờ một hộp thư đơn lẻ chưa.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeoutmailboxconnection")]
		public System.Nullable<bool> TimeoutMailboxConnection
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("timeoutmailboxconnection");
			}
			set
			{
				this.SetAttributeValue("timeoutmailboxconnection", value);
			}
		}
		
		/// <summary>
		/// Nhập số mili giây hết thời gian chờ một hộp thư đơn lẻ. Giới hạn trên là 100 giây.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeoutmailboxconnectionafteramount")]
		public System.Nullable<int> TimeoutMailboxConnectionAfterAmount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timeoutmailboxconnectionafteramount");
			}
			set
			{
				this.SetAttributeValue("timeoutmailboxconnectionafteramount", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timeoutmailboxconnectionname")]
		public string TimeoutMailboxConnectionName
		{
			get
			{
				if (this.FormattedValues.Contains("timeoutmailboxconnection"))
				{
					return this.FormattedValues["timeoutmailboxconnection"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Chọn liệu có tự động phát hiện vị trí máy chủ hay không
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useautodiscover")]
		public System.Nullable<bool> UseAutoDiscover
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("useautodiscover");
			}
			set
			{
				this.SetAttributeValue("useautodiscover", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("useautodiscovername")]
		public string UseAutoDiscoverName
		{
			get
			{
				if (this.FormattedValues.Contains("useautodiscover"))
				{
					return this.FormattedValues["useautodiscover"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn có sử dụng ID Đối tượng thuê của Exchange Online có được khi chạy các lệnh ghép ngắn Microsoft Azure PowerShell (rất khuyến nghị) không. Nếu chọn Không, bạn có thể chỉnh sửa thủ công trường này
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usedefaulttenantid")]
		public System.Nullable<bool> UseDefaultTenantId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usedefaulttenantid");
			}
			set
			{
				this.SetAttributeValue("usedefaulttenantid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usedefaulttenantidname")]
		public string UseDefaultTenantIdName
		{
			get
			{
				if (this.FormattedValues.Contains("usedefaulttenantid"))
				{
					return this.FormattedValues["usedefaulttenantid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn liệu có sử dụng cùng một cài đặt cho các kết nối đến và đi hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usesamesettingsforoutgoingconnections")]
		public System.Nullable<bool> UseSameSettingsForOutgoingConnections
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("usesamesettingsforoutgoingconnections");
			}
			set
			{
				this.SetAttributeValue("usesamesettingsforoutgoingconnections", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("usesamesettingsforoutgoingconnectionsname")]
		public string UseSameSettingsForOutgoingConnectionsName
		{
			get
			{
				if (this.FormattedValues.Contains("usesamesettingsforoutgoingconnections"))
				{
					return this.FormattedValues["usesamesettingsforoutgoingconnections"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của cấu hình máy chủ email.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N EmailServerProfile_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("EmailServerProfile_Annotation")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Annotation> EmailServerProfile_Annotation
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("EmailServerProfile_Annotation", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Annotation>("EmailServerProfile_Annotation", null, value);
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_asyncoperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_asyncoperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> emailserverprofile_asyncoperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("emailserverprofile_asyncoperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("emailserverprofile_asyncoperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_bulkdeletefailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_bulkdeletefailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> emailserverprofile_bulkdeletefailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("emailserverprofile_bulkdeletefailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("emailserverprofile_bulkdeletefailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_duplicatebaserecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_duplicatebaserecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> emailserverprofile_duplicatebaserecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("emailserverprofile_duplicatebaserecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("emailserverprofile_duplicatebaserecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_duplicatematchingrecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_duplicatematchingrecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> emailserverprofile_duplicatematchingrecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("emailserverprofile_duplicatematchingrecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("emailserverprofile_duplicatematchingrecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N emailserverprofile_mailbox
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailserverprofile_mailbox")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Mailbox> emailserverprofile_mailbox
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Mailbox>("emailserverprofile_mailbox", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Mailbox>("emailserverprofile_mailbox", null, value);
			}
		}
		
		/// <summary>
		/// 1:N EmailServerProfile_Organization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("EmailServerProfile_Organization")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Organization> EmailServerProfile_Organization
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Organization>("EmailServerProfile_Organization", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Organization>("EmailServerProfile_Organization", null, value);
			}
		}
		
		/// <summary>
		/// 1:N EmailServerProfile_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("EmailServerProfile_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> EmailServerProfile_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("EmailServerProfile_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("EmailServerProfile_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N tracelog_EmailServerProfile
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("tracelog_EmailServerProfile")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.TraceLog> tracelog_EmailServerProfile
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.TraceLog>("tracelog_EmailServerProfile", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.TraceLog>("tracelog_EmailServerProfile", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_emailserverprofile")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_emailserverprofile
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_emailserverprofile", null);
			}
		}
		
		/// <summary>
		/// N:1 keyvaultreference_emailserverprofile_keyvaultreferenceid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvaultreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("keyvaultreference_emailserverprofile_keyvaultreferenceid")]
		public Dev.DevKit.ProxyTypes.KeyVaultReference keyvaultreference_emailserverprofile_keyvaultreferenceid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_emailserverprofile_keyvaultreferenceid", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.KeyVaultReference>("keyvaultreference_emailserverprofile_keyvaultreferenceid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_emailserverprofile_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_emailserverprofile_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_emailserverprofile_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_emailserverprofile_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_entityimage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityimageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_entityimage")]
		public Dev.DevKit.ProxyTypes.ImageDescriptor lk_emailserverprofile_entityimage
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ImageDescriptor>("lk_emailserverprofile_entityimage", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_emailserverprofile_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_emailserverprofile_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_emailserverprofile_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_emailserverprofile_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_emailserverprofile_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_emailserverprofile_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 managedidentity_emailserverprofile_managedidentityid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managedidentityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("managedidentity_emailserverprofile_managedidentityid")]
		public Dev.DevKit.ProxyTypes.ManagedIdentity managedidentity_emailserverprofile_managedidentityid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ManagedIdentity>("managedidentity_emailserverprofile_managedidentityid", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ManagedIdentity>("managedidentity_emailserverprofile_managedidentityid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 organization_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_emailserverprofile")]
		public Dev.DevKit.ProxyTypes.Organization organization_emailserverprofile
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_emailserverprofile", null);
			}
		}
		
		/// <summary>
		/// N:1 team_emailserverprofile
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_emailserverprofile")]
		public Dev.DevKit.ProxyTypes.Team team_emailserverprofile
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_emailserverprofile", null);
			}
		}
	}
}
#pragma warning restore CS1591
