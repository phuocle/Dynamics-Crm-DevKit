#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Trạng thái của dạng xem.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum userquery_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Lý do cho trạng thái của dạng xem.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum userquery_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ttc = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghotng = 2,
	}
	
	/// <summary>
	/// Truy vấn cơ sở dữ liệu đã lưu của người dùng.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("userquery")]
	public partial class UserQuery : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the userquery entity
		/// </summary>
		public partial class Fields
		{
			public const string AdvancedGroupBy = "advancedgroupby";
			public const string ColumnSetXml = "columnsetxml";
			public const string ConditionalFormatting = "conditionalformatting";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string FetchXml = "fetchxml";
			public const string LayoutJson = "layoutjson";
			public const string LayoutXml = "layoutxml";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OfflineSqlQuery = "offlinesqlquery";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string ParentQueryId = "parentqueryid";
			public const string QueryType = "querytype";
			public const string ReturnedTypeCode = "returnedtypecode";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string UserQueryId = "userqueryid";
			public const string Id = "userqueryid";
			public const string VersionNumber = "versionnumber";
			public const string userentityinstancedata_userquery = "userentityinstancedata_userquery";
			public const string UserQuery_AsyncOperations = "UserQuery_AsyncOperations";
			public const string UserQuery_BulkDeleteFailures = "UserQuery_BulkDeleteFailures";
			public const string UserQuery_SyncErrors = "UserQuery_SyncErrors";
			public const string business_unit_userquery = "business_unit_userquery";
			public const string lk_userquery_createdby = "lk_userquery_createdby";
			public const string lk_userquery_createdonbehalfby = "lk_userquery_createdonbehalfby";
			public const string lk_userquery_modifiedby = "lk_userquery_modifiedby";
			public const string lk_userquery_modifiedonbehalfby = "lk_userquery_modifiedonbehalfby";
			public const string team_userquery = "team_userquery";
			public const string user_userquery = "user_userquery";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public UserQuery() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "userquery";
		
		public const string EntityLogicalCollectionName = "userqueries";
		
		public const string EntitySetName = "userqueries";
		
		/// <summary>
		/// Nhập tên cột hệ thống sẽ dùng để tập hợp kết quả từ dữ liệu đã thu thập được qua nhiều bản ghi từ dạng xem người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedgroupby")]
		public string AdvancedGroupBy
		{
			get
			{
				return this.GetAttributeValue<string>("advancedgroupby");
			}
			set
			{
				this.SetAttributeValue("advancedgroupby", value);
			}
		}
		
		/// <summary>
		/// Hiện cột và tiêu chí sắp xếp cho dạng xem đã lưu, lưu trữ trong định dạng XML.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnsetxml")]
		public string ColumnSetXml
		{
			get
			{
				return this.GetAttributeValue<string>("columnsetxml");
			}
			set
			{
				this.SetAttributeValue("columnsetxml", value);
			}
		}
		
		/// <summary>
		/// Nhập thông tin về cách định dạng các mục trong dạng xem người dùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conditionalformatting")]
		public string ConditionalFormatting
		{
			get
			{
				return this.GetAttributeValue<string>("conditionalformatting");
			}
			set
			{
				this.SetAttributeValue("conditionalformatting", value);
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Tên của người dùng đã tạo dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// YomiName của người dùng đã tạo dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Cho biết người tạo bản ghi thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập thông tin bổ sung để mô tả dạng xem đã lưu như tiêu chí bộ lọc hoặc bộ kết quả mong đợi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Chứa truy vấn XML Tìm nạp dữ liệu xác định thực thể và thuộc tính đã bao gồm trong dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fetchxml")]
		public string FetchXml
		{
			get
			{
				return this.GetAttributeValue<string>("fetchxml");
			}
			set
			{
				this.SetAttributeValue("fetchxml", value);
			}
		}
		
		/// <summary>
		/// Dữ liệu bố cục theo định dạng JSON.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutjson")]
		public string LayoutJson
		{
			get
			{
				return this.GetAttributeValue<string>("layoutjson");
			}
			set
			{
				this.SetAttributeValue("layoutjson", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutxml")]
		public string LayoutXml
		{
			get
			{
				return this.GetAttributeValue<string>("layoutxml");
			}
			set
			{
				this.SetAttributeValue("layoutxml", value);
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi sau cùng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Tên của người dùng sửa đổi dạng xem đã lưu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// YomiName của người dùng sửa đổi dạng xem đã lưu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Cho biết người cập nhật bản ghi lần cuối thay mặt cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Nhập tên mô tả cho dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Chuỗi xác định truy vấn SQL tương ứng cho XML tìm nạp dữ liệu đã chỉ định để sử dụng ngoại tuyến.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesqlquery")]
		public string OfflineSqlQuery
		{
			get
			{
				return this.GetAttributeValue<string>("offlinesqlquery");
			}
			set
			{
				this.SetAttributeValue("offlinesqlquery", value);
			}
		}
		
		/// <summary>
		/// Nhập người dùng hoặc nhóm được gán để quản lý bản ghi. Trường này sẽ cập nhật mỗi lần bản ghi được gán cho người dùng khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Tên của chủ sở hữu dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cho biết đơn vị kinh doanh của chủ sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của nhóm sở hữu dạng xem đã lưu này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu dạng xem đã lưu này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Chọn ID của truy vấn đã lưu đã tạo ra bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentqueryid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentQueryId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentqueryid");
			}
			set
			{
				this.SetAttributeValue("parentqueryid", value);
			}
		}
		
		/// <summary>
		/// Hiện mã cho loại truy vấn để chỉ định có phải dạng xem đã lưu là bộ lọc sổ địa chỉ, tìm kiếm nâng cao hoặc dạng xem khác.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("querytype")]
		public System.Nullable<int> QueryType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("querytype");
			}
			set
			{
				this.SetAttributeValue("querytype", value);
			}
		}
		
		/// <summary>
		/// Loại thực thể dạng xem đã lưu sẽ hiển thị.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("returnedtypecode")]
		public string ReturnedTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("returnedtypecode");
			}
			set
			{
				this.SetAttributeValue("returnedtypecode", value);
			}
		}
		
		/// <summary>
		/// Hiện dạng xem đã lưu ở trạng thái hiện hoạt hay không hoạt động.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual userquery_statecode? StateCode
		{
			get
			{
				return ((userquery_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chọn trạng thái của mục.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual userquery_statuscode? StatusCode
		{
			get
			{
				return ((userquery_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
		public System.Nullable<System.Guid> UserQueryId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("userqueryid");
			}
			set
			{
				this.SetAttributeValue("userqueryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.UserQueryId = value;
			}
		}
		
		/// <summary>
		/// Số phiên bản của dạng xem đã lưu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_userquery
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_userquery")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_userquery
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_userquery", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_userquery", null, value);
			}
		}
		
		/// <summary>
		/// 1:N UserQuery_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("UserQuery_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> UserQuery_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("UserQuery_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("UserQuery_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N UserQuery_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("UserQuery_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> UserQuery_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("UserQuery_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("UserQuery_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N UserQuery_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("UserQuery_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> UserQuery_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("UserQuery_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("UserQuery_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_userquery
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_userquery")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_userquery
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_userquery", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_userquery_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_userquery_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_userquery_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_userquery_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_userquery_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_userquery_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_userquery_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_userquery_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_userquery_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_userquery_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_userquery_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_userquery_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_userquery_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_userquery
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_userquery")]
		public Dev.DevKit.ProxyTypes.Team team_userquery
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_userquery", null);
			}
		}
		
		/// <summary>
		/// N:1 user_userquery
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_userquery")]
		public Dev.DevKit.ProxyTypes.SystemUser user_userquery
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_userquery", null);
			}
		}
	}
}
#pragma warning restore CS1591
