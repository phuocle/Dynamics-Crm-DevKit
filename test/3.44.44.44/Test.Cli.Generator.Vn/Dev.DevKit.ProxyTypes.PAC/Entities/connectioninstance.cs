#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Status of the Connection Instance
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum connectioninstance_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the Connection Instance
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum connectioninstance_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("connectioninstance")]
	public partial class ConnectionInstance : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the connectioninstance entity
		/// </summary>
		public partial class Fields
		{
			public const string AccountName = "accountname";
			public const string AllowSharing = "allowsharing";
			public const string allowsharingName = "allowsharingname";
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string ConnectionInstanceDisplayName = "connectioninstancedisplayname";
			public const string ConnectionInstanceId = "connectioninstanceid";
			public const string Id = "connectioninstanceid";
			public const string ConnectionInstanceLogicalName = "connectioninstancelogicalname";
			public const string ConnectionInternalId = "connectioninternalid";
			public const string ConnectionMetadata = "connectionmetadata";
			public const string ConnectionParametersConfig = "connectionparametersconfig";
			public const string ConnectionParameterSetConfig = "connectionparametersetconfig";
			public const string ConnectionReferenceId = "connectionreferenceid";
			public const string ConnectionReferenceIdName = "connectionreferenceidname";
			public const string ConnectionStatus = "connectionstatus";
			public const string ConnectionVersion = "connectionversion";
			public const string ConnectorId = "connectorid";
			public const string connectoridName = "connectoridname";
			public const string ConnectorInternalId = "connectorinternalid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string CredentialId = "credentialid";
			public const string CredentialIdName = "credentialidname";
			public const string IconUri = "iconuri";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TestConnectionLinks = "testconnectionlinks";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string connectioninstance_AsyncOperations = "connectioninstance_AsyncOperations";
			public const string connectioninstance_BulkDeleteFailures = "connectioninstance_BulkDeleteFailures";
			public const string connectioninstance_DuplicateBaseRecord = "connectioninstance_DuplicateBaseRecord";
			public const string connectioninstance_DuplicateMatchingRecord = "connectioninstance_DuplicateMatchingRecord";
			public const string connectioninstance_MailboxTrackingFolders = "connectioninstance_MailboxTrackingFolders";
			public const string connectioninstance_PrincipalObjectAttributeAccesses = "connectioninstance_PrincipalObjectAttributeAccesses";
			public const string connectioninstance_ProcessSession = "connectioninstance_ProcessSession";
			public const string connectioninstance_SyncErrors = "connectioninstance_SyncErrors";
			public const string connectioninstance_UserEntityInstanceDatas = "connectioninstance_UserEntityInstanceDatas";
			public const string business_unit_connectioninstance = "business_unit_connectioninstance";
			public const string connectioninstance_CredentialId_credential = "connectioninstance_CredentialId_credential";
			public const string connectionreference_connectioninstance = "connectionreference_connectioninstance";
			public const string lk_connectioninstance_connectorid = "lk_connectioninstance_connectorid";
			public const string lk_connectioninstance_createdby = "lk_connectioninstance_createdby";
			public const string lk_connectioninstance_createdonbehalfby = "lk_connectioninstance_createdonbehalfby";
			public const string lk_connectioninstance_modifiedby = "lk_connectioninstance_modifiedby";
			public const string lk_connectioninstance_modifiedonbehalfby = "lk_connectioninstance_modifiedonbehalfby";
			public const string team_connectioninstance = "team_connectioninstance";
			public const string user_connectioninstance = "user_connectioninstance";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ConnectionInstance() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "connectioninstance";
		
		public const string EntityLogicalCollectionName = "connectioninstances";
		
		public const string EntitySetName = "connectioninstances";
		
		/// <summary>
		/// The name for the account
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("accountname")]
		public string AccountName
		{
			get
			{
				return this.GetAttributeValue<string>("accountname");
			}
			set
			{
				this.SetAttributeValue("accountname", value);
			}
		}
		
		/// <summary>
		/// Whether or not allow sharing is enabled for the connection
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowsharing")]
		public System.Nullable<bool> AllowSharing
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowsharing");
			}
			set
			{
				this.SetAttributeValue("allowsharing", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowsharingname")]
		public string allowsharingName
		{
			get
			{
				if (this.FormattedValues.Contains("allowsharing"))
				{
					return this.FormattedValues["allowsharing"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The display name of the Connection as seen by the user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectioninstancedisplayname")]
		public string ConnectionInstanceDisplayName
		{
			get
			{
				return this.GetAttributeValue<string>("connectioninstancedisplayname");
			}
			set
			{
				this.SetAttributeValue("connectioninstancedisplayname", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectioninstanceid")]
		public System.Nullable<System.Guid> ConnectionInstanceId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("connectioninstanceid");
			}
			set
			{
				this.SetAttributeValue("connectioninstanceid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectioninstanceid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ConnectionInstanceId = value;
			}
		}
		
		/// <summary>
		/// Connection Instance unique name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectioninstancelogicalname")]
		public string ConnectionInstanceLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("connectioninstancelogicalname");
			}
			set
			{
				this.SetAttributeValue("connectioninstancelogicalname", value);
			}
		}
		
		/// <summary>
		/// The Id of the Connection in Api Hub
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectioninternalid")]
		public string ConnectionInternalId
		{
			get
			{
				return this.GetAttributeValue<string>("connectioninternalid");
			}
			set
			{
				this.SetAttributeValue("connectioninternalid", value);
			}
		}
		
		/// <summary>
		/// The Metadata for the connection
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionmetadata")]
		public string ConnectionMetadata
		{
			get
			{
				return this.GetAttributeValue<string>("connectionmetadata");
			}
			set
			{
				this.SetAttributeValue("connectionmetadata", value);
			}
		}
		
		/// <summary>
		/// The connection parameters and values that will be passed on creation
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionparametersconfig")]
		public string ConnectionParametersConfig
		{
			get
			{
				return this.GetAttributeValue<string>("connectionparametersconfig");
			}
			set
			{
				this.SetAttributeValue("connectionparametersconfig", value);
			}
		}
		
		/// <summary>
		/// The connection parameters set and values that are mainly used in case of multiauth connections
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionparametersetconfig")]
		public string ConnectionParameterSetConfig
		{
			get
			{
				return this.GetAttributeValue<string>("connectionparametersetconfig");
			}
			set
			{
				this.SetAttributeValue("connectionparametersetconfig", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for Connection Reference associated with the Connection Instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionreferenceid")]
		public Microsoft.Xrm.Sdk.EntityReference ConnectionReferenceId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("connectionreferenceid");
			}
			set
			{
				this.SetAttributeValue("connectionreferenceid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionreferenceidname")]
		public string ConnectionReferenceIdName
		{
			get
			{
				if (this.FormattedValues.Contains("connectionreferenceid"))
				{
					return this.FormattedValues["connectionreferenceid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The status of the connection in ApiHub
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionstatus")]
		public string ConnectionStatus
		{
			get
			{
				return this.GetAttributeValue<string>("connectionstatus");
			}
			set
			{
				this.SetAttributeValue("connectionstatus", value);
			}
		}
		
		/// <summary>
		/// The version of the connection
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionversion")]
		public string ConnectionVersion
		{
			get
			{
				return this.GetAttributeValue<string>("connectionversion");
			}
			set
			{
				this.SetAttributeValue("connectionversion", value);
			}
		}
		
		/// <summary>
		/// The id of the corresponding connector if present in Dataverse
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectorid")]
		public Microsoft.Xrm.Sdk.EntityReference ConnectorId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("connectorid");
			}
			set
			{
				this.SetAttributeValue("connectorid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectoridname")]
		public string connectoridName
		{
			get
			{
				if (this.FormattedValues.Contains("connectorid"))
				{
					return this.FormattedValues["connectorid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The id of the Connector in ApiHub
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectorinternalid")]
		public string ConnectorInternalId
		{
			get
			{
				return this.GetAttributeValue<string>("connectorinternalid");
			}
			set
			{
				this.SetAttributeValue("connectorinternalid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the Credential used in the Connection Instance.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialid")]
		public Microsoft.Xrm.Sdk.EntityReference CredentialId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("credentialid");
			}
			set
			{
				this.SetAttributeValue("credentialid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialidname")]
		public string CredentialIdName
		{
			get
			{
				if (this.FormattedValues.Contains("credentialid"))
				{
					return this.FormattedValues["credentialid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Icon for the Connection Instance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iconuri")]
		public string IconUri
		{
			get
			{
				return this.GetAttributeValue<string>("iconuri");
			}
			set
			{
				this.SetAttributeValue("iconuri", value);
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Status of the Connection Instance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual connectioninstance_statecode? statecode
		{
			get
			{
				return ((connectioninstance_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the Connection Instance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual connectioninstance_statuscode? statuscode
		{
			get
			{
				return ((connectioninstance_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Links to test the connection
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("testconnectionlinks")]
		public string TestConnectionLinks
		{
			get
			{
				return this.GetAttributeValue<string>("testconnectionlinks");
			}
			set
			{
				this.SetAttributeValue("testconnectionlinks", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> connectioninstance_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("connectioninstance_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("connectioninstance_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> connectioninstance_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("connectioninstance_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("connectioninstance_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> connectioninstance_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("connectioninstance_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("connectioninstance_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> connectioninstance_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("connectioninstance_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("connectioninstance_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> connectioninstance_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("connectioninstance_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("connectioninstance_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> connectioninstance_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("connectioninstance_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("connectioninstance_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> connectioninstance_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("connectioninstance_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("connectioninstance_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> connectioninstance_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("connectioninstance_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("connectioninstance_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N connectioninstance_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> connectioninstance_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("connectioninstance_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("connectioninstance_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_connectioninstance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_connectioninstance")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_connectioninstance
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_connectioninstance", null);
			}
		}
		
		/// <summary>
		/// N:1 connectioninstance_CredentialId_credential
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("credentialid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectioninstance_CredentialId_credential")]
		public Dev.DevKit.ProxyTypes.credential connectioninstance_CredentialId_credential
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.credential>("connectioninstance_CredentialId_credential", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.credential>("connectioninstance_CredentialId_credential", null, value);
			}
		}
		
		/// <summary>
		/// N:1 connectionreference_connectioninstance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectionreferenceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("connectionreference_connectioninstance")]
		public Dev.DevKit.ProxyTypes.connectionreference connectionreference_connectioninstance
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.connectionreference>("connectionreference_connectioninstance", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.connectionreference>("connectionreference_connectioninstance", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_connectioninstance_connectorid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("connectorid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_connectioninstance_connectorid")]
		public Dev.DevKit.ProxyTypes.connector lk_connectioninstance_connectorid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.connector>("lk_connectioninstance_connectorid", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.connector>("lk_connectioninstance_connectorid", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_connectioninstance_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_connectioninstance_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_connectioninstance_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_connectioninstance_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_connectioninstance_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_connectioninstance_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_connectioninstance_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_connectioninstance_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_connectioninstance_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_connectioninstance_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_connectioninstance_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_connectioninstance_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_connectioninstance_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_connectioninstance_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_connectioninstance_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_connectioninstance_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_connectioninstance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_connectioninstance")]
		public Dev.DevKit.ProxyTypes.Team team_connectioninstance
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_connectioninstance", null);
			}
		}
		
		/// <summary>
		/// N:1 user_connectioninstance
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_connectioninstance")]
		public Dev.DevKit.ProxyTypes.SystemUser user_connectioninstance
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_connectioninstance", null);
			}
		}
	}
}
#pragma warning restore CS1591
