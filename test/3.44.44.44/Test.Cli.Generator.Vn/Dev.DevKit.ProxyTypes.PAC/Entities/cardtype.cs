#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Tính khả dụng máy khác đối với loại thẻ
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum actioncard_clientavailability
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		WebClientOnly = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MocaOnly = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MocaAndWeb = 3,
	}
	
	/// <summary>
	/// Để cung cấp dữ liệu tổng thể cho danh sách loại thẻ. Chỉ sử dụng nội bộ
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("cardtype")]
	public partial class CardType : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the cardtype entity
		/// </summary>
		public partial class Fields
		{
			public const string Actions = "actions";
			public const string AdaptiveCardTemplate = "adaptivecardtemplate";
			public const string BoolCardOption = "boolcardoption";
			public const string BoolCardOptionName = "boolcardoptionname";
			public const string CardName = "cardname";
			public const string CardType1 = "cardtype";
			public const string CardTypeIcon = "cardtypeicon";
			public const string CardTypeId = "cardtypeid";
			public const string Id = "cardtypeid";
			public const string ClientAvailability = "clientavailability";
			public const string ClientAvailabilityName = "clientavailabilityname";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string GroupCategory = "groupcategory";
			public const string GroupType = "grouptype";
			public const string HasSnoozeDismiss = "hassnoozedismiss";
			public const string HasSnoozeDismissName = "hassnoozedismissname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IntCardOption = "intcardoption";
			public const string IsBaseCard = "isbasecard";
			public const string IsBaseCardName = "isbasecardname";
			public const string IsEnabled = "isenabled";
			public const string IsEnabledName = "isenabledname";
			public const string IsLiveOnly = "isliveonly";
			public const string IsLiveOnlyName = "isliveonlyname";
			public const string IsPreviewCard = "ispreviewcard";
			public const string IsPreviewCardName = "ispreviewcardname";
			public const string LastSyncTime = "lastsynctime";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string Priority = "priority";
			public const string PublisherName = "publishername";
			public const string ScheduleTime = "scheduletime";
			public const string SoftTitle = "softtitle";
			public const string StringCardOption = "stringcardoption";
			public const string SummaryText = "summarytext";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string VersionNumber = "versionnumber";
			public const string cardtype_actioncard = "cardtype_actioncard";
			public const string cardtype_actioncardusersettings = "cardtype_actioncardusersettings";
			public const string lk_cardtype_createdby = "lk_cardtype_createdby";
			public const string lk_cardtype_createdonbehalfby = "lk_cardtype_createdonbehalfby";
			public const string lk_cardtype_modifiedby = "lk_cardtype_modifiedby";
			public const string lk_cardtype_modifiedonbehalfby = "lk_cardtype_modifiedonbehalfby";
			public const string transactioncurrency_cardtype = "transactioncurrency_cardtype";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public CardType() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "cardtype";
		
		public const string EntityLogicalCollectionName = "cardtypes";
		
		public const string EntitySetName = "cardtype";
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("actions")]
		public string Actions
		{
			get
			{
				return this.GetAttributeValue<string>("actions");
			}
			set
			{
				this.SetAttributeValue("actions", value);
			}
		}
		
		/// <summary>
		/// Mẫu AdaptiveCard.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("adaptivecardtemplate")]
		public string AdaptiveCardTemplate
		{
			get
			{
				return this.GetAttributeValue<string>("adaptivecardtemplate");
			}
			set
			{
				this.SetAttributeValue("adaptivecardtemplate", value);
			}
		}
		
		/// <summary>
		/// Mọi tùy chọn Bolean cho cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("boolcardoption")]
		public System.Nullable<bool> BoolCardOption
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("boolcardoption");
			}
			set
			{
				this.SetAttributeValue("boolcardoption", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("boolcardoptionname")]
		public string BoolCardOptionName
		{
			get
			{
				if (this.FormattedValues.Contains("boolcardoption"))
				{
					return this.FormattedValues["boolcardoption"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardname")]
		public string CardName
		{
			get
			{
				return this.GetAttributeValue<string>("cardname");
			}
			set
			{
				this.SetAttributeValue("cardname", value);
			}
		}
		
		/// <summary>
		/// Giá trị CardType ENUM.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtype")]
		public System.Nullable<int> CardType1
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("cardtype");
			}
			set
			{
				this.SetAttributeValue("cardtype", value);
			}
		}
		
		/// <summary>
		/// CardTypeIcon của thẻ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeicon")]
		public string CardTypeIcon
		{
			get
			{
				return this.GetAttributeValue<string>("cardtypeicon");
			}
			set
			{
				this.SetAttributeValue("cardtypeicon", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public System.Nullable<System.Guid> CardTypeId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("cardtypeid");
			}
			set
			{
				this.SetAttributeValue("cardtypeid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("cardtypeid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.CardTypeId = value;
			}
		}
		
		/// <summary>
		/// Xác định loại máy khách mà thẻ này sẽ khả dụng.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientavailability")]
		public virtual actioncard_clientavailability? ClientAvailability
		{
			get
			{
				return ((actioncard_clientavailability?)(EntityOptionSetEnum.GetEnum(this, "clientavailability")));
			}
			set
			{
				this.SetAttributeValue("clientavailability", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("clientavailabilityname")]
		public string ClientAvailabilityName
		{
			get
			{
				if (this.FormattedValues.Contains("clientavailability"))
				{
					return this.FormattedValues["clientavailability"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền đã liên kết với CardType theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// GroupCategory cho biết nhóm các thẻ trong Trợ lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupcategory")]
		public System.Nullable<int> GroupCategory
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("groupcategory");
			}
			set
			{
				this.SetAttributeValue("groupcategory", value);
			}
		}
		
		/// <summary>
		/// Chỉ định loại nhóm thẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("grouptype")]
		public string GroupType
		{
			get
			{
				return this.GetAttributeValue<string>("grouptype");
			}
			set
			{
				this.SetAttributeValue("grouptype", value);
			}
		}
		
		/// <summary>
		/// Chỉ định xem loại thẻ có loại bỏ báo lại hay không
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hassnoozedismiss")]
		public System.Nullable<bool> HasSnoozeDismiss
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("hassnoozedismiss");
			}
			set
			{
				this.SetAttributeValue("hassnoozedismiss", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("hassnoozedismissname")]
		public string HasSnoozeDismissName
		{
			get
			{
				if (this.FormattedValues.Contains("hassnoozedismiss"))
				{
					return this.FormattedValues["hassnoozedismiss"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số thứ tự của quá trình nhập đã tạo bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Mọi tùy chọn int cho cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("intcardoption")]
		public System.Nullable<int> IntCardOption
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("intcardoption");
			}
			set
			{
				this.SetAttributeValue("intcardoption", value);
			}
		}
		
		/// <summary>
		/// IsBaseCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbasecard")]
		public System.Nullable<bool> IsBaseCard
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbasecard");
			}
			set
			{
				this.SetAttributeValue("isbasecard", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbasecardname")]
		public string IsBaseCardName
		{
			get
			{
				if (this.FormattedValues.Contains("isbasecard"))
				{
					return this.FormattedValues["isbasecard"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// IsEnabled
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isenabled")]
		public System.Nullable<bool> IsEnabled
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isenabled");
			}
			set
			{
				this.SetAttributeValue("isenabled", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isenabledname")]
		public string IsEnabledName
		{
			get
			{
				if (this.FormattedValues.Contains("isenabled"))
				{
					return this.FormattedValues["isenabled"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// IsLiveOnly
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isliveonly")]
		public System.Nullable<bool> IsLiveOnly
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isliveonly");
			}
			set
			{
				this.SetAttributeValue("isliveonly", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isliveonlyname")]
		public string IsLiveOnlyName
		{
			get
			{
				if (this.FormattedValues.Contains("isliveonly"))
				{
					return this.FormattedValues["isliveonly"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// IsPreviewCard
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewcard")]
		public System.Nullable<bool> IsPreviewCard
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ispreviewcard");
			}
			set
			{
				this.SetAttributeValue("ispreviewcard", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispreviewcardname")]
		public string IsPreviewCardName
		{
			get
			{
				if (this.FormattedValues.Contains("ispreviewcard"))
				{
					return this.FormattedValues["ispreviewcard"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cột này được Phần bổ trợ cập nhật dựa trên dữ liệu tìm nạp lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastsynctime")]
		public System.Nullable<System.DateTime> LastSyncTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastsynctime");
			}
			set
			{
				this.SetAttributeValue("lastsynctime", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Mức ưu tiên của CardType
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("priority")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("priority");
			}
			set
			{
				this.SetAttributeValue("priority", value);
			}
		}
		
		/// <summary>
		/// Tên nhà phát hành của loại thẻ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishername")]
		public string PublisherName
		{
			get
			{
				return this.GetAttributeValue<string>("publishername");
			}
			set
			{
				this.SetAttributeValue("publishername", value);
			}
		}
		
		/// <summary>
		/// Cột này được Phần bổ trợ cập nhật dựa trên dữ liệu tìm nạp lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduletime")]
		public System.Nullable<System.DateTime> ScheduleTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduletime");
			}
			set
			{
				this.SetAttributeValue("scheduletime", value);
			}
		}
		
		/// <summary>
		/// Tiêu đề mềm của thẻ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("softtitle")]
		public string SoftTitle
		{
			get
			{
				return this.GetAttributeValue<string>("softtitle");
			}
			set
			{
				this.SetAttributeValue("softtitle", value);
			}
		}
		
		/// <summary>
		/// Mọi tùy chọn chuỗi cho cardtype.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stringcardoption")]
		public string StringCardOption
		{
			get
			{
				return this.GetAttributeValue<string>("stringcardoption");
			}
			set
			{
				this.SetAttributeValue("stringcardoption", value);
			}
		}
		
		/// <summary>
		/// Văn bản tóm tắt của thẻ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("summarytext")]
		public string SummaryText
		{
			get
			{
				return this.GetAttributeValue<string>("summarytext");
			}
			set
			{
				this.SetAttributeValue("summarytext", value);
			}
		}
		
		/// <summary>
		/// Tỷ giá của loại tiền đã liên kết với CardType theo loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N cardtype_actioncard
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncard")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActionCard> cardtype_actioncard
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCard>("cardtype_actioncard", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCard>("cardtype_actioncard", null, value);
			}
		}
		
		/// <summary>
		/// 1:N cardtype_actioncardusersettings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("cardtype_actioncardusersettings")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ActionCardUserSettings> cardtype_actioncardusersettings
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCardUserSettings>("cardtype_actioncardusersettings", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ActionCardUserSettings>("cardtype_actioncardusersettings", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_cardtype_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_cardtype_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_cardtype_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_cardtype_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_cardtype_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_cardtype_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_cardtype_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_cardtype_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_cardtype_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_cardtype_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 transactioncurrency_cardtype
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("transactioncurrency_cardtype")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency transactioncurrency_cardtype
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("transactioncurrency_cardtype", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("transactioncurrency_cardtype", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
