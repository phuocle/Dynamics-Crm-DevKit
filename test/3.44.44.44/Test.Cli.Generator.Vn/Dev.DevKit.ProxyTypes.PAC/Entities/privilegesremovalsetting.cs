#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Privileges Removal Setting
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("privilegesremovalsetting")]
	public partial class PrivilegesRemovalSetting : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the privilegesremovalsetting entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExtensionOfRecordId = "extensionofrecordid";
			public const string ExtensionOfRecordIdName = "extensionofrecordidname";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsAppendRemoved = "isappendremoved";
			public const string isappendremovedName = "isappendremovedname";
			public const string IsAppendToRemoved = "isappendtoremoved";
			public const string isappendtoremovedName = "isappendtoremovedname";
			public const string IsAssignRemoved = "isassignremoved";
			public const string isassignremovedName = "isassignremovedname";
			public const string IsCreateRemoved = "iscreateremoved";
			public const string iscreateremovedName = "iscreateremovedname";
			public const string IsCustomizable = "iscustomizable";
			public const string IsDeleteRemoved = "isdeleteremoved";
			public const string isdeleteremovedName = "isdeleteremovedname";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string IsReadRemoved = "isreadremoved";
			public const string isreadremovedName = "isreadremovedname";
			public const string IsWriteRemoved = "iswriteremoved";
			public const string iswriteremovedName = "iswriteremovedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string PrivilegesRemovalSettingId = "privilegesremovalsettingid";
			public const string Id = "privilegesremovalsettingid";
			public const string SolutionId = "solutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string privilegesremovalsetting_AsyncOperations = "privilegesremovalsetting_AsyncOperations";
			public const string privilegesremovalsetting_BulkDeleteFailures = "privilegesremovalsetting_BulkDeleteFailures";
			public const string privilegesremovalsetting_DuplicateBaseRecord = "privilegesremovalsetting_DuplicateBaseRecord";
			public const string privilegesremovalsetting_DuplicateMatchingRecord = "privilegesremovalsetting_DuplicateMatchingRecord";
			public const string privilegesremovalsetting_MailboxTrackingFolders = "privilegesremovalsetting_MailboxTrackingFolders";
			public const string privilegesremovalsetting_PrincipalObjectAttributeAccesses = "privilegesremovalsetting_PrincipalObjectAttributeAccesses";
			public const string privilegesremovalsetting_ProcessSession = "privilegesremovalsetting_ProcessSession";
			public const string privilegesremovalsetting_SyncErrors = "privilegesremovalsetting_SyncErrors";
			public const string privilegesremovalsetting_UserEntityInstanceDatas = "privilegesremovalsetting_UserEntityInstanceDatas";
			public const string lk_privilegesremovalsetting_createdby = "lk_privilegesremovalsetting_createdby";
			public const string lk_privilegesremovalsetting_createdonbehalfby = "lk_privilegesremovalsetting_createdonbehalfby";
			public const string lk_privilegesremovalsetting_modifiedby = "lk_privilegesremovalsetting_modifiedby";
			public const string lk_privilegesremovalsetting_modifiedonbehalfby = "lk_privilegesremovalsetting_modifiedonbehalfby";
			public const string organization_privilegesremovalsetting = "organization_privilegesremovalsetting";
			public const string privilegesremovalsetting_extensionofrecordid = "privilegesremovalsetting_extensionofrecordid";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public PrivilegesRemovalSetting() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "privilegesremovalsetting";
		
		public const string EntityLogicalCollectionName = "privilegesremovalsettings";
		
		public const string EntitySetName = "privilegesremovalsettings";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the Entity record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("extensionofrecordid")]
		public Microsoft.Xrm.Sdk.EntityReference ExtensionOfRecordId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("extensionofrecordid");
			}
			set
			{
				this.OnPropertyChanging("ExtensionOfRecordId");
				this.SetAttributeValue("extensionofrecordid", value);
				this.OnPropertyChanged("ExtensionOfRecordId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("extensionofrecordidname")]
		public string ExtensionOfRecordIdName
		{
			get
			{
				if (this.FormattedValues.Contains("extensionofrecordid"))
				{
					return this.FormattedValues["extensionofrecordid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Not Supported
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappendremoved")]
		public System.Nullable<bool> IsAppendRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappendremoved");
			}
			set
			{
				this.OnPropertyChanging("IsAppendRemoved");
				this.SetAttributeValue("isappendremoved", value);
				this.OnPropertyChanged("IsAppendRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappendremovedname")]
		public string isappendremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("isappendremoved"))
				{
					return this.FormattedValues["isappendremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Not Supported
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappendtoremoved")]
		public System.Nullable<bool> IsAppendToRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isappendtoremoved");
			}
			set
			{
				this.OnPropertyChanging("IsAppendToRemoved");
				this.SetAttributeValue("isappendtoremoved", value);
				this.OnPropertyChanged("IsAppendToRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isappendtoremovedname")]
		public string isappendtoremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("isappendtoremoved"))
				{
					return this.FormattedValues["isappendtoremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Not Supported
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isassignremoved")]
		public System.Nullable<bool> IsAssignRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isassignremoved");
			}
			set
			{
				this.OnPropertyChanging("IsAssignRemoved");
				this.SetAttributeValue("isassignremoved", value);
				this.OnPropertyChanged("IsAssignRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isassignremovedname")]
		public string isassignremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("isassignremoved"))
				{
					return this.FormattedValues["isassignremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Skip Create Privilege Check for the Entity, which means all authenticated users could create entity records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscreateremoved")]
		public System.Nullable<bool> IsCreateRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iscreateremoved");
			}
			set
			{
				this.OnPropertyChanging("IsCreateRemoved");
				this.SetAttributeValue("iscreateremoved", value);
				this.OnPropertyChanged("IsCreateRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscreateremovedname")]
		public string iscreateremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("iscreateremoved"))
				{
					return this.FormattedValues["iscreateremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.OnPropertyChanging("IsCustomizable");
				this.SetAttributeValue("iscustomizable", value);
				this.OnPropertyChanged("IsCustomizable");
			}
		}
		
		/// <summary>
		/// Skip Delete Privilege Check for the Entity, which means all authenticated users could delete entity records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdeleteremoved")]
		public System.Nullable<bool> IsDeleteRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isdeleteremoved");
			}
			set
			{
				this.OnPropertyChanging("IsDeleteRemoved");
				this.SetAttributeValue("isdeleteremoved", value);
				this.OnPropertyChanged("IsDeleteRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isdeleteremovedname")]
		public string isdeleteremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("isdeleteremoved"))
				{
					return this.FormattedValues["isdeleteremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Skip Read Privilege Check for the Entity, which means all authenticated users could read all entity records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isreadremoved")]
		public System.Nullable<bool> IsReadRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isreadremoved");
			}
			set
			{
				this.OnPropertyChanging("IsReadRemoved");
				this.SetAttributeValue("isreadremoved", value);
				this.OnPropertyChanged("IsReadRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isreadremovedname")]
		public string isreadremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("isreadremoved"))
				{
					return this.FormattedValues["isreadremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Skip Write Privilege Check for the Entity, which means all authenticated users could write to any entity records
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iswriteremoved")]
		public System.Nullable<bool> IsWriteRemoved
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("iswriteremoved");
			}
			set
			{
				this.OnPropertyChanging("IsWriteRemoved");
				this.SetAttributeValue("iswriteremoved", value);
				this.OnPropertyChanged("IsWriteRemoved");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iswriteremovedname")]
		public string iswriteremovedName
		{
			get
			{
				if (this.FormattedValues.Contains("iswriteremoved"))
				{
					return this.FormattedValues["iswriteremoved"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegesremovalsettingid")]
		public System.Nullable<System.Guid> PrivilegesRemovalSettingId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("privilegesremovalsettingid");
			}
			set
			{
				this.OnPropertyChanging("PrivilegesRemovalSettingId");
				this.SetAttributeValue("privilegesremovalsettingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("PrivilegesRemovalSettingId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("privilegesremovalsettingid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.PrivilegesRemovalSettingId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> privilegesremovalsetting_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("privilegesremovalsetting_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_AsyncOperations");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("privilegesremovalsetting_AsyncOperations", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> privilegesremovalsetting_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("privilegesremovalsetting_BulkDeleteFailures", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_BulkDeleteFailures");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("privilegesremovalsetting_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> privilegesremovalsetting_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("privilegesremovalsetting_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_DuplicateBaseRecord");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("privilegesremovalsetting_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> privilegesremovalsetting_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("privilegesremovalsetting_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_DuplicateMatchingRecord");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("privilegesremovalsetting_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> privilegesremovalsetting_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("privilegesremovalsetting_MailboxTrackingFolders", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_MailboxTrackingFolders");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("privilegesremovalsetting_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> privilegesremovalsetting_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("privilegesremovalsetting_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("privilegesremovalsetting_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> privilegesremovalsetting_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("privilegesremovalsetting_ProcessSession", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_ProcessSession");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("privilegesremovalsetting_ProcessSession", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> privilegesremovalsetting_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("privilegesremovalsetting_SyncErrors", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_SyncErrors");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("privilegesremovalsetting_SyncErrors", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> privilegesremovalsetting_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("privilegesremovalsetting_UserEntityInstanceDatas", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_UserEntityInstanceDatas");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("privilegesremovalsetting_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:1 lk_privilegesremovalsetting_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_privilegesremovalsetting_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_privilegesremovalsetting_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_privilegesremovalsetting_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_privilegesremovalsetting_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_privilegesremovalsetting_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_privilegesremovalsetting_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_privilegesremovalsetting_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_privilegesremovalsetting_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_privilegesremovalsetting_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_privilegesremovalsetting_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_privilegesremovalsetting_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_privilegesremovalsetting_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_privilegesremovalsetting_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_privilegesremovalsetting_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_privilegesremovalsetting_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_privilegesremovalsetting
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_privilegesremovalsetting")]
		public Dev.DevKit.ProxyTypes.Organization organization_privilegesremovalsetting
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_privilegesremovalsetting", null);
			}
		}
		
		/// <summary>
		/// N:1 privilegesremovalsetting_extensionofrecordid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("extensionofrecordid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_extensionofrecordid")]
		public Dev.DevKit.ProxyTypes.Entity_Ent privilegesremovalsetting_extensionofrecordid
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Entity_Ent>("privilegesremovalsetting_extensionofrecordid", null);
			}
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_extensionofrecordid");
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Entity_Ent>("privilegesremovalsetting_extensionofrecordid", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_extensionofrecordid");
			}
		}
	}
}
#pragma warning restore CS1591
