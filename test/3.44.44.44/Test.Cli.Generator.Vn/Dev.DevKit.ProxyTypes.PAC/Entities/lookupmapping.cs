#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Mã nguồn tra cứu cho ánh xạ tra cứu.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum lookupmapping_lookupsourcecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Ngun = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hthng = 1,
	}
	
	/// <summary>
	/// Thông tin về việc có cần phải xử lý ánh xạ tra cứu hay không.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum lookupmapping_processcode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Quytrnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bqua = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Nib = 3,
	}
	
	/// <summary>
	/// Trạng thái của ánh xạ tra cứu.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum lookupmapping_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của ánh xạ tra cứu.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum lookupmapping_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 0,
	}
	
	/// <summary>
	/// Trong bản đồ dữ liệu, ánh xạ thuộc tính tra cứu trong tệp nguồn tới Microsoft Dynamics 365.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("lookupmapping")]
	public partial class LookUpMapping : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the lookupmapping entity
		/// </summary>
		public partial class Fields
		{
			public const string ColumnMappingId = "columnmappingid";
			public const string ColumnMappingIdName = "columnmappingidname";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string IntroducedVersion = "introducedversion";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string LookUpAttributeName = "lookupattributename";
			public const string LookUpEntityName = "lookupentityname";
			public const string LookUpMappingId = "lookupmappingid";
			public const string Id = "lookupmappingid";
			public const string LookUpMappingIdUnique = "lookupmappingidunique";
			public const string LookUpSourceCode = "lookupsourcecode";
			public const string LookUpSourceCodeName = "lookupsourcecodename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverwriteTime = "overwritetime";
			public const string ProcessCode = "processcode";
			public const string ProcessCodeName = "processcodename";
			public const string SolutionId = "solutionid";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string TransformationParameterMappingId = "transformationparametermappingid";
			public const string userentityinstancedata_lookupmapping = "userentityinstancedata_lookupmapping";
			public const string lk_lookupmapping_createdby = "lk_lookupmapping_createdby";
			public const string lk_lookupmapping_createdonbehalfby = "lk_lookupmapping_createdonbehalfby";
			public const string lk_lookupmapping_modifiedby = "lk_lookupmapping_modifiedby";
			public const string lk_lookupmapping_modifiedonbehalfby = "lk_lookupmapping_modifiedonbehalfby";
			public const string LookUpMapping_ColumnMapping = "LookUpMapping_ColumnMapping";
			public const string LookUpMapping_TransformationParameterMapping = "LookUpMapping_TransformationParameterMapping";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public LookUpMapping() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "lookupmapping";
		
		public const string EntityLogicalCollectionName = "lookupmappings";
		
		public const string EntitySetName = "lookupmappings";
		
		public const int EntityTypeCode = 4419;
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ cột liên kết với ánh xạ tra cứu này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingid")]
		public Microsoft.Xrm.Sdk.EntityReference ColumnMappingId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("columnmappingid");
			}
			set
			{
				this.SetAttributeValue("columnmappingid", value);
			}
		}
		
		/// <summary>
		/// Tên của ánh xạ cột.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingidname")]
		public string ColumnMappingIdName
		{
			get
			{
				if (this.FormattedValues.Contains("columnmappingid"))
				{
					return this.FormattedValues["columnmappingid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Phiên bản có thành phần được đưa vào.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("introducedversion")]
		public string IntroducedVersion
		{
			get
			{
				return this.GetAttributeValue<string>("introducedversion");
			}
			set
			{
				this.SetAttributeValue("introducedversion", value);
			}
		}
		
		/// <summary>
		/// Thông tin chỉ định khả năng quản lý thành phần này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên của trường có tra cứu được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupattributename")]
		public string LookUpAttributeName
		{
			get
			{
				return this.GetAttributeValue<string>("lookupattributename");
			}
			set
			{
				this.SetAttributeValue("lookupattributename", value);
			}
		}
		
		/// <summary>
		/// Tên của thực thể có tra cứu được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupentityname")]
		public string LookUpEntityName
		{
			get
			{
				return this.GetAttributeValue<string>("lookupentityname");
			}
			set
			{
				this.SetAttributeValue("lookupentityname", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupmappingid")]
		public System.Nullable<System.Guid> LookUpMappingId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("lookupmappingid");
			}
			set
			{
				this.SetAttributeValue("lookupmappingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupmappingid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.LookUpMappingId = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của Ánh xạ Tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupmappingidunique")]
		public System.Nullable<System.Guid> LookUpMappingIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("lookupmappingidunique");
			}
		}
		
		/// <summary>
		/// Mã nguồn tra cứu cho ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupsourcecode")]
		public virtual lookupmapping_lookupsourcecode? LookUpSourceCode
		{
			get
			{
				return ((lookupmapping_lookupsourcecode?)(EntityOptionSetEnum.GetEnum(this, "lookupsourcecode")));
			}
			set
			{
				this.SetAttributeValue("lookupsourcecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên mã nguồn tra cứu cho ánh xạ tra cứu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lookupsourcecodename")]
		public string LookUpSourceCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("lookupsourcecode"))
				{
					return this.FormattedValues["lookupsourcecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sửa đổi ánh xạ tra cứu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi ánh xạ tra cứu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi ánh xạ tra cứu lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Thông tin về việc có cần phải xử lý ánh xạ tra cứu hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcode")]
		public virtual lookupmapping_processcode? ProcessCode
		{
			get
			{
				return ((lookupmapping_processcode?)(EntityOptionSetEnum.GetEnum(this, "processcode")));
			}
			set
			{
				this.SetAttributeValue("processcode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên mã quy trình cho ProcessCode
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processcodename")]
		public string ProcessCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("processcode"))
				{
					return this.FormattedValues["processcode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual lookupmapping_statecode? StateCode
		{
			get
			{
				return ((lookupmapping_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
		}
		
		/// <summary>
		/// Tên trạng thái của ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual lookupmapping_statuscode? StatusCode
		{
			get
			{
				return ((lookupmapping_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		/// <summary>
		/// Tên lý do dẫn đến trạng thái của ánh xạ tra cứu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của ánh xạ tham số chuyển đổi liên kết với ánh xạ tra cứu này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transformationparametermappingid")]
		public Microsoft.Xrm.Sdk.EntityReference TransformationParameterMappingId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transformationparametermappingid");
			}
			set
			{
				this.SetAttributeValue("transformationparametermappingid", value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_lookupmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_lookupmapping")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_lookupmapping
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_lookupmapping", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_lookupmapping", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_lookupmapping_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_lookupmapping_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_lookupmapping_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_lookupmapping_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_lookupmapping_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_lookupmapping_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_lookupmapping_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_lookupmapping_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_lookupmapping_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_lookupmapping_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_lookupmapping_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_lookupmapping_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_lookupmapping_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_lookupmapping_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_lookupmapping_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_lookupmapping_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 LookUpMapping_ColumnMapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnmappingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("LookUpMapping_ColumnMapping")]
		public Dev.DevKit.ProxyTypes.ColumnMapping LookUpMapping_ColumnMapping
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.ColumnMapping>("LookUpMapping_ColumnMapping", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.ColumnMapping>("LookUpMapping_ColumnMapping", null, value);
			}
		}
		
		/// <summary>
		/// N:1 LookUpMapping_TransformationParameterMapping
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transformationparametermappingid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("LookUpMapping_TransformationParameterMapping")]
		public Dev.DevKit.ProxyTypes.TransformationParameterMapping LookUpMapping_TransformationParameterMapping
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransformationParameterMapping>("LookUpMapping_TransformationParameterMapping", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransformationParameterMapping>("LookUpMapping_TransformationParameterMapping", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
