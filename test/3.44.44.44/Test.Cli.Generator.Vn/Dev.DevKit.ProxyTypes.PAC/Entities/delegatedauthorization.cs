#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Type of provider.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum delegatedauthorization_providertype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		None = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		SharePoint = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Roadmap = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		MCSBot = 3,
	}
	
	/// <summary>
	/// Status of the DelegatedAuthorization
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum delegatedauthorization_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the DelegatedAuthorization
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum delegatedauthorization_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	/// <summary>
	/// Context for delegated authorization.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("delegatedauthorization")]
	public partial class DelegatedAuthorization : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the delegatedauthorization entity
		/// </summary>
		public partial class Fields
		{
			public const string BotId = "botid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string DelegatedAuthorizationId = "delegatedauthorizationid";
			public const string Id = "delegatedauthorizationid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string ProviderType = "providertype";
			public const string providertypeName = "providertypename";
			public const string RoadmapProjectId = "roadmapprojectid";
			public const string SharePointListId = "sharepointlistid";
			public const string SharePointSite = "sharepointsite";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string delegatedauthorization_AsyncOperations = "delegatedauthorization_AsyncOperations";
			public const string delegatedauthorization_BulkDeleteFailures = "delegatedauthorization_BulkDeleteFailures";
			public const string delegatedauthorization_MailboxTrackingFolders = "delegatedauthorization_MailboxTrackingFolders";
			public const string delegatedauthorization_PrincipalObjectAttributeAccesses = "delegatedauthorization_PrincipalObjectAttributeAccesses";
			public const string delegatedauthorization_ProcessSession = "delegatedauthorization_ProcessSession";
			public const string delegatedauthorization_SyncErrors = "delegatedauthorization_SyncErrors";
			public const string delegatedauthorization_UserEntityInstanceDatas = "delegatedauthorization_UserEntityInstanceDatas";
			public const string team_delegatedauthorization = "team_delegatedauthorization";
			public const string lk_delegatedauthorization_createdby = "lk_delegatedauthorization_createdby";
			public const string lk_delegatedauthorization_createdonbehalfby = "lk_delegatedauthorization_createdonbehalfby";
			public const string lk_delegatedauthorization_modifiedby = "lk_delegatedauthorization_modifiedby";
			public const string lk_delegatedauthorization_modifiedonbehalfby = "lk_delegatedauthorization_modifiedonbehalfby";
			public const string organization_delegatedauthorization = "organization_delegatedauthorization";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public DelegatedAuthorization() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "delegatedauthorization";
		
		public const string EntityLogicalCollectionName = "delegatedauthorizations";
		
		public const string EntitySetName = "DelegatedAuthorizations";
		
		public const int EntityTypeCode = 10055;
		
		/// <summary>
		/// Identifier for MCS Bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("botid")]
		public System.Nullable<System.Guid> BotId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("botid");
			}
			set
			{
				this.SetAttributeValue("botid", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedauthorizationid")]
		public System.Nullable<System.Guid> DelegatedAuthorizationId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("delegatedauthorizationid");
			}
			set
			{
				this.SetAttributeValue("delegatedauthorizationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("delegatedauthorizationid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.DelegatedAuthorizationId = value;
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// The name of delegated authorization (generally unused)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// Type of provider.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("providertype")]
		public virtual delegatedauthorization_providertype? ProviderType
		{
			get
			{
				return ((delegatedauthorization_providertype?)(EntityOptionSetEnum.GetEnum(this, "providertype")));
			}
			set
			{
				this.SetAttributeValue("providertype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("providertypename")]
		public string providertypeName
		{
			get
			{
				if (this.FormattedValues.Contains("providertype"))
				{
					return this.FormattedValues["providertype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Identifier for Project Roadmap
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("roadmapprojectid")]
		public System.Nullable<System.Guid> RoadmapProjectId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("roadmapprojectid");
			}
			set
			{
				this.SetAttributeValue("roadmapprojectid", value);
			}
		}
		
		/// <summary>
		/// Identifier for SharePoint list
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointlistid")]
		public System.Nullable<System.Guid> SharePointListId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("sharepointlistid");
			}
			set
			{
				this.SetAttributeValue("sharepointlistid", value);
			}
		}
		
		/// <summary>
		/// SharePoint site (URL)
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sharepointsite")]
		public string SharePointSite
		{
			get
			{
				return this.GetAttributeValue<string>("sharepointsite");
			}
			set
			{
				this.SetAttributeValue("sharepointsite", value);
			}
		}
		
		/// <summary>
		/// Status of the DelegatedAuthorization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual delegatedauthorization_statecode? statecode
		{
			get
			{
				return ((delegatedauthorization_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the DelegatedAuthorization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual delegatedauthorization_statuscode? statuscode
		{
			get
			{
				return ((delegatedauthorization_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> delegatedauthorization_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("delegatedauthorization_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("delegatedauthorization_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> delegatedauthorization_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("delegatedauthorization_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("delegatedauthorization_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> delegatedauthorization_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("delegatedauthorization_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("delegatedauthorization_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> delegatedauthorization_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("delegatedauthorization_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("delegatedauthorization_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> delegatedauthorization_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("delegatedauthorization_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("delegatedauthorization_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> delegatedauthorization_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("delegatedauthorization_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("delegatedauthorization_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N delegatedauthorization_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("delegatedauthorization_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> delegatedauthorization_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("delegatedauthorization_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("delegatedauthorization_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// 1:N team_delegatedauthorization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_delegatedauthorization")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.Team> team_delegatedauthorization
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.Team>("team_delegatedauthorization", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.Team>("team_delegatedauthorization", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_delegatedauthorization_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_delegatedauthorization_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_delegatedauthorization_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_delegatedauthorization_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_delegatedauthorization_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_delegatedauthorization_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_delegatedauthorization_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_delegatedauthorization_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_delegatedauthorization_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_delegatedauthorization_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_delegatedauthorization_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_delegatedauthorization_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_delegatedauthorization_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_delegatedauthorization_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_delegatedauthorization_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_delegatedauthorization_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_delegatedauthorization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_delegatedauthorization")]
		public Dev.DevKit.ProxyTypes.Organization organization_delegatedauthorization
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_delegatedauthorization", null);
			}
		}
	}
}
#pragma warning restore CS1591
