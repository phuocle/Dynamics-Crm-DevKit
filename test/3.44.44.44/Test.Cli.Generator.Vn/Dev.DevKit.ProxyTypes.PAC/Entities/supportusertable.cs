#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Status of the SupportUserTable
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum supportusertable_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the SupportUserTable
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum supportusertable_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("supportusertable")]
	public partial class supportusertable : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the supportusertable entity
		/// </summary>
		public partial class Fields
		{
			public const string AADUserObjectId = "aaduserobjectid";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string EnabledforSoftDelete = "enabledforsoftdelete";
			public const string enabledforsoftdeleteName = "enabledforsoftdeletename";
			public const string ExpiryDateTime = "expirydatetime";
			public const string IdentityProvider = "identityprovider";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsActive = "isactive";
			public const string isactiveName = "isactivename";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OrganizationId = "organizationid";
			public const string OrganizationIdName = "organizationidname";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string supportusertableId = "supportusertableid";
			public const string Id = "supportusertableid";
			public const string TenantId = "tenantid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UPN = "upn";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string supportusertable_AsyncOperations = "supportusertable_AsyncOperations";
			public const string supportusertable_BulkDeleteFailures = "supportusertable_BulkDeleteFailures";
			public const string supportusertable_DuplicateBaseRecord = "supportusertable_DuplicateBaseRecord";
			public const string supportusertable_DuplicateMatchingRecord = "supportusertable_DuplicateMatchingRecord";
			public const string supportusertable_MailboxTrackingFolders = "supportusertable_MailboxTrackingFolders";
			public const string supportusertable_PrincipalObjectAttributeAccesses = "supportusertable_PrincipalObjectAttributeAccesses";
			public const string supportusertable_ProcessSession = "supportusertable_ProcessSession";
			public const string supportusertable_SyncErrors = "supportusertable_SyncErrors";
			public const string supportusertable_UserEntityInstanceDatas = "supportusertable_UserEntityInstanceDatas";
			public const string lk_supportusertable_createdby = "lk_supportusertable_createdby";
			public const string lk_supportusertable_createdonbehalfby = "lk_supportusertable_createdonbehalfby";
			public const string lk_supportusertable_modifiedby = "lk_supportusertable_modifiedby";
			public const string lk_supportusertable_modifiedonbehalfby = "lk_supportusertable_modifiedonbehalfby";
			public const string organization_supportusertable = "organization_supportusertable";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public supportusertable() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "supportusertable";
		
		public const string EntityLogicalCollectionName = "supportusertables";
		
		public const string EntitySetName = "supportusertables";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// AAD ObjectId of the support user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aaduserobjectid")]
		public string AADUserObjectId
		{
			get
			{
				return this.GetAttributeValue<string>("aaduserobjectid");
			}
			set
			{
				this.OnPropertyChanging("AADUserObjectId");
				this.SetAttributeValue("aaduserobjectid", value);
				this.OnPropertyChanged("AADUserObjectId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Status of the record for deletion
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforsoftdelete")]
		public virtual field_security_permission_type? EnabledforSoftDelete
		{
			get
			{
				return ((field_security_permission_type?)(EntityOptionSetEnum.GetEnum(this, "enabledforsoftdelete")));
			}
			set
			{
				this.OnPropertyChanging("EnabledforSoftDelete");
				this.SetAttributeValue("enabledforsoftdelete", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("EnabledforSoftDelete");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enabledforsoftdeletename")]
		public string enabledforsoftdeleteName
		{
			get
			{
				if (this.FormattedValues.Contains("enabledforsoftdelete"))
				{
					return this.FormattedValues["enabledforsoftdelete"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Expiration time for the User access.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expirydatetime")]
		public System.Nullable<System.DateTime> ExpiryDateTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("expirydatetime");
			}
			set
			{
				this.OnPropertyChanging("ExpiryDateTime");
				this.SetAttributeValue("expirydatetime", value);
				this.OnPropertyChanged("ExpiryDateTime");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("identityprovider")]
		public string IdentityProvider
		{
			get
			{
				return this.GetAttributeValue<string>("identityprovider");
			}
			set
			{
				this.OnPropertyChanging("IdentityProvider");
				this.SetAttributeValue("identityprovider", value);
				this.OnPropertyChanged("IdentityProvider");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Status of the User record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactive")]
		public virtual field_security_permission_type? IsActive
		{
			get
			{
				return ((field_security_permission_type?)(EntityOptionSetEnum.GetEnum(this, "isactive")));
			}
			set
			{
				this.OnPropertyChanging("IsActive");
				this.SetAttributeValue("isactive", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("IsActive");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactivename")]
		public string isactiveName
		{
			get
			{
				if (this.FormattedValues.Contains("isactive"))
				{
					return this.FormattedValues["isactive"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for the organization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationidname")]
		public string OrganizationIdName
		{
			get
			{
				if (this.FormattedValues.Contains("organizationid"))
				{
					return this.FormattedValues["organizationid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Status of the SupportUserTable
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual supportusertable_statecode? statecode
		{
			get
			{
				return ((supportusertable_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.OnPropertyChanging("statecode");
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("statecode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Reason for the status of the SupportUserTable
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual supportusertable_statuscode? statuscode
		{
			get
			{
				return ((supportusertable_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("statuscode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("statuscode");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportusertableid")]
		public System.Nullable<System.Guid> supportusertableId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("supportusertableid");
			}
			set
			{
				this.OnPropertyChanging("supportusertableId");
				this.SetAttributeValue("supportusertableid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("supportusertableId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("supportusertableid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.supportusertableId = value;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("tenantid")]
		public string TenantId
		{
			get
			{
				return this.GetAttributeValue<string>("tenantid");
			}
			set
			{
				this.OnPropertyChanging("TenantId");
				this.SetAttributeValue("tenantid", value);
				this.OnPropertyChanged("TenantId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("upn")]
		public string UPN
		{
			get
			{
				return this.GetAttributeValue<string>("upn");
			}
			set
			{
				this.OnPropertyChanging("UPN");
				this.SetAttributeValue("upn", value);
				this.OnPropertyChanged("UPN");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> supportusertable_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("supportusertable_AsyncOperations", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_AsyncOperations");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("supportusertable_AsyncOperations", null, value);
				this.OnPropertyChanged("supportusertable_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> supportusertable_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("supportusertable_BulkDeleteFailures", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_BulkDeleteFailures");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("supportusertable_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("supportusertable_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> supportusertable_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("supportusertable_DuplicateBaseRecord", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_DuplicateBaseRecord");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("supportusertable_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("supportusertable_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> supportusertable_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("supportusertable_DuplicateMatchingRecord", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_DuplicateMatchingRecord");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("supportusertable_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("supportusertable_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> supportusertable_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("supportusertable_MailboxTrackingFolders", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_MailboxTrackingFolders");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("supportusertable_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("supportusertable_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> supportusertable_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("supportusertable_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("supportusertable_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("supportusertable_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> supportusertable_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("supportusertable_ProcessSession", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_ProcessSession");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("supportusertable_ProcessSession", null, value);
				this.OnPropertyChanged("supportusertable_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> supportusertable_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("supportusertable_SyncErrors", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_SyncErrors");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("supportusertable_SyncErrors", null, value);
				this.OnPropertyChanged("supportusertable_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N supportusertable_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("supportusertable_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> supportusertable_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("supportusertable_UserEntityInstanceDatas", null);
			}
			set
			{
				this.OnPropertyChanging("supportusertable_UserEntityInstanceDatas");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("supportusertable_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("supportusertable_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:1 lk_supportusertable_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_supportusertable_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_supportusertable_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_supportusertable_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_supportusertable_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_supportusertable_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_supportusertable_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_supportusertable_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_supportusertable_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_supportusertable_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_supportusertable_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_supportusertable_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_supportusertable_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_supportusertable_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_supportusertable_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_supportusertable_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 organization_supportusertable
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_supportusertable")]
		public Dev.DevKit.ProxyTypes.Organization organization_supportusertable
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Organization>("organization_supportusertable", null);
			}
		}
	}
}
#pragma warning restore CS1591
