#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Thiết đặt cho việc tham gia miền của các máy trong nhóm này.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_domainsetting
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngc = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		thamgiaAAD = 1,
	}
	
	/// <summary>
	/// Chỉ sử dụng nội bộ
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_flowgrouptype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngdngkha = 545940000,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tiuchun = 545940001,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Mcnh = 545940002,
	}
	
	/// <summary>
	/// Loại quản lý của nhóm máy
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_managementtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khachhang = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cqunl = 1,
	}
	
	/// <summary>
	/// Loại hàng đợi ưa thích của người dùng trong một nhóm máy
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_preferredqueuingtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		FIFO = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ExtendedQueuePrioritization = 1,
	}
	
	/// <summary>
	/// Trạng thái cung cấp của nhóm máy được quản lý.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_provisioningstate
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		to = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angcungcp = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cungcp = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Li = 3,
	}
	
	/// <summary>
	/// Trạng thái của Nhóm máy trong dòng quy trình
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Maintenance = 2,
	}
	
	/// <summary>
	/// Lý do dẫn đến trạng thái của Nhóm máy trong dòng quy trình
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum flowmachinegroup_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hinhot = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghoatng = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		ManualMaintenance = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		KeyExpired = 4,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HmgIslandMove = 5,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		cchly = 6,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		HmgCmkOperation = 7,
	}
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("flowmachinegroup")]
	public partial class flowmachinegroup : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the flowmachinegroup entity
		/// </summary>
		public partial class Fields
		{
			public const string ComponentIdUnique = "componentidunique";
			public const string ComponentState = "componentstate";
			public const string componentstateName = "componentstatename";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string Description = "description";
			public const string DomainSetting = "domainsetting";
			public const string domainsettingName = "domainsettingname";
			public const string FlowGroupType = "flowgrouptype";
			public const string flowgrouptypeName = "flowgrouptypename";
			public const string flowmachinegroupId = "flowmachinegroupid";
			public const string Id = "flowmachinegroupid";
			public const string flowmachineimage = "flowmachineimage";
			public const string flowmachineimageName = "flowmachineimagename";
			public const string flowmachinenetwork = "flowmachinenetwork";
			public const string flowmachinenetworkName = "flowmachinenetworkname";
			public const string GroupMetadata = "groupmetadata";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string ismanagedName = "ismanagedname";
			public const string KeyCreationDate = "keycreationdate";
			public const string KeyExpiryGracePeriod = "keyexpirygraceperiod";
			public const string KeyValidityPeriod = "keyvalidityperiod";
			public const string ManagementType = "managementtype";
			public const string managementtypeName = "managementtypename";
			public const string MaxManagedMachineCount = "maxmanagedmachinecount";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwnerIdName = "owneridname";
			public const string OwnerIdYomiName = "owneridyominame";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningBusinessUnitName = "owningbusinessunitname";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PasswordChangedBy = "passwordchangedby";
			public const string PasswordChangedByName = "passwordchangedbyname";
			public const string PasswordChangedByYomiName = "passwordchangedbyyominame";
			public const string PasswordChangedDate = "passwordchangeddate";
			public const string PreferredQueuingType = "preferredqueuingtype";
			public const string preferredqueuingtypeName = "preferredqueuingtypename";
			public const string PrimaryKeyPackage = "primarykeypackage";
			public const string PrimaryPublicKey = "primarypublickey";
			public const string ProvisioningError = "provisioningerror";
			public const string ProvisioningState = "provisioningstate";
			public const string provisioningstateName = "provisioningstatename";
			public const string RotationStartedBy = "rotationstartedby";
			public const string RotationStartedByName = "rotationstartedbyname";
			public const string RotationStartedByYomiName = "rotationstartedbyyominame";
			public const string SecondaryKeyPackage = "secondarykeypackage";
			public const string SecondaryPublicKey = "secondarypublickey";
			public const string SolutionId = "solutionid";
			public const string statecode = "statecode";
			public const string statecodeName = "statecodename";
			public const string statuscode = "statuscode";
			public const string statuscodeName = "statuscodename";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string trytoreusewindowssession = "trytoreusewindowssession";
			public const string trytoreusewindowssessionName = "trytoreusewindowssessionname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string flowcapacityassignment_flowmachinegroup = "flowcapacityassignment_flowmachinegroup";
			public const string flowcredentialapplication_flowmachinegroup = "flowcredentialapplication_flowmachinegroup";
			public const string flowevent_flowmachinegroup = "flowevent_flowmachinegroup";
			public const string flowmachinegroup_AsyncOperations = "flowmachinegroup_AsyncOperations";
			public const string flowmachinegroup_BulkDeleteFailures = "flowmachinegroup_BulkDeleteFailures";
			public const string flowmachinegroup_DuplicateBaseRecord = "flowmachinegroup_DuplicateBaseRecord";
			public const string flowmachinegroup_DuplicateMatchingRecord = "flowmachinegroup_DuplicateMatchingRecord";
			public const string flowmachinegroup_flowlog_flowmachinegroupid = "flowmachinegroup_flowlog_flowmachinegroupid";
			public const string flowmachinegroup_flowmachine = "flowmachinegroup_flowmachine";
			public const string flowmachinegroup_flowsession_MachineGroupId = "flowmachinegroup_flowsession_MachineGroupId";
			public const string flowmachinegroup_MailboxTrackingFolders = "flowmachinegroup_MailboxTrackingFolders";
			public const string flowmachinegroup_PrincipalObjectAttributeAccesses = "flowmachinegroup_PrincipalObjectAttributeAccesses";
			public const string flowmachinegroup_ProcessSession = "flowmachinegroup_ProcessSession";
			public const string flowmachinegroup_SyncErrors = "flowmachinegroup_SyncErrors";
			public const string flowmachinegroup_UserEntityInstanceDatas = "flowmachinegroup_UserEntityInstanceDatas";
			public const string business_unit_flowmachinegroup = "business_unit_flowmachinegroup";
			public const string flowmachinegroup_flowmachineimage = "flowmachinegroup_flowmachineimage";
			public const string flowmachinegroup_flowmachinenetwork = "flowmachinegroup_flowmachinenetwork";
			public const string flowmachinegroup_PasswordChangedBy = "flowmachinegroup_PasswordChangedBy";
			public const string flowmachinegroup_RotationStartedBy = "flowmachinegroup_RotationStartedBy";
			public const string lk_flowmachinegroup_createdby = "lk_flowmachinegroup_createdby";
			public const string lk_flowmachinegroup_createdonbehalfby = "lk_flowmachinegroup_createdonbehalfby";
			public const string lk_flowmachinegroup_modifiedby = "lk_flowmachinegroup_modifiedby";
			public const string lk_flowmachinegroup_modifiedonbehalfby = "lk_flowmachinegroup_modifiedonbehalfby";
			public const string team_flowmachinegroup = "team_flowmachinegroup";
			public const string user_flowmachinegroup = "user_flowmachinegroup";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public flowmachinegroup() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "flowmachinegroup";
		
		public const string EntityLogicalCollectionName = "flowmachinegroups";
		
		public const string EntitySetName = "flowmachinegroups";
		
		public const int EntityTypeCode = 10083;
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentidunique")]
		public System.Nullable<System.Guid> ComponentIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("componentidunique");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstatename")]
		public string componentstateName
		{
			get
			{
				if (this.FormattedValues.Contains("componentstate"))
				{
					return this.FormattedValues["componentstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mô tả về Nhóm máy trong dòng quy trình này
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.SetAttributeValue("description", value);
			}
		}
		
		/// <summary>
		/// Thiết đặt cho việc tham gia miền của các máy trong nhóm này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("domainsetting")]
		public virtual flowmachinegroup_domainsetting? DomainSetting
		{
			get
			{
				return ((flowmachinegroup_domainsetting?)(EntityOptionSetEnum.GetEnum(this, "domainsetting")));
			}
			set
			{
				this.SetAttributeValue("domainsetting", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("domainsettingname")]
		public string domainsettingName
		{
			get
			{
				if (this.FormattedValues.Contains("domainsetting"))
				{
					return this.FormattedValues["domainsetting"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowgrouptype")]
		public virtual flowmachinegroup_flowgrouptype? FlowGroupType
		{
			get
			{
				return ((flowmachinegroup_flowgrouptype?)(EntityOptionSetEnum.GetEnum(this, "flowgrouptype")));
			}
			set
			{
				this.SetAttributeValue("flowgrouptype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowgrouptypename")]
		public string flowgrouptypeName
		{
			get
			{
				if (this.FormattedValues.Contains("flowgrouptype"))
				{
					return this.FormattedValues["flowgrouptype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của phiên bản thực thể
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinegroupid")]
		public System.Nullable<System.Guid> flowmachinegroupId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("flowmachinegroupid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinegroupid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho Hình ảnh máy trong dòng quy trình được liên kết với Nhóm máy trong dòng quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachineimage")]
		public Microsoft.Xrm.Sdk.EntityReference flowmachineimage
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("flowmachineimage");
			}
			set
			{
				this.SetAttributeValue("flowmachineimage", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachineimagename")]
		public string flowmachineimageName
		{
			get
			{
				if (this.FormattedValues.Contains("flowmachineimage"))
				{
					return this.FormattedValues["flowmachineimage"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho Mạng máy trong dòng quy trình được liên kết với Nhóm máy trong dòng quy trình.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinenetwork")]
		public Microsoft.Xrm.Sdk.EntityReference flowmachinenetwork
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("flowmachinenetwork");
			}
			set
			{
				this.SetAttributeValue("flowmachinenetwork", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinenetworkname")]
		public string flowmachinenetworkName
		{
			get
			{
				if (this.FormattedValues.Contains("flowmachinenetwork"))
				{
					return this.FormattedValues["flowmachinenetwork"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupmetadata")]
		public string GroupMetadata
		{
			get
			{
				return this.GetAttributeValue<string>("groupmetadata");
			}
			set
			{
				this.SetAttributeValue("groupmetadata", value);
			}
		}
		
		/// <summary>
		/// Số thứ tự của quá trình nhập đã tạo bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Indicates whether the solution component is part of a managed solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string ismanagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày tạo khóa chính của nhóm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keycreationdate")]
		public System.Nullable<System.DateTime> KeyCreationDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("keycreationdate");
			}
			set
			{
				this.SetAttributeValue("keycreationdate", value);
			}
		}
		
		/// <summary>
		/// Thời kì gia hạn để các máy và kết nối cập nhật trước khi xoay vòng chứng chỉ. Tính theo phút.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyexpirygraceperiod")]
		public System.Nullable<int> KeyExpiryGracePeriod
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("keyexpirygraceperiod");
			}
			set
			{
				this.SetAttributeValue("keyexpirygraceperiod", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("keyvalidityperiod")]
		public System.Nullable<int> KeyValidityPeriod
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("keyvalidityperiod");
			}
			set
			{
				this.SetAttributeValue("keyvalidityperiod", value);
			}
		}
		
		/// <summary>
		/// Loại quản lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managementtype")]
		public virtual flowmachinegroup_managementtype? ManagementType
		{
			get
			{
				return ((flowmachinegroup_managementtype?)(EntityOptionSetEnum.GetEnum(this, "managementtype")));
			}
			set
			{
				this.SetAttributeValue("managementtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("managementtypename")]
		public string managementtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("managementtype"))
				{
					return this.FormattedValues["managementtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số lượng máy được quản lý tối đa. Chỉ sử dụng cho các nhóm máy được quản lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("maxmanagedmachinecount")]
		public System.Nullable<int> MaxManagedMachineCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("maxmanagedmachinecount");
			}
			set
			{
				this.SetAttributeValue("maxmanagedmachinecount", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tên thực thể tùy chỉnh.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.SetAttributeValue("name", value);
			}
		}
		
		/// <summary>
		/// Ngày và giờ di chuyển bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			set
			{
				this.SetAttributeValue("overriddencreatedon", value);
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// ID chủ sở hữu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.SetAttributeValue("ownerid", value);
			}
		}
		
		/// <summary>
		/// Name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridname")]
		public string OwnerIdName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Yomi name of the owner
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owneridyominame")]
		public string OwnerIdYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("ownerid"))
				{
					return this.FormattedValues["ownerid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunitname")]
		public string OwningBusinessUnitName
		{
			get
			{
				if (this.FormattedValues.Contains("owningbusinessunit"))
				{
					return this.FormattedValues["owningbusinessunit"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho nhóm sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất cho người dùng sở hữu bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Người dùng đã khởi tạo việc thay đổi mật khẩu lần gần nhất.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordchangedby")]
		public Microsoft.Xrm.Sdk.EntityReference PasswordChangedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("passwordchangedby");
			}
			set
			{
				this.SetAttributeValue("passwordchangedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordchangedbyname")]
		public string PasswordChangedByName
		{
			get
			{
				if (this.FormattedValues.Contains("passwordchangedby"))
				{
					return this.FormattedValues["passwordchangedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordchangedbyyominame")]
		public string PasswordChangedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("passwordchangedby"))
				{
					return this.FormattedValues["passwordchangedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày thay đổi mật khẩu gần nhất.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordchangeddate")]
		public System.Nullable<System.DateTime> PasswordChangedDate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("passwordchangeddate");
			}
			set
			{
				this.SetAttributeValue("passwordchangeddate", value);
			}
		}
		
		/// <summary>
		/// Cho biết loại hàng đợi ưa thích trong một nhóm máy nhất định
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredqueuingtype")]
		public virtual flowmachinegroup_preferredqueuingtype? PreferredQueuingType
		{
			get
			{
				return ((flowmachinegroup_preferredqueuingtype?)(EntityOptionSetEnum.GetEnum(this, "preferredqueuingtype")));
			}
			set
			{
				this.SetAttributeValue("preferredqueuingtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("preferredqueuingtypename")]
		public string preferredqueuingtypeName
		{
			get
			{
				if (this.FormattedValues.Contains("preferredqueuingtype"))
				{
					return this.FormattedValues["preferredqueuingtype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarykeypackage")]
		public string PrimaryKeyPackage
		{
			get
			{
				return this.GetAttributeValue<string>("primarykeypackage");
			}
			set
			{
				this.SetAttributeValue("primarykeypackage", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("primarypublickey")]
		public string PrimaryPublicKey
		{
			get
			{
				return this.GetAttributeValue<string>("primarypublickey");
			}
			set
			{
				this.SetAttributeValue("primarypublickey", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("provisioningerror")]
		public string ProvisioningError
		{
			get
			{
				return this.GetAttributeValue<string>("provisioningerror");
			}
			set
			{
				this.SetAttributeValue("provisioningerror", value);
			}
		}
		
		/// <summary>
		/// Trạng thái cung cấp của nhóm máy được quản lý.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("provisioningstate")]
		public virtual flowmachinegroup_provisioningstate? ProvisioningState
		{
			get
			{
				return ((flowmachinegroup_provisioningstate?)(EntityOptionSetEnum.GetEnum(this, "provisioningstate")));
			}
			set
			{
				this.SetAttributeValue("provisioningstate", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("provisioningstatename")]
		public string provisioningstateName
		{
			get
			{
				if (this.FormattedValues.Contains("provisioningstate"))
				{
					return this.FormattedValues["provisioningstate"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Người dùng đã khởi tạo việc xoay vòng khóa nhóm.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rotationstartedby")]
		public Microsoft.Xrm.Sdk.EntityReference RotationStartedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("rotationstartedby");
			}
			set
			{
				this.SetAttributeValue("rotationstartedby", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rotationstartedbyname")]
		public string RotationStartedByName
		{
			get
			{
				if (this.FormattedValues.Contains("rotationstartedby"))
				{
					return this.FormattedValues["rotationstartedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rotationstartedbyyominame")]
		public string RotationStartedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("rotationstartedby"))
				{
					return this.FormattedValues["rotationstartedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("secondarykeypackage")]
		public string SecondaryKeyPackage
		{
			get
			{
				return this.GetAttributeValue<string>("secondarykeypackage");
			}
			set
			{
				this.SetAttributeValue("secondarykeypackage", value);
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("secondarypublickey")]
		public string SecondaryPublicKey
		{
			get
			{
				return this.GetAttributeValue<string>("secondarypublickey");
			}
			set
			{
				this.SetAttributeValue("secondarypublickey", value);
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Trạng thái của Nhóm máy trong dòng quy trình
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual flowmachinegroup_statecode? statecode
		{
			get
			{
				return ((flowmachinegroup_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string statecodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Lý do dẫn đến trạng thái của Nhóm máy trong dòng quy trình
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual flowmachinegroup_statuscode? statuscode
		{
			get
			{
				return ((flowmachinegroup_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string statuscodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Cho biết liệu chúng tôi có cố gắng sử dụng lại các phiên Windows không mở khóa hay không. Giá trị mặc định là Không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytoreusewindowssession")]
		public System.Nullable<bool> trytoreusewindowssession
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("trytoreusewindowssession");
			}
			set
			{
				this.SetAttributeValue("trytoreusewindowssession", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("trytoreusewindowssessionname")]
		public string trytoreusewindowssessionName
		{
			get
			{
				if (this.FormattedValues.Contains("trytoreusewindowssession"))
				{
					return this.FormattedValues["trytoreusewindowssession"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã dùng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N flowcapacityassignment_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcapacityassignment_flowmachinegroup")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowcapacityassignment> flowcapacityassignment_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowcapacityassignment>("flowcapacityassignment_flowmachinegroup", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowcapacityassignment>("flowcapacityassignment_flowmachinegroup", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowcredentialapplication_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowcredentialapplication_flowmachinegroup")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowcredentialapplication> flowcredentialapplication_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowcredentialapplication>("flowcredentialapplication_flowmachinegroup", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowcredentialapplication>("flowcredentialapplication_flowmachinegroup", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowevent_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowevent_flowmachinegroup")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowevent> flowevent_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowevent>("flowevent_flowmachinegroup", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowevent>("flowevent_flowmachinegroup", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.AsyncOperation> flowmachinegroup_AsyncOperations
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("flowmachinegroup_AsyncOperations", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.AsyncOperation>("flowmachinegroup_AsyncOperations", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.BulkDeleteFailure> flowmachinegroup_BulkDeleteFailures
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("flowmachinegroup_BulkDeleteFailures", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.BulkDeleteFailure>("flowmachinegroup_BulkDeleteFailures", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> flowmachinegroup_DuplicateBaseRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowmachinegroup_DuplicateBaseRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowmachinegroup_DuplicateBaseRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.DuplicateRecord> flowmachinegroup_DuplicateMatchingRecord
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowmachinegroup_DuplicateMatchingRecord", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.DuplicateRecord>("flowmachinegroup_DuplicateMatchingRecord", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_flowlog_flowmachinegroupid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_flowlog_flowmachinegroupid")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowlog> flowmachinegroup_flowlog_flowmachinegroupid
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowlog>("flowmachinegroup_flowlog_flowmachinegroupid", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowlog>("flowmachinegroup_flowlog_flowmachinegroupid", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_flowmachine
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_flowmachine")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowmachine> flowmachinegroup_flowmachine
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowmachine>("flowmachinegroup_flowmachine", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowmachine>("flowmachinegroup_flowmachine", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_flowsession_MachineGroupId
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_flowsession_MachineGroupId")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.flowsession> flowmachinegroup_flowsession_MachineGroupId
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.flowsession>("flowmachinegroup_flowsession_MachineGroupId", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.flowsession>("flowmachinegroup_flowsession_MachineGroupId", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.MailboxTrackingFolder> flowmachinegroup_MailboxTrackingFolders
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("flowmachinegroup_MailboxTrackingFolders", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.MailboxTrackingFolder>("flowmachinegroup_MailboxTrackingFolders", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> flowmachinegroup_PrincipalObjectAttributeAccesses
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("flowmachinegroup_PrincipalObjectAttributeAccesses", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("flowmachinegroup_PrincipalObjectAttributeAccesses", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_ProcessSession")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.ProcessSession> flowmachinegroup_ProcessSession
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("flowmachinegroup_ProcessSession", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.ProcessSession>("flowmachinegroup_ProcessSession", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> flowmachinegroup_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("flowmachinegroup_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("flowmachinegroup_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N flowmachinegroup_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> flowmachinegroup_UserEntityInstanceDatas
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("flowmachinegroup_UserEntityInstanceDatas", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("flowmachinegroup_UserEntityInstanceDatas", null, value);
			}
		}
		
		/// <summary>
		/// N:1 business_unit_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_flowmachinegroup")]
		public Dev.DevKit.ProxyTypes.BusinessUnit business_unit_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.BusinessUnit>("business_unit_flowmachinegroup", null);
			}
		}
		
		/// <summary>
		/// N:1 flowmachinegroup_flowmachineimage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachineimage")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_flowmachineimage")]
		public Dev.DevKit.ProxyTypes.flowmachineimage flowmachinegroup_flowmachineimage
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachineimage>("flowmachinegroup_flowmachineimage", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachineimage>("flowmachinegroup_flowmachineimage", null, value);
			}
		}
		
		/// <summary>
		/// N:1 flowmachinegroup_flowmachinenetwork
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("flowmachinenetwork")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_flowmachinenetwork")]
		public Dev.DevKit.ProxyTypes.flowmachinenetwork flowmachinegroup_flowmachinenetwork
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachinenetwork>("flowmachinegroup_flowmachinenetwork", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.flowmachinenetwork>("flowmachinegroup_flowmachinenetwork", null, value);
			}
		}
		
		/// <summary>
		/// N:1 flowmachinegroup_PasswordChangedBy
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("passwordchangedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_PasswordChangedBy")]
		public Dev.DevKit.ProxyTypes.SystemUser flowmachinegroup_PasswordChangedBy
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("flowmachinegroup_PasswordChangedBy", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("flowmachinegroup_PasswordChangedBy", null, value);
			}
		}
		
		/// <summary>
		/// N:1 flowmachinegroup_RotationStartedBy
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rotationstartedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("flowmachinegroup_RotationStartedBy")]
		public Dev.DevKit.ProxyTypes.SystemUser flowmachinegroup_RotationStartedBy
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("flowmachinegroup_RotationStartedBy", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("flowmachinegroup_RotationStartedBy", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowmachinegroup_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowmachinegroup_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowmachinegroup_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowmachinegroup_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowmachinegroup_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowmachinegroup_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowmachinegroup_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowmachinegroup_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowmachinegroup_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowmachinegroup_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowmachinegroup_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowmachinegroup_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_flowmachinegroup_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_flowmachinegroup_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_flowmachinegroup_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_flowmachinegroup_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 team_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_flowmachinegroup")]
		public Dev.DevKit.ProxyTypes.Team team_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Team>("team_flowmachinegroup", null);
			}
		}
		
		/// <summary>
		/// N:1 user_flowmachinegroup
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_flowmachinegroup")]
		public Dev.DevKit.ProxyTypes.SystemUser user_flowmachinegroup
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("user_flowmachinegroup", null);
			}
		}
	}
}
#pragma warning restore CS1591
