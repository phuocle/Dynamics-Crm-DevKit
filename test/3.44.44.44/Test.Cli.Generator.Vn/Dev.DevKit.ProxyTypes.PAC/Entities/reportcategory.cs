#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Thể loại của báo cáo.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum reportcategory_categorycode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocobnhng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocodchv = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocotipth = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Bocoquntr = 4,
	}
	
	/// <summary>
	/// Thể loại có liên quan đến báo cáo. Báo cáo có thể liên quan đến nhiều thể loại.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("reportcategory")]
	public partial class ReportCategory : Microsoft.Xrm.Sdk.Entity
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the reportcategory entity
		/// </summary>
		public partial class Fields
		{
			public const string CategoryCode = "categorycode";
			public const string CategoryCodeName = "categorycodename";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedByName = "createdbyname";
			public const string CreatedByYomiName = "createdbyyominame";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CreatedOnBehalfByName = "createdonbehalfbyname";
			public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
			public const string ExchangeRate = "exchangerate";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsCustomizable = "iscustomizable";
			public const string IsManaged = "ismanaged";
			public const string IsManagedName = "ismanagedname";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedByName = "modifiedbyname";
			public const string ModifiedByYomiName = "modifiedbyyominame";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
			public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
			public const string OverwriteTime = "overwritetime";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningUser = "owninguser";
			public const string ReportCategoryId = "reportcategoryid";
			public const string Id = "reportcategoryid";
			public const string ReportCategoryIdUnique = "reportcategoryidunique";
			public const string ReportId = "reportid";
			public const string ReportIdName = "reportidname";
			public const string SolutionId = "solutionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TransactionCurrencyIdName = "transactioncurrencyidname";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string reportcategory_principalobjectattributeaccess = "reportcategory_principalobjectattributeaccess";
			public const string ReportCategory_SyncErrors = "ReportCategory_SyncErrors";
			public const string userentityinstancedata_reportcategory = "userentityinstancedata_reportcategory";
			public const string lk_reportcategory_createdonbehalfby = "lk_reportcategory_createdonbehalfby";
			public const string lk_reportcategory_modifiedonbehalfby = "lk_reportcategory_modifiedonbehalfby";
			public const string lk_reportcategorybase_createdby = "lk_reportcategorybase_createdby";
			public const string lk_reportcategorybase_modifiedby = "lk_reportcategorybase_modifiedby";
			public const string report_reportcategories = "report_reportcategories";
			public const string TransactionCurrency_ReportCategory = "TransactionCurrency_ReportCategory";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public ReportCategory() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "reportcategory";
		
		public const string EntityLogicalCollectionName = "reportcategories";
		
		public const string EntitySetName = "reportcategories";
		
		public const int EntityTypeCode = 9102;
		
		/// <summary>
		/// Thể loại của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("categorycode")]
		public virtual reportcategory_categorycode? CategoryCode
		{
			get
			{
				return ((reportcategory_categorycode?)(EntityOptionSetEnum.GetEnum(this, "categorycode")));
			}
			set
			{
				this.SetAttributeValue("categorycode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("categorycodename")]
		public string CategoryCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("categorycode"))
				{
					return this.FormattedValues["categorycode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual componentstate? ComponentState
		{
			get
			{
				return ((componentstate?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã tạo thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyname")]
		public string CreatedByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdbyyominame")]
		public string CreatedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdby"))
				{
					return this.FormattedValues["createdby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ tạo bản ghi thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã tạo thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyname")]
		public string CreatedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
		public string CreatedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("createdonbehalfby"))
				{
					return this.FormattedValues["createdonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Tỉ giá đối với loại tiền liên kết với thể loại báo cáo liên quan đến loại tiền gốc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của quá trình nhập dữ liệu hoặc dịch chuyển dữ liệu đã tạo bản ghi này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			set
			{
				this.SetAttributeValue("importsequencenumber", value);
			}
		}
		
		/// <summary>
		/// Thông tin cho biết liệu có thể tùy chỉnh thành phần này hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("iscustomizable")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsCustomizable
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("iscustomizable");
			}
			set
			{
				this.SetAttributeValue("iscustomizable", value);
			}
		}
		
		/// <summary>
		/// Cho biết thành phần giải pháp có là một phần của giải pháp được quản lý hay không.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanagedname")]
		public string IsManagedName
		{
			get
			{
				if (this.FormattedValues.Contains("ismanaged"))
				{
					return this.FormattedValues["ismanaged"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đã sửa đổi thể loại báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyname")]
		public string ModifiedByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedbyyominame")]
		public string ModifiedByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedby"))
				{
					return this.FormattedValues["modifiedby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Ngày và giờ sửa đổi thể loại báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng đại diện đã sửa thể loại báo cáo lần cuối.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
		public string ModifiedOnBehalfByName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
		public string ModifiedOnBehalfByYomiName
		{
			get
			{
				if (this.FormattedValues.Contains("modifiedonbehalfby"))
				{
					return this.FormattedValues["modifiedonbehalfby"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng hoặc nhóm sở hữu thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bơn vị kinh doanh sở hữu thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public System.Nullable<System.Guid> OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của người dùng sở hữu thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public System.Nullable<System.Guid> OwningUser
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("owninguser");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportcategoryid")]
		public System.Nullable<System.Guid> ReportCategoryId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reportcategoryid");
			}
			set
			{
				this.SetAttributeValue("reportcategoryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportcategoryid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.ReportCategoryId = value;
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportcategoryidunique")]
		public System.Nullable<System.Guid> ReportCategoryIdUnique
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("reportcategoryidunique");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportid")]
		public Microsoft.Xrm.Sdk.EntityReference ReportId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("reportid");
			}
			set
			{
				this.SetAttributeValue("reportid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportidname")]
		public string ReportIdName
		{
			get
			{
				if (this.FormattedValues.Contains("reportid"))
				{
					return this.FormattedValues["reportid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của giải pháp được liên kết.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Chỉ sử dụng nội bộ.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			set
			{
				this.SetAttributeValue("timezoneruleversionnumber", value);
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của loại tiền liên kết với Thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			set
			{
				this.SetAttributeValue("transactioncurrencyid", value);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyidname")]
		public string TransactionCurrencyIdName
		{
			get
			{
				if (this.FormattedValues.Contains("transactioncurrencyid"))
				{
					return this.FormattedValues["transactioncurrencyid"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Mã múi giờ đã được sử dụng khi tạo bản ghi.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			set
			{
				this.SetAttributeValue("utcconversiontimezonecode", value);
			}
		}
		
		/// <summary>
		/// Số phiên bản của thể loại báo cáo.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N reportcategory_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("reportcategory_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess> reportcategory_principalobjectattributeaccess
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("reportcategory_principalobjectattributeaccess", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.PrincipalObjectAttributeAccess>("reportcategory_principalobjectattributeaccess", null, value);
			}
		}
		
		/// <summary>
		/// 1:N ReportCategory_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ReportCategory_SyncErrors")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.SyncError> ReportCategory_SyncErrors
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("ReportCategory_SyncErrors", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.SyncError>("ReportCategory_SyncErrors", null, value);
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_reportcategory
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_reportcategory")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.UserEntityInstanceData> userentityinstancedata_reportcategory
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_reportcategory", null);
			}
			set
			{
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.UserEntityInstanceData>("userentityinstancedata_reportcategory", null, value);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportcategory_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportcategory_createdonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportcategory_createdonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportcategory_createdonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportcategory_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportcategory_modifiedonbehalfby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportcategory_modifiedonbehalfby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportcategory_modifiedonbehalfby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportcategorybase_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportcategorybase_createdby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportcategorybase_createdby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportcategorybase_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_reportcategorybase_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_reportcategorybase_modifiedby")]
		public Dev.DevKit.ProxyTypes.SystemUser lk_reportcategorybase_modifiedby
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.SystemUser>("lk_reportcategorybase_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 report_reportcategories
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("report_reportcategories")]
		public Dev.DevKit.ProxyTypes.Report report_reportcategories
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("report_reportcategories", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.Report>("report_reportcategories", null, value);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_ReportCategory
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_ReportCategory")]
		public Dev.DevKit.ProxyTypes.TransactionCurrency TransactionCurrency_ReportCategory
		{
			get
			{
				return this.GetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ReportCategory", null);
			}
			set
			{
				this.SetRelatedEntity<Dev.DevKit.ProxyTypes.TransactionCurrency>("TransactionCurrency_ReportCategory", null, value);
			}
		}
	}
}
#pragma warning restore CS1591
