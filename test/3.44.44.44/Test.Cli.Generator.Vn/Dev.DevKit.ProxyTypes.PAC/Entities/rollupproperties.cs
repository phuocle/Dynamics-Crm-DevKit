#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Dev.DevKit.ProxyTypes
{
	
	
	/// <summary>
	/// Loại gộp tổng hợp lấy tổng số
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum rollupproperties_aggregationtype
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tngm = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tng = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Trungbnh = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tithiu = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Tia = 4,
	}
	
	/// <summary>
	/// Trạng thái tính giá trị ban đầu
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum rollupproperties_initialvaluecalculationstatus
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angtreo = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		angtinhnh = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		tmdng = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		honthnh = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khngthnhcng = 4,
	}
	
	/// <summary>
	/// Trạng thái thuộc tính tổng số
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum rollupproperties_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hpl = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghpl = 1,
	}
	
	/// <summary>
	/// Thông tin thêm về trạng thái của tổng số.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum rollupproperties_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Hpl = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Khnghpl = 2,
	}
	
	/// <summary>
	/// Lưu trữ thuộc tính liên quan đến trường tổng số.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("rollupproperties")]
	public partial class RollupProperties : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Available fields, a the time of codegen, for the rollupproperties entity
		/// </summary>
		public partial class Fields
		{
			public const string AggregateAttributeLogicalName = "aggregateattributelogicalname";
			public const string AggregateEntityLogicalName = "aggregateentitylogicalname";
			public const string AggregateEntityTypeCode = "aggregateentitytypecode";
			public const string AggregateFilterAttributes = "aggregatefilterattributes";
			public const string AggregateRelationshipName = "aggregaterelationshipname";
			public const string AggregateType = "aggregatetype";
			public const string AggregateTypeName = "aggregatetypename";
			public const string AllowHierarchyOnSource = "allowhierarchyonsource";
			public const string AllowHierarchyOnSourceName = "allowhierarchyonsourcename";
			public const string BootstrapCurrentDepth = "bootstrapcurrentdepth";
			public const string BootstrapRetryCount = "bootstrapretrycount";
			public const string BootstrapRollupAsyncJobId = "bootstraprollupasyncjobid";
			public const string BootstrapStepNumber = "bootstrapstepnumber";
			public const string BootstrapTargetPointer = "bootstraptargetpointer";
			public const string DataType = "datatype";
			public const string IncrementalRollupAsyncJobId = "incrementalrollupasyncjobid";
			public const string InitialValueCalculationStatus = "initialvaluecalculationstatus";
			public const string InitialValueCalculationStatusName = "initialvaluecalculationstatusname";
			public const string IsActivityPartyIncluded = "isactivitypartyincluded";
			public const string LastCalculationTime = "lastcalculationtime";
			public const string RollupAttributeLogicalName = "rollupattributelogicalname";
			public const string RollupEntityBaseTableName = "rollupentitybasetablename";
			public const string RollupEntityLogicalName = "rollupentitylogicalname";
			public const string RollupEntityPrimaryKeyPhysicalName = "rollupentityprimarykeyphysicalname";
			public const string RollupEntityTypeCode = "rollupentitytypecode";
			public const string RollupFilterAttributes = "rollupfilterattributes";
			public const string RollupPropertiesId = "rolluppropertiesid";
			public const string Id = "rolluppropertiesid";
			public const string RollupStateAttributePhysicalName = "rollupstateattributephysicalname";
			public const string SourceHierarchicalRelationshipName = "sourcehierarchicalrelationshipname";
			public const string StateCode = "statecode";
			public const string StateCodeName = "statecodename";
			public const string StatusCode = "statuscode";
			public const string StatusCodeName = "statuscodename";
			public const string VersionNumber = "versionnumber";
			public const string rollupjob_rollupproperties = "rollupjob_rollupproperties";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public RollupProperties() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "rollupproperties";
		
		public const string EntityLogicalCollectionName = "rolluppropertiescollection";
		
		public const string EntitySetName = "rolluppropertiescollection";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Tên lôgic của thuộc tính mục tiêu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregateattributelogicalname")]
		public string AggregateAttributeLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("aggregateattributelogicalname");
			}
		}
		
		/// <summary>
		/// Tên lôgic của thực thể mục tiêu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregateentitylogicalname")]
		public string AggregateEntityLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("aggregateentitylogicalname");
			}
		}
		
		/// <summary>
		/// Mã loại của thực thể gộp tổng hợp
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregateentitytypecode")]
		public System.Nullable<int> AggregateEntityTypeCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("aggregateentitytypecode");
			}
		}
		
		/// <summary>
		/// Tiêu chí lọc dành cho mục tiêu
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregatefilterattributes")]
		public string AggregateFilterAttributes
		{
			get
			{
				return this.GetAttributeValue<string>("aggregatefilterattributes");
			}
		}
		
		/// <summary>
		/// Tên mối quan hệ của mối quan hệ nguồn - mục tiêu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregaterelationshipname")]
		public string AggregateRelationshipName
		{
			get
			{
				return this.GetAttributeValue<string>("aggregaterelationshipname");
			}
		}
		
		/// <summary>
		/// Loại gộp tổng hợp để thực hiện
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregatetype")]
		public virtual rollupproperties_aggregationtype? AggregateType
		{
			get
			{
				return ((rollupproperties_aggregationtype?)(EntityOptionSetEnum.GetEnum(this, "aggregatetype")));
			}
		}
		
		/// <summary>
		/// Mô tả loại tổng hợp
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("aggregatetypename")]
		public string AggregateTypeName
		{
			get
			{
				if (this.FormattedValues.Contains("aggregatetype"))
				{
					return this.FormattedValues["aggregatetype"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Chấp nhận thực thể nguồn theo cấp bậc
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowhierarchyonsource")]
		public System.Nullable<bool> AllowHierarchyOnSource
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("allowhierarchyonsource");
			}
		}
		
		/// <summary>
		/// Mô tả trường Chấp nhận hệ thống cấp bậc của nguồn.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("allowhierarchyonsourcename")]
		public string AllowHierarchyOnSourceName
		{
			get
			{
				if (this.FormattedValues.Contains("allowhierarchyonsource"))
				{
					return this.FormattedValues["allowhierarchyonsource"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Độ sâu dùng để tính tự khởi động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bootstrapcurrentdepth")]
		public System.Nullable<int> BootstrapCurrentDepth
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("bootstrapcurrentdepth");
			}
		}
		
		/// <summary>
		/// Tổng đếm lần thử lại dành cho tự khởi động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bootstrapretrycount")]
		public System.Nullable<int> BootstrapRetryCount
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("bootstrapretrycount");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất biểu thị id công việc không đồng bộ tính hàng loạt.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bootstraprollupasyncjobid")]
		public System.Nullable<System.Guid> BootstrapRollupAsyncJobId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("bootstraprollupasyncjobid");
			}
		}
		
		/// <summary>
		/// Số hiệu bước để bắt đầu thực thi tự khởi động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bootstrapstepnumber")]
		public System.Nullable<int> BootstrapStepNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("bootstrapstepnumber");
			}
		}
		
		/// <summary>
		/// Con trỏ mục tiêu dùng để tính tự khởi động
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("bootstraptargetpointer")]
		public System.Nullable<int> BootstrapTargetPointer
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("bootstraptargetpointer");
			}
		}
		
		/// <summary>
		/// Loại dữ liệu trường tổng số
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("datatype")]
		public string DataType
		{
			get
			{
				return this.GetAttributeValue<string>("datatype");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất biểu thị id công việc không đồng bộ thực thể tính toán.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("incrementalrollupasyncjobid")]
		public System.Nullable<System.Guid> IncrementalRollupAsyncJobId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("incrementalrollupasyncjobid");
			}
		}
		
		/// <summary>
		/// Trạng thái tính giá trị ban đầu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialvaluecalculationstatus")]
		public virtual rollupproperties_initialvaluecalculationstatus? InitialValueCalculationStatus
		{
			get
			{
				return ((rollupproperties_initialvaluecalculationstatus?)(EntityOptionSetEnum.GetEnum(this, "initialvaluecalculationstatus")));
			}
		}
		
		/// <summary>
		/// Mô tả trường trạng thái tính giá trị ban đầu.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("initialvaluecalculationstatusname")]
		public string InitialValueCalculationStatusName
		{
			get
			{
				if (this.FormattedValues.Contains("initialvaluecalculationstatus"))
				{
					return this.FormattedValues["initialvaluecalculationstatus"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Cờ cho biết Bên Hoạt động có được bao gồm hay không
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactivitypartyincluded")]
		public System.Nullable<int> IsActivityPartyIncluded
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("isactivitypartyincluded");
			}
		}
		
		/// <summary>
		/// Lần cuối cùng thực hiện tính toán cho trường tổng số này.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastcalculationtime")]
		public System.Nullable<System.DateTime> LastCalculationTime
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastcalculationtime");
			}
		}
		
		/// <summary>
		/// Tên lôgic của thuộc tính nguồn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupattributelogicalname")]
		public string RollupAttributeLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("rollupattributelogicalname");
			}
		}
		
		/// <summary>
		/// Tên bảng gốc của thực thể tổng số
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupentitybasetablename")]
		public string RollupEntityBaseTableName
		{
			get
			{
				return this.GetAttributeValue<string>("rollupentitybasetablename");
			}
		}
		
		/// <summary>
		/// Tên lôgic của thực thể nguồn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupentitylogicalname")]
		public string RollupEntityLogicalName
		{
			get
			{
				return this.GetAttributeValue<string>("rollupentitylogicalname");
			}
		}
		
		/// <summary>
		/// Tên vật lý của khóa chính dành cho thực thể tổng số
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupentityprimarykeyphysicalname")]
		public string RollupEntityPrimaryKeyPhysicalName
		{
			get
			{
				return this.GetAttributeValue<string>("rollupentityprimarykeyphysicalname");
			}
		}
		
		/// <summary>
		/// Mã loại của thực thể tổng số
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupentitytypecode")]
		public System.Nullable<int> RollupEntityTypeCode
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("rollupentitytypecode");
			}
		}
		
		/// <summary>
		/// Tiêu chí lọc dành cho nguồn
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupfilterattributes")]
		public string RollupFilterAttributes
		{
			get
			{
				return this.GetAttributeValue<string>("rollupfilterattributes");
			}
		}
		
		/// <summary>
		/// Mã định danh duy nhất của bản ghi hiện tại.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rolluppropertiesid")]
		public System.Nullable<System.Guid> RollupPropertiesId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("rolluppropertiesid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rolluppropertiesid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Tên vật lý của thuộc tính trạng thái tổng số
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("rollupstateattributephysicalname")]
		public string RollupStateAttributePhysicalName
		{
			get
			{
				return this.GetAttributeValue<string>("rollupstateattributephysicalname");
			}
		}
		
		/// <summary>
		/// Tên mối quan hệ của mối quan hệ nguồn theo cấp bậc
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("sourcehierarchicalrelationshipname")]
		public string SourceHierarchicalRelationshipName
		{
			get
			{
				return this.GetAttributeValue<string>("sourcehierarchicalrelationshipname");
			}
		}
		
		/// <summary>
		/// Trạng thái của tổng số.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual rollupproperties_statecode? StateCode
		{
			get
			{
				return ((rollupproperties_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
		}
		
		/// <summary>
		/// Mô tả StateCode
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecodename")]
		public string StateCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statecode"))
				{
					return this.FormattedValues["statecode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Thông tin thêm về trạng thái của thuộc tính tổng số.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual rollupproperties_statuscode? StatusCode
		{
			get
			{
				return ((rollupproperties_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
		}
		
		/// <summary>
		/// Mô tả lý do dẫn đến trạng thái
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscodename")]
		public string StatusCodeName
		{
			get
			{
				if (this.FormattedValues.Contains("statuscode"))
				{
					return this.FormattedValues["statuscode"];
				}
				else
				{
					return default(string);
				}
			}
		}
		
		/// <summary>
		/// Số phiên bản của tổng số.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N rollupjob_rollupproperties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("rollupjob_rollupproperties")]
		public System.Collections.Generic.IEnumerable<Dev.DevKit.ProxyTypes.RollupJob> rollupjob_rollupproperties
		{
			get
			{
				return this.GetRelatedEntities<Dev.DevKit.ProxyTypes.RollupJob>("rollupjob_rollupproperties", null);
			}
			set
			{
				this.OnPropertyChanging("rollupjob_rollupproperties");
				this.SetRelatedEntities<Dev.DevKit.ProxyTypes.RollupJob>("rollupjob_rollupproperties", null, value);
				this.OnPropertyChanged("rollupjob_rollupproperties");
			}
		}
	}
}
#pragma warning restore CS1591
