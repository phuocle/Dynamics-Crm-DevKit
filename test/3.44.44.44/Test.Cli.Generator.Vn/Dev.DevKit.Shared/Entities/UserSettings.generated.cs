//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:01:25
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.UserSettingsOptionSets
{
	public enum D365AutoInstallAttemptStatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chưa thực hiện</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Chua_thuc_hien = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã cài đặt</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Da_cai_dat = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã tắt nguồn lực</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		Da_tat_nguon_luc = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã tự động cài đặt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Da_tu_dong_cai_dat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không có giải pháp</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Khong_co_giai_phap = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không có Graph API</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Khong_co_Graph_API = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không được ủy quyền</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Khong_duoc_uy_quyen = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Quản trị viên Teams đã chặn</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Quan_tri_vien_Teams_da_chan = 3
	}
	public enum DataValidationModeForExportToExcel
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đầy đủ</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Day_du = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong = 1
	}
	public enum DefaultSearchExperience
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Sử dụng tìm kiếm gần nhất</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Su_dung_tim_kiem_gan_nhat = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tìm kiếm được phân loại</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Tim_kiem_duoc_phan_loai = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tìm kiếm liên quan</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Tim_kiem_lien_quan = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tìm kiếm tùy chỉnh</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Tim_kiem_tuy_chinh = 3
	}
	public enum EntityFormMode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Mặc định tổ chức</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Mac_dinh_to_chuc = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sửa</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Sua = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tối ưu hóa dạng chỉ đọc</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Toi_uu_hoa_dang_chi_doc = 1
	}
	public enum IncomingEmailFilteringMethod
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Email khi trả lời email Dynamics 365</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Email_khi_tra_loi_email_Dynamics_365 = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email từ bản ghi Dynamics 365 có bật email</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Email_tu_ban_ghi_Dynamics_365_co_bat_email = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email từ Khách hàng tiềm năng, Người liên hệ và Khách hàng Dynamics 365</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Email_tu_Khach_hang_tiem_nang_Nguoi_lien_he_va_Khach_hang_Dynamics_365 = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không có email</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Khong_co_email = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tất cả thư email</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Tat_ca_thu_email = 0
	}
	public enum ReleaseChannel
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Không có</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Khong_co = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thay thế kênh bên trong</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Thay_the_kenh_ben_trong = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thay thế kênh hàng tháng</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Thay_the_kenh_hang_thang = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thay thế kênh nửa năm một lần</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Thay_the_kenh_nua_nam_mot_lan = 1
	}
	public enum ReportScriptErrors
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Không bao giờ gửi báo cáo lỗi tới Microsoft về Microsoft Dynamics 365</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Khong_bao_gio_gui_bao_cao_loi_toi_Microsoft_ve_Microsoft_Dynamics_365 = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tự động gửi báo cáo lỗi đến Microsoft mà không xin phép tôi</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Tu_dong_gui_bao_cao_loi_den_Microsoft_ma_khong_xin_phep_toi = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Xin phép tôi khi gửi báo cáo lỗi đến Microsoft</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Xin_phep_toi_khi_gui_bao_cao_loi_den_Microsoft = 1
	}
	public enum VisualizationPaneLayout
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đầu - cuối</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Dau_cuoi = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Liền kề nhau</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Lien_ke_nhau = 1
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class UserSettings : EntityBase
	{
		public struct Fields
		{
			public const string AddressBookSyncInterval = "addressbooksyncinterval";
			public const string AdvancedFindStartupMode = "advancedfindstartupmode";
			[System.Obsolete("Deprecated from version: 6.0.0.0")]
			public const string AllowEmailCredentials = "allowemailcredentials";
			public const string AMDesignator = "amdesignator";
			public const string AutoCaptureUserStatus = "autocaptureuserstatus";
			public const string AutoCreateContactOnPromote = "autocreatecontactonpromote";
			public const string BusinessUnitId = "businessunitid";
			public const string CalendarType = "calendartype";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			[System.Obsolete("Deprecated from version: 5.0.0.0")]
			public const string CurrencyDecimalPrecision = "currencydecimalprecision";
			public const string CurrencyFormatCode = "currencyformatcode";
			public const string CurrencySymbol = "currencysymbol";
			public const string D365AutoInstallAttemptStatus = "d365autoinstallattemptstatus";
			public const string DataValidationModeForExportToExcel = "datavalidationmodeforexporttoexcel";
			public const string DateFormatCode = "dateformatcode";
			public const string DateFormatString = "dateformatstring";
			public const string DateSeparator = "dateseparator";
			public const string DecimalSymbol = "decimalsymbol";
			public const string DefaultCalendarView = "defaultcalendarview";
			public const string DefaultCountryCode = "defaultcountrycode";
			public const string DefaultDashboardId = "defaultdashboardid";
			public const string DefaultSearchExperience = "defaultsearchexperience";
			[System.Obsolete("Deprecated from version: 6.0.0.0")]
			public const string EmailPassword = "emailpassword";
			[System.Obsolete("Deprecated from version: 6.0.0.0")]
			public const string EmailUsername = "emailusername";
			public const string EntityFormMode = "entityformmode";
			public const string FullNameConventionCode = "fullnameconventioncode";
			public const string GetStartedPaneContentEnabled = "getstartedpanecontentenabled";
			public const string HelpLanguageId = "helplanguageid";
			public const string HomepageArea = "homepagearea";
			public const string HomepageLayout = "homepagelayout";
			public const string HomepageSubarea = "homepagesubarea";
			public const string IgnoreUnsolicitedEmail = "ignoreunsolicitedemail";
			public const string IncomingEmailFilteringMethod = "incomingemailfilteringmethod";
			public const string IsAppsForCrmAlertDismissed = "isappsforcrmalertdismissed";
			public const string IsAutoDataCaptureEnabled = "isautodatacaptureenabled";
			public const string IsDefaultCountryCodeCheckEnabled = "isdefaultcountrycodecheckenabled";
			public const string IsDuplicateDetectionEnabledWhenGoingOnline = "isduplicatedetectionenabledwhengoingonline";
			public const string IsEmailConversationViewEnabled = "isemailconversationviewenabled";
			public const string IsGuidedHelpEnabled = "isguidedhelpenabled";
			public const string IsResourceBookingExchangeSyncEnabled = "isresourcebookingexchangesyncenabled";
			public const string IsSendAsAllowed = "issendasallowed";
			public const string LastAlertsViewedTime = "lastalertsviewedtime";
			public const string LastModifiedTimeForViewPersonalizationSettings = "lastmodifiedtimeforviewpersonalizationsettings";
			public const string LocaleId = "localeid";
			public const string LongDateFormatCode = "longdateformatcode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string NegativeCurrencyFormatCode = "negativecurrencyformatcode";
			public const string NegativeFormatCode = "negativeformatcode";
			public const string NextTrackingNumber = "nexttrackingnumber";
			public const string NumberGroupFormat = "numbergroupformat";
			public const string NumberSeparator = "numberseparator";
			public const string OfflineSyncInterval = "offlinesyncinterval";
			public const string OutlookSyncInterval = "outlooksyncinterval";
			public const string PagingLimit = "paginglimit";
			public const string PersonalizationSettings = "personalizationsettings";
			public const string PMDesignator = "pmdesignator";
			public const string PreferredSolution = "preferredsolution";
			[System.Obsolete("Deprecated from version: 5.0.0.0")]
			public const string PricingDecimalPrecision = "pricingdecimalprecision";
			public const string ReleaseChannel = "releasechannel";
			public const string ReportScriptErrors = "reportscripterrors";
			public const string ResourceBookingExchangeSyncVersion = "resourcebookingexchangesyncversion";
			public const string SelectedGlobalFilterId = "selectedglobalfilterid";
			public const string ShowWeekNumber = "showweeknumber";
			public const string SplitViewState = "splitviewstate";
			public const string SyncContactCompany = "synccontactcompany";
			public const string SystemUserId = "systemuserid";
			public const string TableScopedDVSearchFeatureTeachingBubbleViews = "tablescopeddvsearchfeatureteachingbubbleviews";
			public const string TableScopedDVSearchQuickFindTeachingBubbleViews = "tablescopeddvsearchquickfindteachingbubbleviews";
			public const string TimeFormatCode = "timeformatcode";
			public const string TimeFormatString = "timeformatstring";
			public const string TimeSeparator = "timeseparator";
			public const string TimeZoneBias = "timezonebias";
			public const string TimeZoneCode = "timezonecode";
			public const string TimeZoneDaylightBias = "timezonedaylightbias";
			public const string TimeZoneDaylightDay = "timezonedaylightday";
			public const string TimeZoneDaylightDayOfWeek = "timezonedaylightdayofweek";
			public const string TimeZoneDaylightHour = "timezonedaylighthour";
			public const string TimeZoneDaylightMinute = "timezonedaylightminute";
			public const string TimeZoneDaylightMonth = "timezonedaylightmonth";
			public const string TimeZoneDaylightSecond = "timezonedaylightsecond";
			public const string TimeZoneDaylightYear = "timezonedaylightyear";
			public const string TimeZoneStandardBias = "timezonestandardbias";
			public const string TimeZoneStandardDay = "timezonestandardday";
			public const string TimeZoneStandardDayOfWeek = "timezonestandarddayofweek";
			public const string TimeZoneStandardHour = "timezonestandardhour";
			public const string TimeZoneStandardMinute = "timezonestandardminute";
			public const string TimeZoneStandardMonth = "timezonestandardmonth";
			public const string TimeZoneStandardSecond = "timezonestandardsecond";
			public const string TimeZoneStandardYear = "timezonestandardyear";
			public const string TrackingTokenId = "trackingtokenid";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string TryToggleSets = "trytogglesets";
			public const string TryToggleStatus = "trytogglestatus";
			public const string UILanguageId = "uilanguageid";
			public const string UseCrmFormForAppointment = "usecrmformforappointment";
			public const string UseCrmFormForContact = "usecrmformforcontact";
			public const string UseCrmFormForEmail = "usecrmformforemail";
			public const string UseCrmFormForTask = "usecrmformfortask";
			public const string UseImageStrips = "useimagestrips";
			public const string UserProfile = "userprofile";
			public const string VersionNumber = "versionnumber";
			public const string VisualizationPaneLayout = "visualizationpanelayout";
			public const string WorkdayStartTime = "workdaystarttime";
			public const string WorkdayStopTime = "workdaystoptime";
		}
		public const string EntityLogicalName = "usersettings";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 150;
		public const string EntityCollectionSchemaName = "UserSettingses";
		public const string EntityDisplayCollectionName = "Thiết đặt người dùng";
		public const string DisplayName = "Thiết đặt người dùng";
		public const string EntitySetName = "usersettingscollection";
		public const string EntityLogicalCollectionName = "usersettingses";
		public const string EntityPrimaryIdAttribute = "systemuserid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "";
		public const string EntitySchemaName = "UserSettings";
		[DebuggerNonUserCode()]
		public UserSettings()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public UserSettings(Guid UserSettingsId)
		{
			Entity = new Entity(EntityLogicalName, UserSettingsId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public UserSettings(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="UserSettings"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public UserSettings(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="UserSettings"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public UserSettings(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new UserSettings(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="UserSettings"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public UserSettings(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new UserSettings(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public UserSettings(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Description</strong>: Tần số bỏ phiếu thông thường, dùng đồng bộ sổ địa chỉ trong Microsoft Office Outlook.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? AddressBookSyncInterval
		{
			get { return Entity.GetAttributeValue<int?>(Fields.AddressBookSyncInterval); }
			set { Entity.Attributes[Fields.AddressBookSyncInterval] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Chế độ mặc định như đơn giản hoặc đã chi tiết cho tìm kiếm nâng cao.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? AdvancedFindStartupMode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.AdvancedFindStartupMode); }
			set { Entity.Attributes[Fields.AdvancedFindStartupMode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Hệ thống không còn dùng thuộc tính này. Dữ liệu giờ nằm trong thuộc tính Mailbox.AllowEmailConnectorToUseCredentials.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 6.0.0.0")]
		public bool? AllowEmailCredentials
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.AllowEmailCredentials); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Bộ chỉ định AM để dùng trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 25</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string AMDesignator
		{
			get { return Entity.GetAttributeValue<string>(Fields.AMDesignator); }
			set { Entity.Attributes[Fields.AMDesignator] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Đặt trạng thái người dùng cho Đề xuất ADC</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? AutoCaptureUserStatus
		{
			get { return Entity.GetAttributeValue<int?>(Fields.AutoCaptureUserStatus); }
			set { Entity.Attributes[Fields.AutoCaptureUserStatus] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Liên hệ tạo tự động trên tăng cấp khách hàng</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? AutoCreateContactOnPromote
		{
			get { return Entity.GetAttributeValue<int?>(Fields.AutoCreateContactOnPromote); }
			set { Entity.Attributes[Fields.AutoCreateContactOnPromote] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bơn vị kinh doanh có người dùng được liên kết.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? BusinessUnitId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.BusinessUnitId); }
			set { Entity.Attributes[Fields.BusinessUnitId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Loại lịch dành cho hệ thống. Đặt là dương lịch của Mỹ theo mặc định.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? CalendarType
		{
			get { return Entity.GetAttributeValue<int?>(Fields.CalendarType); }
			set { Entity.Attributes[Fields.CalendarType] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã tạo thiết đặt người dùng.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày và giờ tạo đối tượng thiết đặt.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo usersettings.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Số chữ số sau dấu thập phân có thể dùng cho loại tiền.</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 5.0.0.0")]
		public int? CurrencyDecimalPrecision
		{
			get { return Entity.GetAttributeValue<int?>(Fields.CurrencyDecimalPrecision); }
			set { Entity.Attributes[Fields.CurrencyDecimalPrecision] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin về cách đặt ký hiệu tiền tệ trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? CurrencyFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.CurrencyFormatCode); }
			set { Entity.Attributes[Fields.CurrencyFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ký hiệu dùng cho loại tiền trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 13</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string CurrencySymbol
		{
			get { return Entity.GetAttributeValue<string>(Fields.CurrencySymbol); }
			set { Entity.Attributes[Fields.CurrencySymbol] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: d365autoinstallattemptstatus</para>
		/// <para><strong>Description</strong>: Xác định xem trạng thái của lần thử tự động cài đặt của Dynamics 365 vào Teams đã hoàn tất hay chưa</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.D365AutoInstallAttemptStatus"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.D365AutoInstallAttemptStatus.Chua_thuc_hien"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.D365AutoInstallAttemptStatus? D365AutoInstallAttemptStatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.D365AutoInstallAttemptStatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.D365AutoInstallAttemptStatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.D365AutoInstallAttemptStatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.D365AutoInstallAttemptStatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chế độ xác thực dữ liệu cho xuất sang Excel</para>
		/// <para><strong>Description</strong>: Thông tin chỉ định mức xác thực dữ liệu trong bảng tính Excel đã xuất trong một định dạng thích hợp cho việc nhập.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DataValidationModeForExportToExcel"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DataValidationModeForExportToExcel.Day_du"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DataValidationModeForExportToExcel? DataValidationModeForExportToExcel
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.DataValidationModeForExportToExcel);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DataValidationModeForExportToExcel)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.DataValidationModeForExportToExcel] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.DataValidationModeForExportToExcel] = null;
			}
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin về cách hiển thị ngày trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? DateFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.DateFormatCode); }
			set { Entity.Attributes[Fields.DateFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Chuỗi cho thấy cách hiển thị ngày trong toàn Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string DateFormatString
		{
			get { return Entity.GetAttributeValue<string>(Fields.DateFormatString); }
			set { Entity.Attributes[Fields.DateFormatString] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ký tự dùng để phân tách tháng, ngày và năm trong ngày tháng, trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string DateSeparator
		{
			get { return Entity.GetAttributeValue<string>(Fields.DateSeparator); }
			set { Entity.Attributes[Fields.DateSeparator] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ký hiệu dùng cho dấu thập phân trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string DecimalSymbol
		{
			get { return Entity.GetAttributeValue<string>(Fields.DecimalSymbol); }
			set { Entity.Attributes[Fields.DecimalSymbol] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Dạng xem lịch mặc định cho người dùng.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? DefaultCalendarView
		{
			get { return Entity.GetAttributeValue<int?>(Fields.DefaultCalendarView); }
			set { Entity.Attributes[Fields.DefaultCalendarView] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã quốc gia mặc định</para>
		/// <para><strong>Description</strong>: Khu vực văn bản để nhập mã quốc gia mặc định.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 30</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string DefaultCountryCode
		{
			get { return Entity.GetAttributeValue<string>(Fields.DefaultCountryCode); }
			set { Entity.Attributes[Fields.DefaultCountryCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bảng thông tin mặc định.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? DefaultDashboardId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.DefaultDashboardId); }
			set { Entity.Attributes[Fields.DefaultDashboardId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trải nghiệm Tìm kiếm Mặc định</para>
		/// <para><strong>Description</strong>: Trải nghiệm tìm kiếm mặc định cho người dùng.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DefaultSearchExperience"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DefaultSearchExperience.Su_dung_tim_kiem_gan_nhat"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DefaultSearchExperience? DefaultSearchExperience
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.DefaultSearchExperience);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.DefaultSearchExperience)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.DefaultSearchExperience] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.DefaultSearchExperience] = null;
			}
		}
		/// <summary>
		/// <para><strong>Description</strong>: Hệ thống không còn dùng thuộc tính này. Dữ liệu giờ nằm trong thuộc tính Mailbox.Password.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 6.0.0.0")]
		public string EmailPassword
		{
			get { return Entity.GetAttributeValue<string>(Fields.EmailPassword); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Hệ thống không còn dùng thuộc tính này. Dữ liệu giờ nằm trong thuộc tính Mailbox.UserName.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 6.0.0.0")]
		public string EmailUsername
		{
			get { return Entity.GetAttributeValue<string>(Fields.EmailUsername); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chế độ Biểu mẫu</para>
		/// <para><strong>Description</strong>: Cho biết có dùng chế độ biểu mẫu không.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.EntityFormMode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.EntityFormMode.Mac_dinh_to_chuc"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.EntityFormMode? EntityFormMode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.EntityFormMode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.EntityFormMode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.EntityFormMode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.EntityFormMode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thứ tự sẽ hiển thị tên trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? FullNameConventionCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.FullNameConventionCode); }
			set { Entity.Attributes[Fields.FullNameConventionCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định khả năng sẽ bật ngăn bắt đầu trong danh sách.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? GetStartedPaneContentEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.GetStartedPaneContentEnabled); }
			set { Entity.Attributes[Fields.GetStartedPaneContentEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của ngôn ngữ Trợ giúp.</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? HelpLanguageId
		{
			get { return Entity.GetAttributeValue<int?>(Fields.HelpLanguageId); }
			set { Entity.Attributes[Fields.HelpLanguageId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Trang chủ của trang web cho người dùng.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string HomepageArea
		{
			get { return Entity.GetAttributeValue<string>(Fields.HomepageArea); }
			set { Entity.Attributes[Fields.HomepageArea] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cấu hình của bố cục trang chủ.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string HomepageLayout
		{
			get { return Entity.GetAttributeValue<string>(Fields.HomepageLayout); }
			set { Entity.Attributes[Fields.HomepageLayout] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Trang của trang web cho người dùng.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string HomepageSubarea
		{
			get { return Entity.GetAttributeValue<string>(Fields.HomepageSubarea); }
			set { Entity.Attributes[Fields.HomepageSubarea] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin xác định khả năng tài khoản người dùng định bỏ qua thư không mong muốn (không còn dùng).</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IgnoreUnsolicitedEmail
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IgnoreUnsolicitedEmail); }
			set { Entity.Attributes[Fields.IgnoreUnsolicitedEmail] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phương pháp lọc email đến</para>
		/// <para><strong>Description</strong>: Phương pháp lọc email đến.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.IncomingEmailFilteringMethod"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.IncomingEmailFilteringMethod.Email_tu_Khach_hang_tiem_nang_Nguoi_lien_he_va_Khach_hang_Dynamics_365"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.IncomingEmailFilteringMethod? IncomingEmailFilteringMethod
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.IncomingEmailFilteringMethod);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.IncomingEmailFilteringMethod)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.IncomingEmailFilteringMethod] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.IncomingEmailFilteringMethod] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị cảnh báo cho Ứng dụng dành cho Dynamics 365.</para>
		/// <para><strong>Description</strong>: Hiển thị hoặc bỏ qua cảnh báo cho Ứng dụng dành cho Dynamics 365.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsAppsForCrmAlertDismissed
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsAppsForCrmAlertDismissed); }
			set { Entity.Attributes[Fields.IsAppsForCrmAlertDismissed] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết khả năng sử dụng tính năng Tự động Ghi có được bật hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsAutoDataCaptureEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsAutoDataCaptureEnabled); }
			set { Entity.Attributes[Fields.IsAutoDataCaptureEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bật mã quốc gia mặc định</para>
		/// <para><strong>Description</strong>: Bật hoặc tắt chọn lựa mã quốc gia .</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsDefaultCountryCodeCheckEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsDefaultCountryCodeCheckEnabled); }
			set { Entity.Attributes[Fields.IsDefaultCountryCodeCheckEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết khả năng bật phát hiện sự trùng lặp khi truy cập trực tuyến.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsDuplicateDetectionEnabledWhenGoingOnline
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsDuplicateDetectionEnabledWhenGoingOnline); }
			set { Entity.Attributes[Fields.IsDuplicateDetectionEnabledWhenGoingOnline] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Lựa chọn Bật hoặc tắt dạng xem cuộc hội thoại email trên tường dòng thời gian.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsEmailConversationViewEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsEmailConversationViewEnabled); }
			set { Entity.Attributes[Fields.IsEmailConversationViewEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bật trợ giúp có hướng dẫn mặc định</para>
		/// <para><strong>Description</strong>: Bật hoặc tắt trợ giúp có hướng dẫn.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsGuidedHelpEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsGuidedHelpEnabled); }
			set { Entity.Attributes[Fields.IsGuidedHelpEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật đồng bộ hóa đăng ký nguồn lực</para>
		/// <para><strong>Description</strong>: Cho biết liệu việc đồng bộ hóa đăng ký nguồn lực người dùng với Exchange có được bật ở cấp độ người dùng hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Đã bật</strong>]: true - [<strong>Đã tắt</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Đã tắt</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsResourceBookingExchangeSyncEnabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsResourceBookingExchangeSyncEnabled); }
			set { Entity.Attributes[Fields.IsResourceBookingExchangeSyncEnabled] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết khả năng có bật đặc quyền gửi với tư cách là người dùng khác hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsSendAsAllowed
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsSendAsAllowed); }
			set { Entity.Attributes[Fields.IsSendAsAllowed] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Hiển thị lần cuối đọc dấu vết từ cơ sở dữ liệu.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? LastAlertsViewedTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.LastAlertsViewedTime); }
			set { Entity.Attributes[Fields.LastAlertsViewedTime] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dấu thời gian sửa đổi lần gần nhất cho thiết đặt cá nhân hóa dạng xem trong bảng UserEntityUISettings</para>
		/// <para><strong>Description</strong>: Lưu trữ dấu thời gian khi thuộc tính ViewPersonalizationSettings được cập nhật cho người dùng này trong bảng UserEntityUISettings.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? LastModifiedTimeForViewPersonalizationSettingsUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.LastModifiedTimeForViewPersonalizationSettings); }
			set { Entity.Attributes[Fields.LastModifiedTimeForViewPersonalizationSettings] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bản địa người dùng.</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? LocaleId
		{
			get { return Entity.GetAttributeValue<int?>(Fields.LocaleId); }
			set { Entity.Attributes[Fields.LocaleId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định cách hiển thị Ngày dạng dài trong toàn Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? LongDateFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.LongDateFormatCode); }
			set { Entity.Attributes[Fields.LongDateFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sửa đổi thiết đặt người dùng lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi đối tượng thiết đặt người dùng lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa đổi usersettings lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định cách hiển thị số tiền âm trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 15</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? NegativeCurrencyFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.NegativeCurrencyFormatCode); }
			set { Entity.Attributes[Fields.NegativeCurrencyFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định cách hiển thị số âm trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? NegativeFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.NegativeFormatCode); }
			set { Entity.Attributes[Fields.NegativeFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Số theo dõi tiếp theo.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? NextTrackingNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.NextTrackingNumber); }
			set { Entity.Attributes[Fields.NextTrackingNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định cách phân nhóm số trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 25</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string NumberGroupFormat
		{
			get { return Entity.GetAttributeValue<string>(Fields.NumberGroupFormat); }
			set { Entity.Attributes[Fields.NumberGroupFormat] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ký hiệu dùng cho dấu phân tách số trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string NumberSeparator
		{
			get { return Entity.GetAttributeValue<string>(Fields.NumberSeparator); }
			set { Entity.Attributes[Fields.NumberSeparator] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Tần số bỏ phiếu thông thường, dùng đồng bộ ngoại tuyến dạng chạy ẩn trong Microsoft Office Outlook.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? OfflineSyncInterval
		{
			get { return Entity.GetAttributeValue<int?>(Fields.OfflineSyncInterval); }
			set { Entity.Attributes[Fields.OfflineSyncInterval] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Tần số bỏ phiếu thông thường đã dùng cho đồng bộ bản ghi trong Microsoft Office Outlook.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? OutlookSyncInterval
		{
			get { return Entity.GetAttributeValue<int?>(Fields.OutlookSyncInterval); }
			set { Entity.Attributes[Fields.OutlookSyncInterval] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định liệt kê bao nhiêu mục trên trang trong dạng xem danh sách.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? PagingLimit
		{
			get { return Entity.GetAttributeValue<int?>(Fields.PagingLimit); }
			set { Entity.Attributes[Fields.PagingLimit] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string PersonalizationSettings
		{
			get { return Entity.GetAttributeValue<string>(Fields.PersonalizationSettings); }
			set { Entity.Attributes[Fields.PersonalizationSettings] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Bộ chỉ định PM để dùng trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 25</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string PMDesignator
		{
			get { return Entity.GetAttributeValue<string>(Fields.PMDesignator); }
			set { Entity.Attributes[Fields.PMDesignator] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Preferred Solution</para>
		/// <para><strong>Description</strong>: Preferred Solution when create a component without under a solution in this organization</para>
		/// <para><strong>Lookup</strong>: <see cref="solution"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference PreferredSolution
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.PreferredSolution); }
			set { Entity.Attributes[Fields.PreferredSolution] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Số chữ số sau dấu thập phân có thể dùng cho giá.</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 5.0.0.0")]
		public int? PricingDecimalPrecision
		{
			get { return Entity.GetAttributeValue<int?>(Fields.PricingDecimalPrecision); }
			set { Entity.Attributes[Fields.PricingDecimalPrecision] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thay thế kênh ứng dụng mô hình</para>
		/// <para><strong>Description</strong>: Thay thế kênh ứng dụng mô hình</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReleaseChannel"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReleaseChannel.Khong_co"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReleaseChannel? ReleaseChannel
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ReleaseChannel);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReleaseChannel)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.ReleaseChannel] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.ReleaseChannel] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Báo cáo lỗi script</para>
		/// <para><strong>Description</strong>: Danh sách chọn để chọn tùy chọn người dùng khi báo cáo lỗi script.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReportScriptErrors"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReportScriptErrors? ReportScriptErrors
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ReportScriptErrors);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.ReportScriptErrors)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.ReportScriptErrors] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.ReportScriptErrors] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phiên bản đồng bộ hóa đăng ký nguồn lực người dùng</para>
		/// <para><strong>Description</strong>: Số phiên bản cho việc đồng bộ hóa đăng ký nguồn lực với Exchange.</para>
		/// <para><strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? ResourceBookingExchangeSyncVersion
		{
			get { return Entity.GetAttributeValue<long?>(Fields.ResourceBookingExchangeSyncVersion); }
			set { Entity.Attributes[Fields.ResourceBookingExchangeSyncVersion] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Lưu trữ ID bộ lọc đã lưu trong bảng thông tin trung tâm dịch vụ khách hàng đã chọn.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SelectedGlobalFilterId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SelectedGlobalFilterId); }
			set { Entity.Attributes[Fields.SelectedGlobalFilterId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định khả năng hiển thị số tuần trong lịch hiển thị trong Microsoft Dynamics 365.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? ShowWeekNumber
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.ShowWeekNumber); }
			set { Entity.Attributes[Fields.ShowWeekNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ</para>
		/// <para><strong>Two Option</strong> - [<strong>Đã mở rộng</strong>]: true - [<strong>Đã thu gọn</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Đã thu gọn</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? SplitViewState
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.SplitViewState); }
			set { Entity.Attributes[Fields.SplitViewState] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có đặt trường công ty trong mục Microsoft Office Outlook trong quá trình đồng bộ Outlook không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? SyncContactCompany
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.SyncContactCompany); }
			set { Entity.Attributes[Fields.SyncContactCompany] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SystemUserId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SystemUserId); }
			set { Entity.Attributes[Fields.SystemUserId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem bong bóng hướng dẫn của tính năng Tìm kiếm trong Dataverse theo phạm vi bảng</para>
		/// <para><strong>Description</strong>: Số lần người dùng đã tương tác với bong bóng hướng dẫn của tính năng Tìm kiếm trong Dataverse theo phạm vi bảng.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TableScopedDVSearchFeatureTeachingBubbleViews
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TableScopedDVSearchFeatureTeachingBubbleViews); }
			set { Entity.Attributes[Fields.TableScopedDVSearchFeatureTeachingBubbleViews] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem bong bóng hướng dẫn Tìm nhanh của tính năng Tìm kiếm trong Dataverse theo phạm vi bảng</para>
		/// <para><strong>Description</strong>: Số lần người dùng đã tương tác với bong bóng hướng dẫn Tìm nhanh của tính năng Tìm kiếm trong Dataverse theo phạm vi bảng.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TableScopedDVSearchQuickFindTeachingBubbleViews
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TableScopedDVSearchQuickFindTeachingBubbleViews); }
			set { Entity.Attributes[Fields.TableScopedDVSearchQuickFindTeachingBubbleViews] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thông tin chỉ định cách hiển thị thời gian trong Microsoft Dynamics 365.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeFormatCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeFormatCode); }
			set { Entity.Attributes[Fields.TimeFormatCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Văn bản về cách hiển thị thời gian trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string TimeFormatString
		{
			get { return Entity.GetAttributeValue<string>(Fields.TimeFormatString); }
			set { Entity.Attributes[Fields.TimeFormatString] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Văn bản về cách hiển thị thời gian trong Microsoft Dynamics 365.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string TimeSeparator
		{
			get { return Entity.GetAttributeValue<string>(Fields.TimeSeparator); }
			set { Entity.Attributes[Fields.TimeSeparator] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Bạn hãy điều chỉnh múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneBias
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneBias); }
			set { Entity.Attributes[Fields.TimeZoneBias] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Múi giờ địa phương cho người dùng.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneCode); }
			set { Entity.Attributes[Fields.TimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Bạn hãy điều chỉnh giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightBias
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightBias); }
			set { Entity.Attributes[Fields.TimeZoneDaylightBias] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightDay
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightDay); }
			set { Entity.Attributes[Fields.TimeZoneDaylightDay] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày theo giờ mùa hè của múi giờ địa phương của tuần cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn trong Tùy chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightDayOfWeek
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightDayOfWeek); }
			set { Entity.Attributes[Fields.TimeZoneDaylightDayOfWeek] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giờ theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightHour
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightHour); }
			set { Entity.Attributes[Fields.TimeZoneDaylightHour] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Phút theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightMinute
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightMinute); }
			set { Entity.Attributes[Fields.TimeZoneDaylightMinute] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Tháng theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightMonth
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightMonth); }
			set { Entity.Attributes[Fields.TimeZoneDaylightMonth] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giây theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightSecond
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightSecond); }
			set { Entity.Attributes[Fields.TimeZoneDaylightSecond] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Năm theo giờ mùa hè của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneDaylightYear
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneDaylightYear); }
			set { Entity.Attributes[Fields.TimeZoneDaylightYear] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Thiên về giờ chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardBias
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardBias); }
			set { Entity.Attributes[Fields.TimeZoneStandardBias] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardDay
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardDay); }
			set { Entity.Attributes[Fields.TimeZoneStandardDay] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Ngày chuẩn của múi giờ địa phương của tuần cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardDayOfWeek
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardDayOfWeek); }
			set { Entity.Attributes[Fields.TimeZoneStandardDayOfWeek] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giờ chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardHour
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardHour); }
			set { Entity.Attributes[Fields.TimeZoneStandardHour] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Phút chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardMinute
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardMinute); }
			set { Entity.Attributes[Fields.TimeZoneStandardMinute] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Tháng chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardMonth
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardMonth); }
			set { Entity.Attributes[Fields.TimeZoneStandardMonth] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giây chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardSecond
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardSecond); }
			set { Entity.Attributes[Fields.TimeZoneStandardSecond] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Năm chuẩn của múi giờ địa phương cho người dùng. Hệ thống tính toán dựa trên múi giờ đã chọn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: -1</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneStandardYear
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneStandardYear); }
			set { Entity.Attributes[Fields.TimeZoneStandardYear] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: ID mã thông báo theo dõi.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TrackingTokenId
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TrackingTokenId); }
			set { Entity.Attributes[Fields.TrackingTokenId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại tiền</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của loại tiền mặc định của người dùng.</para>
		/// <para><strong>Lookup</strong>: <see cref="transactioncurrency"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference TransactionCurrencyId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.TransactionCurrencyId); }
			set { Entity.Attributes[Fields.TransactionCurrencyId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: TryToggleSets</para>
		/// <para><strong>Description</strong>: Danh sách các mô-đun ứng dụng có bộ bật/tắt thử</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string TryToggleSets
		{
			get { return Entity.GetAttributeValue<string>(Fields.TryToggleSets); }
			set { Entity.Attributes[Fields.TryToggleSets] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Bật hoặc tắt chức năng thử chuyển đổi trạng thái.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? TryToggleStatus
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.TryToggleStatus); }
			set { Entity.Attributes[Fields.TryToggleStatus] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của ngôn ngữ để xem giao diện người dùng (UI).</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UILanguageId
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UILanguageId); }
			set { Entity.Attributes[Fields.UILanguageId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có dùng biểu mẫu cuộc hẹn của Microsoft Dynamics 365 trong Microsoft Office Outlook để tạo cuộc hẹn mới không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? UseCrmFormForAppointment
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.UseCrmFormForAppointment); }
			set { Entity.Attributes[Fields.UseCrmFormForAppointment] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có dùng biểu mẫu liên hệ của Microsoft Dynamics 365 trong Microsoft Office Outlook để tạo liên hệ mới không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? UseCrmFormForContact
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.UseCrmFormForContact); }
			set { Entity.Attributes[Fields.UseCrmFormForContact] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có dùng biểu mẫu email của Microsoft Dynamics 365 trong Microsoft Office Outlook để tạo email mới không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? UseCrmFormForEmail
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.UseCrmFormForEmail); }
			set { Entity.Attributes[Fields.UseCrmFormForEmail] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có dùng biểu mẫu nhiệm vụ của Microsoft Dynamics 365 trong Microsoft Office Outlook để tạo nhiệm vụ mới không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? UseCrmFormForTask
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.UseCrmFormForTask); }
			set { Entity.Attributes[Fields.UseCrmFormForTask] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cho biết có dùng dải hình ảnh để kết xuất hình ảnh không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? UseImageStrips
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.UseImageStrips); }
			set { Entity.Attributes[Fields.UseImageStrips] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Chỉ định id cấu hình người dùng trong danh sách đã phân cách bằng dấu phẩy.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,024</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string UserProfile
		{
			get { return Entity.GetAttributeValue<string>(Fields.UserProfile); }
			set { Entity.Attributes[Fields.UserProfile] = value; }
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bố cục ngăn hiển thị trực quan.</para>
		/// <para><strong>Description</strong>: Bố cục của ngăn hiển thị trực quan.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.VisualizationPaneLayout"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.UserSettingsOptionSets.VisualizationPaneLayout.Lien_ke_nhau"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.UserSettingsOptionSets.VisualizationPaneLayout? VisualizationPaneLayout
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.VisualizationPaneLayout);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.UserSettingsOptionSets.VisualizationPaneLayout)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.VisualizationPaneLayout] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.VisualizationPaneLayout] = null;
			}
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giờ bắt đầu ngày làm việc cho người dùng.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string WorkdayStartTime
		{
			get { return Entity.GetAttributeValue<string>(Fields.WorkdayStartTime); }
			set { Entity.Attributes[Fields.WorkdayStartTime] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Giờ kết thúc ngày làm việc cho người dùng.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 5</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string WorkdayStopTime
		{
			get { return Entity.GetAttributeValue<string>(Fields.WorkdayStopTime); }
			set { Entity.Attributes[Fields.WorkdayStopTime] = value; }
		}
	}
}