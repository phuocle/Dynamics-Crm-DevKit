//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:42
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets
{
	public enum msdyn_AnalysisComponentType
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Tình trạng Thành phần</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Tinh_trang_Thanh_phan = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tình trạng Tổ chức</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Tinh_trang_To_chuc = 192_350_000
	}
	public enum msdyn_Category
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bảo mật</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Bao_mat = 192_350_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Di chuyển Trực tuyến</para>
		/// <para><strong>Value</strong>: 192,350,005</para>
		/// </summary>
		Di_chuyen_Truc_tuyen = 192_350_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiệu suất</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Hieu_suat = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Khả năng duy trì</para>
		/// <para><strong>Value</strong>: 192,350,006</para>
		/// </summary>
		Kha_nang_duy_tri = 192_350_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Khả năng hỗ trợ</para>
		/// <para><strong>Value</strong>: 192,350,007</para>
		/// </summary>
		Kha_nang_ho_tro = 192_350_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Khả năng truy nhập</para>
		/// <para><strong>Value</strong>: 192,350,008</para>
		/// </summary>
		Kha_nang_truy_nhap = 192_350_008,
		/// <summary>
		/// <para><strong>Display Name</strong>: Licensing</para>
		/// <para><strong>Value</strong>: 192,350,009</para>
		/// </summary>
		Licensing = 192_350_009,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sẵn sàng Nâng cấp</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		San_sang_Nang_cap = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sử dụng</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Su_dung = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết kế</para>
		/// <para><strong>Value</strong>: 192,350,004</para>
		/// </summary>
		Thiet_ke = 192_350_004
	}
	public enum msdyn_ComponentType
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cấu hình</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Cau_hinh = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phần bổ trợ</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Phan_bo_tro = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tài nguyên web</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Tai_nguyen_web = 192_350_000
	}
	public enum msdyn_Level
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cảnh báo</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Canh_bao = 192_350_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lỗi</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Loi = 192_350_000
	}
	public enum msdyn_ReturnStatus
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cảnh báo</para>
		/// <para><strong>Value</strong>: 192,350,004</para>
		/// </summary>
		Canh_bao = 192_350_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã giải quyết</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Da_giai_quyet = 192_350_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đạt</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Dat = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Gợi ý</para>
		/// <para><strong>Value</strong>: 192,350,006</para>
		/// </summary>
		Goi_y = 192_350_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lỗi</para>
		/// <para><strong>Value</strong>: 192,350,005</para>
		/// </summary>
		Loi = 192_350_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lỗi Cấu hình</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Loi_Cau_hinh = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thất bại</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		That_bai = 192_350_001
	}
	public enum msdyn_Severity
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cao</para>
		/// <para><strong>Value</strong>: 192,350,002</para>
		/// </summary>
		Cao = 192_350_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nghiêm trọng</para>
		/// <para><strong>Value</strong>: 192,350,003</para>
		/// </summary>
		Nghiem_trong = 192_350_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thấp</para>
		/// <para><strong>Value</strong>: 192,350,000</para>
		/// </summary>
		Thap = 192_350_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trung bình</para>
		/// <para><strong>Value</strong>: 192,350,001</para>
		/// </summary>
		Trung_binh = 192_350_001
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_analysisresult : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string msdyn_AnalysisComponentId = "msdyn_analysiscomponentid";
			public const string msdyn_AnalysisComponentType = "msdyn_analysiscomponenttype";
			public const string msdyn_AnalysisJobId = "msdyn_analysisjobid";
			public const string msdyn_analysisresultId = "msdyn_analysisresultid";
			public const string msdyn_Category = "msdyn_category";
			public const string msdyn_ComponentType = "msdyn_componenttype";
			public const string msdyn_EntityName = "msdyn_entityname";
			public const string msdyn_FileUri = "msdyn_fileuri";
			public const string msdyn_HasResolution = "msdyn_hasresolution";
			public const string msdyn_helplink = "msdyn_helplink";
			public const string msdyn_Level = "msdyn_level";
			public const string msdyn_Line = "msdyn_line";
			public const string msdyn_Member = "msdyn_member";
			public const string msdyn_Message = "msdyn_message";
			public const string msdyn_MessageArguments = "msdyn_messagearguments";
			public const string msdyn_MessageId = "msdyn_messageid";
			public const string msdyn_Module = "msdyn_module";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_RepairIssueType = "msdyn_repairissuetype";
			public const string msdyn_ReturnStatus = "msdyn_returnstatus";
			public const string msdyn_RuleId = "msdyn_ruleid";
			public const string msdyn_RuleReferenceUri = "msdyn_rulereferenceuri";
			public const string msdyn_Severity = "msdyn_severity";
			public const string msdyn_Snippet = "msdyn_snippet";
			public const string msdyn_SolutionHealthMessage = "msdyn_solutionhealthmessage";
			public const string msdyn_Type = "msdyn_type";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "msdyn_analysisresult";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10280;
		public const string EntityCollectionSchemaName = "msdyn_analysisresults";
		public const string EntityDisplayCollectionName = "Kết quả Phân tích";
		public const string DisplayName = "Kết quả Phân tích";
		public const string EntitySetName = "msdyn_analysisresults";
		public const string EntityLogicalCollectionName = "msdyn_analysisresults";
		public const string EntityPrimaryIdAttribute = "msdyn_analysisresultid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_name";
		public const string EntitySchemaName = "msdyn_analysisresult";
		[DebuggerNonUserCode()]
		public msdyn_analysisresult()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(Guid msdyn_analysisresultId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_analysisresultId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_analysisresult"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_analysisresult"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_analysisresult(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_analysisresult"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_analysisresult(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_analysisresult(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số thứ tự nhập</para>
		/// <para><strong>Description</strong>: Số thứ tự của quá trình nhập đã tạo bản ghi này.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thành phần Phân tích</para>
		/// <para><strong>Description</strong>: Thành phần Phân tích liên kết có chứa vấn đề mô tả trong Kết quả Phân tích.</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_analysiscomponent"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_AnalysisComponentId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_AnalysisComponentId); }
			set { Entity.Attributes[Fields.msdyn_AnalysisComponentId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: AnalysisComponentType</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_AnalysisComponentType"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_AnalysisComponentType.Tinh_trang_Thanh_phan"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_AnalysisComponentType? msdyn_AnalysisComponentType
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_AnalysisComponentType);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_AnalysisComponentType)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_AnalysisComponentType] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_AnalysisComponentType] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Công việc Phân tích</para>
		/// <para><strong>Description</strong>: Công việc Phân tích mẹ đã đưa ra Kết quả Phân tích</para>
		/// <para><strong>Lookup</strong>: <see cref="msdyn_analysisjob"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_AnalysisJobId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_AnalysisJobId); }
			set { Entity.Attributes[Fields.msdyn_AnalysisJobId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kết quả Phân tích</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_analysisresultId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_analysisresultId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thể loại</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Category"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Category? msdyn_Category
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_Category);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Category)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_Category] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_Category] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại Thành phần</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ComponentType"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ComponentType? msdyn_ComponentType
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_ComponentType);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ComponentType)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_ComponentType] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_ComponentType] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên Thực thể</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 150</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_EntityName
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_EntityName); }
			set { Entity.Attributes[Fields.msdyn_EntityName] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tệp Uri</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_FileUri
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_FileUri); }
			set { Entity.Attributes[Fields.msdyn_FileUri] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: HasResolution</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? msdyn_HasResolution
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.msdyn_HasResolution); }
			set { Entity.Attributes[Fields.msdyn_HasResolution] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Liên kết Trợ giúp</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_helplink
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_helplink); }
			set { Entity.Attributes[Fields.msdyn_helplink] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mức</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Level"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Level? msdyn_Level
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_Level);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Level)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_Level] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_Level] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đường</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyn_Line
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyn_Line); }
			set { Entity.Attributes[Fields.msdyn_Line] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thành viên</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_Member
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_Member); }
			set { Entity.Attributes[Fields.msdyn_Member] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_Message
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_Message); }
			set { Entity.Attributes[Fields.msdyn_Message] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đối số Thông báo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_MessageArguments
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_MessageArguments); }
			set { Entity.Attributes[Fields.msdyn_MessageArguments] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: ID thông báo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_MessageId
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_MessageId); }
			set { Entity.Attributes[Fields.msdyn_MessageId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô-đun</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_Module
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_Module); }
			set { Entity.Attributes[Fields.msdyn_Module] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên thực thể tùy chỉnh.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại sự cố cần khắc phục</para>
		/// <para><strong>Description</strong>: Loại sự cố cần được khắc phục. Giống như Tham số đầu vào IssueType cho Quy tắc tình trạng giải pháp.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 150</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_RepairIssueType
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_RepairIssueType); }
			set { Entity.Attributes[Fields.msdyn_RepairIssueType] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái Trả về</para>
		/// <para><strong>Description</strong>: Trạng thái trả lại của việc chạy quy tắc: đạt, thất bại hoặc lỗi cấu hình</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ReturnStatus"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ReturnStatus? msdyn_ReturnStatus
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_ReturnStatus);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_ReturnStatus)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_ReturnStatus] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_ReturnStatus] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: ID Quy tắc</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_RuleId
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_RuleId); }
			set { Entity.Attributes[Fields.msdyn_RuleId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Uri Tham chiếu Quy tắc</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_RuleReferenceUri
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_RuleReferenceUri); }
			set { Entity.Attributes[Fields.msdyn_RuleReferenceUri] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mức độ nghiêm trọng</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Severity"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Severity? msdyn_Severity
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.msdyn_Severity);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.msdyn_Severity)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.msdyn_Severity] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.msdyn_Severity] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đoạn mã</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_Snippet
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_Snippet); }
			set { Entity.Attributes[Fields.msdyn_Snippet] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 8,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_SolutionHealthMessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_SolutionHealthMessage); }
			set { Entity.Attributes[Fields.msdyn_SolutionHealthMessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_Type
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_Type); }
			set { Entity.Attributes[Fields.msdyn_Type] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo Bản ghi</para>
		/// <para><strong>Description</strong>: Ngày và giờ di chuyển bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chủ sở hữu</para>
		/// <para><strong>Description</strong>: ID chủ sở hữu</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn vị Kinh doanh Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho nhóm sở hữu bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho người dùng sở hữu bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của Kết quả Phân tích</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của Kết quả Phân tích</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.msdyn_analysisresultOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số phiên bản của quy tắc múi giờ</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã múi giờ chuyển đổi UTC</para>
		/// <para><strong>Description</strong>: Mã múi giờ đã dùng khi tạo bản ghi.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}