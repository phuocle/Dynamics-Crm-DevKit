//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:55
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets
{
	public enum Lookback
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: 2 Tiếng</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		_2_Tieng = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: 30 Ngày</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		_30_Ngay = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: 48 Tiếng</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		_48_Tieng = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: 7 Ngày</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		_7_Ngay = 3
	}
	public enum MetricType
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuỗi Thời gian</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Chuoi_Thoi_gian = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thể loại</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		The_loai = 2
	}
	public enum PlotOption
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ đo Tuyến tính</para>
		/// <para><strong>Value</strong>: 10</para>
		/// </summary>
		Bo_do_Tuyen_tinh = 10,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bong bóng</para>
		/// <para><strong>Value</strong>: 11</para>
		/// </summary>
		Bong_bong = 11,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cột</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Cot = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng vòng</para>
		/// <para><strong>Value</strong>: 6</para>
		/// </summary>
		Dang_vong = 6,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng vòng kép</para>
		/// <para><strong>Value</strong>: 9</para>
		/// </summary>
		Dang_vong_kep = 9,
		/// <summary>
		/// <para><strong>Display Name</strong>: Danh sách</para>
		/// <para><strong>Value</strong>: 8</para>
		/// </summary>
		Danh_sach = 8,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đường</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Duong = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thanh</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Thanh = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thẻ thông tin</para>
		/// <para><strong>Value</strong>: 7</para>
		/// </summary>
		The_thong_tin = 7,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tròn</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Tron = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Vùng</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Vung = 3
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class SavedOrgInsightsConfiguration : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string Description = "description";
			public const string IsDefault = "isdefault";
			public const string IsDrilldown = "isdrilldown";
			public const string JsonData = "jsondata";
			public const string JsonDataEndTime = "jsondataendtime";
			public const string JsonDataStartTime = "jsondatastarttime";
			public const string Lookback = "lookback";
			public const string MetricType = "metrictype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string Parameters = "parameters";
			public const string PlotOption = "plotoption";
			public const string SavedOrgInsightsConfigurationId = "savedorginsightsconfigurationid";
		}
		public const string EntityLogicalName = "savedorginsightsconfiguration";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 1309;
		public const string EntityCollectionSchemaName = "SavedOrgInsightsConfigurations";
		public const string EntityDisplayCollectionName = "Đã lưu Cấu hình Hiểu biết Tổ chức";
		public const string DisplayName = "Đã lưu Cấu hình Hiểu biết Tổ chức";
		public const string EntitySetName = "savedorginsightsconfigurations";
		public const string EntityLogicalCollectionName = "savedorginsightsconfigurations";
		public const string EntityPrimaryIdAttribute = "savedorginsightsconfigurationid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "";
		public const string EntitySchemaName = "SavedOrgInsightsConfiguration";
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(Guid SavedOrgInsightsConfigurationId)
		{
			Entity = new Entity(EntityLogicalName, SavedOrgInsightsConfigurationId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SavedOrgInsightsConfiguration"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SavedOrgInsightsConfiguration"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new SavedOrgInsightsConfiguration(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SavedOrgInsightsConfiguration"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new SavedOrgInsightsConfiguration(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SavedOrgInsightsConfiguration(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã tạo bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô tả của cấu hình hiểu biết tổ chức đã lưu</para>
		/// <para><strong>Description</strong>: Mô tả của cấu hình hiểu biết tổ chức đã lưu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Description
		{
			get { return Entity.GetAttributeValue<string>(Fields.Description); }
			set { Entity.Attributes[Fields.Description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cấu hình Mặc định</para>
		/// <para><strong>Description</strong>: Cho biết cấu hình hiểu biết tổ chức đã lưu này có phải là cấu hình mặc định hay không</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsDefault
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsDefault); }
			set { Entity.Attributes[Fields.IsDefault] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Xem chi tiết</para>
		/// <para><strong>Description</strong>: Hiển thị cấu hình này có thể hiện biểu đồ xem chi tiết hay không</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsDrilldown
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsDrilldown); }
			set { Entity.Attributes[Fields.IsDrilldown] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dữ liệu Số liệu theo định dạng Json cho số liệu đó được xác định trong các tham số</para>
		/// <para><strong>Description</strong>: Dữ liệu Số liệu theo định dạng Json cho những số liệu đó được xác định trong các tham số</para>
		/// <para><strong>ReadOnly</strong> - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string JsonData
		{
			get { return Entity.GetAttributeValue<string>(Fields.JsonData); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thời gian Kết thúc</para>
		/// <para><strong>Description</strong>: Thời gian Kết thúc</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? JsonDataEndTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.JsonDataEndTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thời gian Bắt đầu</para>
		/// <para><strong>Description</strong>: Thời gian Bắt đầu</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? JsonDataStartTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.JsonDataStartTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhìn lại</para>
		/// <para><strong>Description</strong>: Khoảng thời gian nhìn lại</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.Lookback"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.Lookback._2_Tieng"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.Lookback? Lookback
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.Lookback);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.Lookback)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.Lookback] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.Lookback] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại Số liệu</para>
		/// <para><strong>Description</strong>: Loại số liệu</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.MetricType"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.MetricType? MetricType
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.MetricType);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.MetricType)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.MetricType] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.MetricType] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sửa đổi bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa đổi bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên hiển thị cho cấu hình hiểu biết tổ chức đã lưu</para>
		/// <para><strong>Description</strong>: Tên hiển thị</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.Name); }
			set { Entity.Attributes[Fields.Name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tổ chức</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của tổ chức liên kết với giải pháp</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="organization"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OrganizationId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OrganizationId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cần có tham số để truy xuất dữ liệu</para>
		/// <para><strong>Description</strong>: Cần có tham số để truy xuất dữ liệu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Parameters
		{
			get { return Entity.GetAttributeValue<string>(Fields.Parameters); }
			set { Entity.Attributes[Fields.Parameters] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tùy chọn Vẽ biểu đồ</para>
		/// <para><strong>Description</strong>: Tùy chọn Vẽ biểu đồ</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.PlotOption"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.PlotOption.Duong"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.PlotOption? PlotOption
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.PlotOption);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SavedOrgInsightsConfigurationOptionSets.PlotOption)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.PlotOption] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.PlotOption] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: SavedOrgInsightsConfigurationId</para>
		/// <para><strong>Description</strong>: Hiện ID của Cấu hình Hiểu biết Tổ chức Đã lưu</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid SavedOrgInsightsConfigurationId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.SavedOrgInsightsConfigurationId] = value;
				Entity.Id = value;
			}
		}
	}
}