//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:53
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.ProcessSessionOptionSets
{
	public enum StateCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hoàn thành</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Hoan_thanh = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoàn thành</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Khong_hoan_thanh = 0
	}
	public enum StatusCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chưa bắt đầu</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Khong_hoan_thanh</strong></para>
		/// </summary>
		Chua_bat_dau = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã hoàn thành</para>
		/// <para><strong>Value</strong>: 4</para>
		/// <para><strong>StateCode.Hoan_thanh</strong></para>
		/// </summary>
		Da_hoan_thanh = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã hủy</para>
		/// <para><strong>Value</strong>: 5</para>
		/// <para><strong>StateCode.Hoan_thanh</strong></para>
		/// </summary>
		Da_huy = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã tạm dừng</para>
		/// <para><strong>Value</strong>: 3</para>
		/// <para><strong>StateCode.Khong_hoan_thanh</strong></para>
		/// </summary>
		Da_tam_dung = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đang tiến hành</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoan_thanh</strong></para>
		/// </summary>
		Dang_tien_hanh = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không thành công</para>
		/// <para><strong>Value</strong>: 6</para>
		/// <para><strong>StateCode.Hoan_thanh</strong></para>
		/// </summary>
		Khong_thanh_cong = 6
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class ProcessSession : EntityBase
	{
		public struct Fields
		{
			public const string ActivityName = "activityname";
			public const string CanceledBy = "canceledby";
			public const string CanceledOn = "canceledon";
			public const string Comments = "comments";
			public const string CompletedBy = "completedby";
			public const string CompletedOn = "completedon";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ErrorCode = "errorcode";
			public const string ExecutedBy = "executedby";
			public const string ExecutedOn = "executedon";
			public const string InputArguments = "inputarguments";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string NextLinkedSessionId = "nextlinkedsessionid";
			public const string OriginatingSessionId = "originatingsessionid";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PreviousLinkedSessionId = "previouslinkedsessionid";
			public const string ProcessId = "processid";
			public const string ProcessSessionId = "processsessionid";
			public const string ProcessStageName = "processstagename";
			public const string ProcessState = "processstate";
			public const string ProtectionKey = "protectionkey";
			public const string RegardingObjectId = "regardingobjectid";
			public const string StartedBy = "startedby";
			public const string StartedOn = "startedon";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string StepName = "stepname";
		}
		public const string EntityLogicalName = "processsession";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 4710;
		public const string EntityCollectionSchemaName = "ProcessSession";
		public const string EntityDisplayCollectionName = "Giao dịch quy trình";
		public const string DisplayName = "Giao dịch quy trình";
		public const string EntitySetName = "processsessions";
		public const string EntityLogicalCollectionName = "processsessions";
		public const string EntityPrimaryIdAttribute = "processsessionid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "name";
		public const string EntitySchemaName = "ProcessSession";
		[DebuggerNonUserCode()]
		public ProcessSession()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public ProcessSession(Guid ProcessSessionId)
		{
			Entity = new Entity(EntityLogicalName, ProcessSessionId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public ProcessSession(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="ProcessSession"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public ProcessSession(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="ProcessSession"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public ProcessSession(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new ProcessSession(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="ProcessSession"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public ProcessSession(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new ProcessSession(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public ProcessSession(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên hoạt động</para>
		/// <para><strong>Description</strong>: Tên hoạt động đang thực thi.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ActivityName
		{
			get { return Entity.GetAttributeValue<string>(Fields.ActivityName); }
			set { Entity.Attributes[Fields.ActivityName] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người hủy</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã hủy giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CanceledBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CanceledBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hủy vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ hủy giao dịch hộp thoại.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CanceledOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CanceledOn); }
			set { Entity.Attributes[Fields.CanceledOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhận xét</para>
		/// <para><strong>Description</strong>: Nhận xét của người dùng.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Comments
		{
			get { return Entity.GetAttributeValue<string>(Fields.Comments); }
			set { Entity.Attributes[Fields.Comments] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người hoàn thành</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã hoàn thành giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CompletedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CompletedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hoàn thành Vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ hoàn thành giao dịch hộp thoại.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CompletedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CompletedOn); }
			set { Entity.Attributes[Fields.CompletedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã bắt đầu giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã Lỗi</para>
		/// <para><strong>Description</strong>: Mã lỗi liên quan đến giao dịch hộp thoại.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ErrorCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ErrorCode); }
			set { Entity.Attributes[Fields.ErrorCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người thực thi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã chạy quy trình hộp thoại.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ExecutedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ExecutedBy); }
			set { Entity.Attributes[Fields.ExecutedBy] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thực thi vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ chạy quy trình hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ExecutedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ExecutedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đối số nhập liệu</para>
		/// <para><strong>Description</strong>: Đối số nhập liệu vào cho quy trình hộp thoại con.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string InputArguments
		{
			get { return Entity.GetAttributeValue<string>(Fields.InputArguments); }
			set { Entity.Attributes[Fields.InputArguments] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sửa đổi giao dịch hộp thoại lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Sửa đổi Vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi giao dịch hộp thoại lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của giao dịch hộp thoại.</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.Name); }
			set { Entity.Attributes[Fields.Name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giao dịch đã liên kết tiếp theo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giao dịch hộp thoại đã liên kết tiếp theo.</para>
		/// <para><strong>Lookup</strong>: <see cref="processsession"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference NextLinkedSessionId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.NextLinkedSessionId); }
			set { Entity.Attributes[Fields.NextLinkedSessionId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giao dịch khởi đầu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giao dịch hộp thoại khởi đầu.</para>
		/// <para><strong>Lookup</strong>: <see cref="processsession"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OriginatingSessionId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OriginatingSessionId); }
			set { Entity.Attributes[Fields.OriginatingSessionId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chủ sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng hoặc nhóm sở hữu giao dịch hộp thoại.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn vị Kinh doanh Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bơn vị kinh doanh sở hữu giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của nhóm sở hữu giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sở hữu giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giao dịch đã liên kết trước đó</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giao dịch hộp thoại đã liên kết trước đó.</para>
		/// <para><strong>Lookup</strong>: <see cref="processsession"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference PreviousLinkedSessionId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.PreviousLinkedSessionId); }
			set { Entity.Attributes[Fields.PreviousLinkedSessionId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Quy trình</para>
		/// <para><strong>Description</strong>: Chọn bản ghi kích hoạt quy trình có liên quan đến giao dịch hộp thoại.</para>
		/// <para><strong>Lookup</strong>: <see cref="workflow"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ProcessId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ProcessId); }
			set { Entity.Attributes[Fields.ProcessId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giao dịch hộp thoại</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giao dịch hộp thoại.</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid ProcessSessionId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.ProcessSessionId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giai đoạn hộp thoại</para>
		/// <para><strong>Description</strong>: Tên của giai đoạn hộp thoại.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ProcessStageName
		{
			get { return Entity.GetAttributeValue<string>(Fields.ProcessStageName); }
			set { Entity.Attributes[Fields.ProcessStageName] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái quy trình</para>
		/// <para><strong>Description</strong>: Trạng thái của quy trình hộp thoại.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ProcessState
		{
			get { return Entity.GetAttributeValue<string>(Fields.ProcessState); }
			set { Entity.Attributes[Fields.ProcessState] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Khóa bảo vệ</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ProtectionKey
		{
			get { return Entity.GetAttributeValue<string>(Fields.ProtectionKey); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản lưu ý</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của đối tượng có liên kết với giao dịch hộp thoại.</para>
		/// <para><strong>Lookup</strong>: <see cref="account"/>, <see cref="activityfileattachment"/>, <see cref="adx_externalidentity"/>, <see cref="adx_invitation"/>, <see cref="adx_inviteredemption"/>, <see cref="adx_portalcomment"/>, <see cref="adx_setting"/>, <see cref="adx_webformsession"/>, <see cref="aicopilot"/>, <see cref="aiplugin"/>, <see cref="aipluginauth"/>, <see cref="aipluginconversationstarter"/>, <see cref="aipluginconversationstartermapping"/>, <see cref="aipluginexternalschema"/>, <see cref="aipluginexternalschemaproperty"/>, <see cref="aiplugingovernance"/>, <see cref="aiplugingovernanceext"/>, <see cref="aiplugininstance"/>, <see cref="aipluginoperation"/>, <see cref="aipluginoperationparameter"/>, <see cref="aipluginoperationresponsetemplate"/>, <see cref="aiplugintitle"/>, <see cref="aipluginusersetting"/>, <see cref="annotation"/>, <see cref="appaction"/>, <see cref="appactionmigration"/>, <see cref="appactionrule"/>, <see cref="appelement"/>, <see cref="application"/>, <see cref="applicationuser"/>, <see cref="appmodulecomponentedge"/>, <see cref="appmodulecomponentnode"/>, <see cref="appointment"/>, <see cref="appsetting"/>, <see cref="appusersetting"/>, <see cref="archivecleanupinfo"/>, <see cref="archivecleanupoperation"/>, <see cref="attributemaskingrule"/>, <see cref="bot"/>, <see cref="botcomponent"/>, <see cref="botcomponentcollection"/>, <see cref="bulkarchiveconfig"/>, <see cref="bulkarchivefailuredetail"/>, <see cref="bulkarchiveoperation"/>, <see cref="bulkarchiveoperationdetail"/>, <see cref="businessunit"/>, <see cref="businessunitnewsarticle"/>, <see cref="canvasappextendedmetadata"/>, <see cref="card"/>, <see cref="cascadegrantrevokeaccessrecordstracker"/>, <see cref="cascadegrantrevokeaccessversiontracker"/>, <see cref="catalog"/>, <see cref="catalogassignment"/>, <see cref="channelaccessprofile"/>, <see cref="channelaccessprofilerule"/>, <see cref="chat"/>, <see cref="comment"/>, <see cref="connection"/>, <see cref="connectioninstance"/>, <see cref="connectionreference"/>, <see cref="connectionrole"/>, <see cref="connector"/>, <see cref="contact"/>, <see cref="conversationtranscript"/>, <see cref="convertrule"/>, <see cref="copilotexamplequestion"/>, <see cref="copilotglossaryterm"/>, <see cref="copilotsynonyms"/>, <see cref="credential"/>, <see cref="customapi"/>, <see cref="customapirequestparameter"/>, <see cref="customapiresponseproperty"/>, <see cref="customeraddress"/>, <see cref="customerrelationship"/>, <see cref="datalakefolder"/>, <see cref="datalakefolderpermission"/>, <see cref="datalakeworkspace"/>, <see cref="datalakeworkspacepermission"/>, <see cref="dataprocessingconfiguration"/>, <see cref="delegatedauthorization"/>, <see cref="deleteditemreference"/>, <see cref="desktopflowbinary"/>, <see cref="desktopflowmodule"/>, <see cref="dvfilesearch"/>, <see cref="dvfilesearchattribute"/>, <see cref="dvfilesearchentity"/>, <see cref="dvtablesearch"/>, <see cref="dvtablesearchattribute"/>, <see cref="dvtablesearchentity"/>, <see cref="email"/>, <see cref="enablearchivalrequest"/>, <see cref="entityrecordfilter"/>, <see cref="environmentvariabledefinition"/>, <see cref="environmentvariablevalue"/>, <see cref="expiredprocess"/>, <see cref="exportedexcel"/>, <see cref="exportsolutionupload"/>, <see cref="externalparty"/>, <see cref="externalpartyitem"/>, <see cref="fabricaiskill"/>, <see cref="fax"/>, <see cref="featurecontrolsetting"/>, <see cref="federatedknowledgeconfiguration"/>, <see cref="federatedknowledgeentityconfiguration"/>, <see cref="flowcapacityassignment"/>, <see cref="flowcredentialapplication"/>, <see cref="flowevent"/>, <see cref="flowmachine"/>, <see cref="flowmachinegroup"/>, <see cref="flowmachineimage"/>, <see cref="flowmachineimageversion"/>, <see cref="flowmachinenetwork"/>, <see cref="fxexpression"/>, <see cref="goal"/>, <see cref="goalrollupquery"/>, <see cref="holidaywrapper"/>, <see cref="internalcatalogassignment"/>, <see cref="kbarticle"/>, <see cref="kbarticlecomment"/>, <see cref="kbarticletemplate"/>, <see cref="keyvaultreference"/>, <see cref="knowledgearticle"/>, <see cref="knowledgebaserecord"/>, <see cref="letter"/>, <see cref="mailbox"/>, <see cref="mailmergetemplate"/>, <see cref="mainfewshot"/>, <see cref="makerfewshot"/>, <see cref="managedidentity"/>, <see cref="maskingrule"/>, <see cref="metadataforarchival"/>, <see cref="metric"/>, <see cref="mobileofflineprofileextension"/>, <see cref="msdynce_botcontent"/>, <see cref="msdyn_aibdataset"/>, <see cref="msdyn_aibdatasetfile"/>, <see cref="msdyn_aibdatasetrecord"/>, <see cref="msdyn_aibdatasetscontainer"/>, <see cref="msdyn_aibfeedbackloop"/>, <see cref="msdyn_aibfile"/>, <see cref="msdyn_aibfileattacheddata"/>, <see cref="msdyn_aiconfiguration"/>, <see cref="msdyn_aievent"/>, <see cref="msdyn_aifptrainingdocument"/>, <see cref="msdyn_aimodel"/>, <see cref="msdyn_aiodimage"/>, <see cref="msdyn_aiodlabel"/>, <see cref="msdyn_aiodtrainingboundingbox"/>, <see cref="msdyn_aiodtrainingimage"/>, <see cref="msdyn_aitemplate"/>, <see cref="msdyn_analysiscomponent"/>, <see cref="msdyn_analysisjob"/>, <see cref="msdyn_analysisoverride"/>, <see cref="msdyn_analysisresult"/>, <see cref="msdyn_analysisresultdetail"/>, <see cref="msdyn_appinsightsmetadata"/>, <see cref="msdyn_customcontrolextendedsettings"/>, <see cref="msdyn_dataflow"/>, <see cref="msdyn_dataflowconnectionreference"/>, <see cref="msdyn_dataflowrefreshhistory"/>, <see cref="msdyn_dataflowtemplate"/>, <see cref="msdyn_dataflow_datalakefolder"/>, <see cref="msdyn_dmsrequest"/>, <see cref="msdyn_dmsrequeststatus"/>, <see cref="msdyn_dmssyncrequest"/>, <see cref="msdyn_dmssyncstatus"/>, <see cref="msdyn_entitylinkchatconfiguration"/>, <see cref="msdyn_entityrefreshhistory"/>, <see cref="msdyn_favoriteknowledgearticle"/>, <see cref="msdyn_federatedarticle"/>, <see cref="msdyn_federatedarticleincident"/>, <see cref="msdyn_fileupload"/>, <see cref="msdyn_flow_actionapprovalmodel"/>, <see cref="msdyn_flow_approval"/>, <see cref="msdyn_flow_approvalrequest"/>, <see cref="msdyn_flow_approvalresponse"/>, <see cref="msdyn_flow_approvalstep"/>, <see cref="msdyn_flow_awaitallactionapprovalmodel"/>, <see cref="msdyn_flow_awaitallapprovalmodel"/>, <see cref="msdyn_flow_basicapprovalmodel"/>, <see cref="msdyn_flow_flowapproval"/>, <see cref="msdyn_helppage"/>, <see cref="msdyn_insightsstorevirtualentity"/>, <see cref="msdyn_integratedsearchprovider"/>, <see cref="msdyn_kalanguagesetting"/>, <see cref="msdyn_kbattachment"/>, <see cref="msdyn_kmfederatedsearchconfig"/>, <see cref="msdyn_kmpersonalizationsetting"/>, <see cref="msdyn_knowledgearticleimage"/>, <see cref="msdyn_knowledgearticletemplate"/>, <see cref="msdyn_knowledgeassetconfiguration"/>, <see cref="msdyn_knowledgeconfiguration"/>, <see cref="msdyn_knowledgeinteractioninsight"/>, <see cref="msdyn_knowledgemanagementsetting"/>, <see cref="msdyn_knowledgepersonalfilter"/>, <see cref="msdyn_knowledgesearchfilter"/>, <see cref="msdyn_knowledgesearchinsight"/>, <see cref="msdyn_mobileapp"/>, <see cref="msdyn_modulerundetail"/>, <see cref="msdyn_pmanalysishistory"/>, <see cref="msdyn_pmbusinessruleautomationconfig"/>, <see cref="msdyn_pmcalendar"/>, <see cref="msdyn_pmcalendarversion"/>, <see cref="msdyn_pminferredtask"/>, <see cref="msdyn_pmprocessextendedmetadataversion"/>, <see cref="msdyn_pmprocesstemplate"/>, <see cref="msdyn_pmprocessusersettings"/>, <see cref="msdyn_pmprocessversion"/>, <see cref="msdyn_pmrecording"/>, <see cref="msdyn_pmsimulation"/>, <see cref="msdyn_pmtemplate"/>, <see cref="msdyn_pmview"/>, <see cref="msdyn_richtextfile"/>, <see cref="msdyn_salesforcestructuredobject"/>, <see cref="msdyn_salesforcestructuredqnaconfig"/>, <see cref="msdyn_schedule"/>, <see cref="msdyn_serviceconfiguration"/>, <see cref="msdyn_slakpi"/>, <see cref="msdyn_solutionhealthrule"/>, <see cref="msdyn_solutionhealthruleargument"/>, <see cref="msdyn_solutionhealthruleset"/>, <see cref="msdyn_tour"/>, <see cref="msdyn_virtualtablecolumncandidate"/>, <see cref="msdyn_workflowactionstatus"/>, <see cref="msgraphresourcetosubscription"/>, <see cref="mspcat_catalogsubmissionfiles"/>, <see cref="mspcat_packagestore"/>, <see cref="newprocess"/>, <see cref="organizationdatasyncfnostate"/>, <see cref="organizationdatasyncstate"/>, <see cref="organizationdatasyncsubscription"/>, <see cref="organizationdatasyncsubscriptionentity"/>, <see cref="organizationdatasyncsubscriptionfnotable"/>, <see cref="organizationsetting"/>, <see cref="package"/>, <see cref="packagehistory"/>, <see cref="pdfsetting"/>, <see cref="phonecall"/>, <see cref="plannerbusinessscenario"/>, <see cref="plannersyncaction"/>, <see cref="position"/>, <see cref="powerbidataset"/>, <see cref="powerbidatasetapdx"/>, <see cref="powerbimashupparameter"/>, <see cref="powerbireport"/>, <see cref="powerbireportapdx"/>, <see cref="powerfxrule"/>, <see cref="powerpagecomponent"/>, <see cref="powerpagesite"/>, <see cref="powerpagesitelanguage"/>, <see cref="powerpagesitepublished"/>, <see cref="powerpagesscanreport"/>, <see cref="privilegecheckerlog"/>, <see cref="privilegecheckerrun"/>, <see cref="privilegesremovalsetting"/>, <see cref="processstageparameter"/>, <see cref="provisionlanguageforuser"/>, <see cref="queue"/>, <see cref="queueitem"/>, <see cref="reconciliationentityinfo"/>, <see cref="reconciliationentitystepinfo"/>, <see cref="reconciliationinfo"/>, <see cref="recordfilter"/>, <see cref="recurringappointmentmaster"/>, <see cref="recyclebinconfig"/>, <see cref="relationshiprole"/>, <see cref="report"/>, <see cref="reportparameter"/>, <see cref="retaineddataexcel"/>, <see cref="retentioncleanupinfo"/>, <see cref="retentioncleanupoperation"/>, <see cref="retentionconfig"/>, <see cref="retentionfailuredetail"/>, <see cref="retentionoperation"/>, <see cref="retentionoperationdetail"/>, <see cref="revokeinheritedaccessrecordstracker"/>, <see cref="roleeditorlayout"/>, <see cref="rollupfield"/>, <see cref="routingrule"/>, <see cref="routingruleitem"/>, <see cref="searchattributesettings"/>, <see cref="searchcustomanalyzer"/>, <see cref="searchrelationshipsettings"/>, <see cref="serviceplan"/>, <see cref="serviceplancustomcontrol"/>, <see cref="serviceplanmapping"/>, <see cref="settingdefinition"/>, <see cref="sharedlinksetting"/>, <see cref="sharedobject"/>, <see cref="sharedworkspace"/>, <see cref="sharedworkspacepool"/>, <see cref="sharepointdocumentlocation"/>, <see cref="sharepointsite"/>, <see cref="sideloadedaiplugin"/>, <see cref="sla"/>, <see cref="socialactivity"/>, <see cref="socialprofile"/>, <see cref="solutioncomponentattributeconfiguration"/>, <see cref="solutioncomponentbatchconfiguration"/>, <see cref="solutioncomponentconfiguration"/>, <see cref="solutioncomponentrelationshipconfiguration"/>, <see cref="stagedentity"/>, <see cref="stagedentityattribute"/>, <see cref="stagedmetadataasyncoperation"/>, <see cref="stagesolutionupload"/>, <see cref="subject"/>, <see cref="supportusertable"/>, <see cref="synapsedatabase"/>, <see cref="synapselinkexternaltablestate"/>, <see cref="synapselinkprofile"/>, <see cref="synapselinkprofileentity"/>, <see cref="synapselinkprofileentitystate"/>, <see cref="synapselinkschedule"/>, <see cref="systemuser"/>, <see cref="systemuserauthorizationchangetracker"/>, <see cref="task"/>, <see cref="tdsmetadata"/>, <see cref="team"/>, <see cref="teammobileofflineprofilemembership"/>, <see cref="template"/>, <see cref="territory"/>, <see cref="theme"/>, <see cref="transactioncurrency"/>, <see cref="translationprocess"/>, <see cref="usermapping"/>, <see cref="usermobileofflineprofilemembership"/>, <see cref="userrating"/>, <see cref="viewasexamplequestion"/>, <see cref="virtualentitymetadata"/>, <see cref="workflowbinary"/>, <see cref="workqueue"/>, <see cref="workqueueitem"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference RegardingObjectId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.RegardingObjectId); }
			set { Entity.Attributes[Fields.RegardingObjectId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bắt đầu vào</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã bắt đầu giao dịch hộp thoại.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference StartedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.StartedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bắt đầu Vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ bắt đầu giao dịch hộp thoại.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? StartedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.StartedOn); }
			set { Entity.Attributes[Fields.StartedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của giao dịch hộp thoại.</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StateCode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StateCode.Khong_hoan_thanh"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StateCode? StateCode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.StateCode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StateCode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.StateCode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.StateCode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến Trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dành cho trạng thái của giao dịch hộp thoại.</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StatusCode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StatusCode? StatusCode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.StatusCode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.ProcessSessionOptionSets.StatusCode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.StatusCode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.StatusCode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bước</para>
		/// <para><strong>Description</strong>: Tên bước trong hộp thoại.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string StepName
		{
			get { return Entity.GetAttributeValue<string>(Fields.StepName); }
			set { Entity.Attributes[Fields.StepName] = value; }
		}
	}
}