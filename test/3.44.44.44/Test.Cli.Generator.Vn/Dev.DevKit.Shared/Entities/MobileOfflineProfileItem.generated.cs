//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:41
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã phát hành</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Da_phat_hanh = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã xóa</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Da_xoa = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã xóa Hủy phát hành</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Da_xoa_Huy_phat_hanh = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hủy phát hành</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Huy_phat_hanh = 1
	}
	public enum RecordDistributionCriteria
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ lọc dữ liệu khác</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Bo_loc_du_lieu_khac = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ lọc dữ liệu tùy chỉnh</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Bo_loc_du_lieu_tuy_chinh = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ tải xuống dữ liệu có liên quan</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Chi_tai_xuong_du_lieu_co_lien_quan = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tất cả bản ghi</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Tat_ca_ban_ghi = 1
	}
	public enum SelectedEntityTypeCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cuộc hẹn</para>
		/// <para><strong>Value</strong>: 4,201</para>
		/// </summary>
		Cuoc_hen = 4_201,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email</para>
		/// <para><strong>Value</strong>: 4,202</para>
		/// </summary>
		Email = 4_202,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hàng đợi</para>
		/// <para><strong>Value</strong>: 2,020</para>
		/// </summary>
		Hang_doi = 2_020,
		/// <summary>
		/// <para><strong>Display Name</strong>: Khách hàng</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khach_hang = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Knowledge Article Attachment</para>
		/// <para><strong>Value</strong>: 10,199</para>
		/// </summary>
		Knowledge_Article_Attachment = 10_199,
		/// <summary>
		/// <para><strong>Display Name</strong>: Knowledge Article Image</para>
		/// <para><strong>Value</strong>: 10,193</para>
		/// </summary>
		Knowledge_Article_Image = 10_193,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ký hiệu mô tả Hình ảnh</para>
		/// <para><strong>Value</strong>: 1,007</para>
		/// </summary>
		Ky_hieu_mo_ta_Hinh_anh = 1_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lưu ý</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Luu_y = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Mục trong hàng đợi</para>
		/// <para><strong>Value</strong>: 2,029</para>
		/// </summary>
		Muc_trong_hang_doi = 2_029,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng</para>
		/// <para><strong>Value</strong>: 8</para>
		/// </summary>
		Nguoi_dung = 8,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người liên hệ</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Nguoi_lien_he = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhiệm vụ</para>
		/// <para><strong>Value</strong>: 4,212</para>
		/// </summary>
		Nhiem_vu = 4_212,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm</para>
		/// <para><strong>Value</strong>: 9</para>
		/// </summary>
		Nhom = 9,
		/// <summary>
		/// <para><strong>Display Name</strong>: OrganizationDataSyncFnoState</para>
		/// <para><strong>Value</strong>: 10,221</para>
		/// </summary>
		OrganizationDataSyncFnoState = 10_221,
		/// <summary>
		/// <para><strong>Display Name</strong>: OrganizationDataSyncState</para>
		/// <para><strong>Value</strong>: 10,222</para>
		/// </summary>
		OrganizationDataSyncState = 10_222,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phần đính kèm tệp hoạt động</para>
		/// <para><strong>Value</strong>: 10,184</para>
		/// </summary>
		Phan_dinh_kem_tep_hoat_dong = 10_184,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phiên bản SLA KPI</para>
		/// <para><strong>Value</strong>: 9,752</para>
		/// </summary>
		Phien_ban_SLA_KPI = 9_752,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tệp đính kèm</para>
		/// <para><strong>Value</strong>: 1,001</para>
		/// </summary>
		Tep_dinh_kem = 1_001
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class MobileOfflineProfileItem : EntityBase
	{
		public struct Fields
		{
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string CanBeFollowed = "canbefollowed";
			public const string ComponentState = "componentstate";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string EntityObjectTypeCode = "entityobjecttypecode";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string GetRelatedEntityRecords = "getrelatedentityrecords";
			public const string IntroducedVersion = "introducedversion";
			public const string IsManaged = "ismanaged";
			public const string IsValidated = "isvalidated";
			public const string IsVisibleInGrid = "isvisibleingrid";
			public const string MobileOfflineProfileItemId = "mobileofflineprofileitemid";
			public const string MobileOfflineProfileItemIdUnique = "mobileofflineprofileitemidunique";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string ProcessId = "processid";
			public const string ProfileItemEntityFilter = "profileitementityfilter";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string ProfileItemRule = "profileitemrule";
			public const string PublishedOn = "publishedon";
			public const string RecordDistributionCriteria = "recorddistributioncriteria";
			public const string RecordsOwnedByMe = "recordsownedbyme";
			public const string RecordsOwnedByMyBusinessUnit = "recordsownedbymybusinessunit";
			public const string RecordsOwnedByMyTeam = "recordsownedbymyteam";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RelationshipData = "relationshipdata";
			public const string SelectedColumns = "selectedcolumns";
			public const string SelectedEntityMetadata = "selectedentitymetadata";
			public const string SelectedEntityTypeCode = "selectedentitytypecode";
			public const string SolutionId = "solutionid";
			public const string StageId = "stageid";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string SyncIntervalInMinutes = "syncintervalinminutes";
			public const string TraversedPath = "traversedpath";
			public const string VersionNumber = "versionnumber";
			[System.Obsolete("Deprecated from version: 8.0.0.0")]
			public const string ViewQuery = "viewquery";
		}
		public const string EntityLogicalName = "mobileofflineprofileitem";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 9867;
		public const string EntityCollectionSchemaName = "MobileOfflineProfileItems";
		public const string EntityDisplayCollectionName = "Mục Cấu hình Mobile Offline";
		public const string DisplayName = "Mục Cấu hình Mobile Offline";
		public const string EntitySetName = "mobileofflineprofileitems";
		public const string EntityLogicalCollectionName = "mobileofflineprofileitems";
		public const string EntityPrimaryIdAttribute = "mobileofflineprofileitemid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "name";
		public const string EntitySchemaName = "MobileOfflineProfileItem";
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Guid MobileOfflineProfileItemId)
		{
			Entity = new Entity(EntityLogicalName, MobileOfflineProfileItemId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="MobileOfflineProfileItem"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="MobileOfflineProfileItem"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new MobileOfflineProfileItem(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="MobileOfflineProfileItem"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new MobileOfflineProfileItem(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public MobileOfflineProfileItem(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cho phép Thực thể Dõi theo Mối quan hệ</para>
		/// <para><strong>Description</strong>: Chỉ định xem có thể theo dõi các bản ghi của thực thể này không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public bool? CanBeFollowed
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.CanBeFollowed); }
			set { Entity.Attributes[Fields.CanBeFollowed] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái thành phần</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.ComponentState"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.ComponentState)value.Value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Cho biết người tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày Tạo</para>
		/// <para><strong>Description</strong>: Cho biết ngày và giờ tạo bản ghi. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Cho biết người tạo bản ghi thay mặt cho người dùng khác.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>Description</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>ReadOnly</strong> - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 1,000,000,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? EntityObjectTypeCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.EntityObjectTypeCode); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải Thực thể Có liên quan</para>
		/// <para><strong>Description</strong>: Chỉ định xem các bản ghi liên quan đến thực thể này có được cung cấp để truy cập ngoại tuyến không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public bool? GetRelatedEntityRecords
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.GetRelatedEntityRecords); }
			set { Entity.Attributes[Fields.GetRelatedEntityRecords] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phiên bản được Giới thiệu</para>
		/// <para><strong>Description</strong>: Phiên bản trong đó Mục Cấu hình Mobile Offline được giới thiệu.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 48</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string IntroducedVersion
		{
			get { return Entity.GetAttributeValue<string>(Fields.IntroducedVersion); }
			set { Entity.Attributes[Fields.IntroducedVersion] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Được Quản lý</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Được quản lý</strong>]: true - [<strong>Không được quản lý</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không được quản lý</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hợp lệ Đối với Mobile Offline không</para>
		/// <para><strong>Description</strong>: Thông tin về việc mục cấu hình đã được xác thực hay chưa</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsValidated
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsValidated); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị Trong Lưới</para>
		/// <para><strong>Description</strong>: Thông tin về khả năng mục cấu hình mobile offline hiển thị trong lưới con Mục Cấu hình.</para>
		/// <para><strong>Two Option</strong> - [<strong>Đúng</strong>]: true - [<strong>Sai</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Đúng</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsVisibleInGrid
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsVisibleInGrid); }
			set { Entity.Attributes[Fields.IsVisibleInGrid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mục Cấu hình Mobile Offline</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của mục cấu hình Mobile Offline.</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid MobileOfflineProfileItemId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.MobileOfflineProfileItemId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Id Duy nhất</para>
		/// <para><strong>Description</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? MobileOfflineProfileItemIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.MobileOfflineProfileItemIdUnique); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi</para>
		/// <para><strong>Description</strong>: Cho biết người cập nhật bản ghi sau cùng.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày Sửa đổi</para>
		/// <para><strong>Description</strong>: Cho biết ngày và giờ cập nhật bản ghi lần cuối. Ngày và giờ được hiển thị trong múi giờ được chọn theo tùy chọn Microsoft Dynamics 365.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Cho biết người đã cập nhật bản ghi thay mặt cho người dùng khác.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Nhập tên của mục cấu hình Mobile Offline.</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.Name); }
			set { Entity.Attributes[Fields.Name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tổ chức</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của tổ chức liên kết với Mục Cấu hình Mobile Offline.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="organization"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OrganizationId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OrganizationId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thời gian Ghi đè Bản ghi</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Quy trình</para>
		/// <para><strong>Description</strong>: Cho biết ID của quy trình.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? ProcessId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.ProcessId); }
			set { Entity.Attributes[Fields.ProcessId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ lọc thực thể mục cấu hình</para>
		/// <para><strong>Description</strong>: Tiêu chí bộ lọc thực thể mục cấu hình</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ProfileItemEntityFilter
		{
			get { return Entity.GetAttributeValue<string>(Fields.ProfileItemEntityFilter); }
			set { Entity.Attributes[Fields.ProfileItemEntityFilter] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Xem để đồng bộ dữ liệu sang thiết bị</para>
		/// <para><strong>Description</strong>: Đã lưu Truy vấn được liên kết với quy tắc mục cấu hình Mobile offline.</para>
		/// <para><strong>Lookup</strong>: <see cref="savedquery"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public EntityReference ProfileItemRule
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ProfileItemRule); }
			set { Entity.Attributes[Fields.ProfileItemRule] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày Xuất bản</para>
		/// <para><strong>Description</strong>: Hiển thị ngày xuất bản lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? PublishedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.PublishedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ lọc Tải xuống Dữ liệu</para>
		/// <para><strong>Description</strong>: Chỉ định bộ lọc tải xuống dữ liệu cho thực thể đã chọn</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria.Chi_tai_xuong_du_lieu_co_lien_quan"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria? RecordDistributionCriteria
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.RecordDistributionCriteria);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.MobileOfflineProfileItemOptionSets.RecordDistributionCriteria)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.RecordDistributionCriteria] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.RecordDistributionCriteria] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải xuống bản ghi của tôi</para>
		/// <para><strong>Description</strong>: Tải xuống bản ghi của tôi</para>
		/// <para><strong>Two Option</strong> - [<strong>Đúng</strong>]: true - [<strong>Sai</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Sai</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMe
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMe); }
			set { Entity.Attributes[Fields.RecordsOwnedByMe] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải xuống bản ghi cho đơn vị kinh doanh của tôi</para>
		/// <para><strong>Description</strong>: Tải xuống bản ghi cho đơn vị kinh doanh của tôi</para>
		/// <para><strong>Two Option</strong> - [<strong>Đúng</strong>]: true - [<strong>Sai</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Sai</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMyBusinessUnit
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMyBusinessUnit); }
			set { Entity.Attributes[Fields.RecordsOwnedByMyBusinessUnit] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải xuống bản ghi cho nhóm của tôi</para>
		/// <para><strong>Description</strong>: Tải xuống bản ghi cho nhóm của tôi</para>
		/// <para><strong>Two Option</strong> - [<strong>Đúng</strong>]: true - [<strong>Sai</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Sai</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? RecordsOwnedByMyTeam
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.RecordsOwnedByMyTeam); }
			set { Entity.Attributes[Fields.RecordsOwnedByMyTeam] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản lưu ý</para>
		/// <para><strong>Description</strong>: Các mục chứa Cấu hình cụ thể.</para>
		/// <para><strong>Lookup</strong>: <see cref="mobileofflineprofile"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference RegardingObjectId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.RegardingObjectId); }
			set { Entity.Attributes[Fields.RegardingObjectId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>Description</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RelationshipData
		{
			get { return Entity.GetAttributeValue<string>(Fields.RelationshipData); }
			set { Entity.Attributes[Fields.RelationshipData] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: SelectedColumns</para>
		/// <para><strong>Description</strong>: Selected attributes of an entity to enable for offline sync</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string SelectedColumns
		{
			get { return Entity.GetAttributeValue<string>(Fields.SelectedColumns); }
			set { Entity.Attributes[Fields.SelectedColumns] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>Description</strong>: Chỉ Sử dụng Nội bộ</para>
		/// <para><strong>ReadOnly</strong> - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string SelectedEntityMetadata
		{
			get { return Entity.GetAttributeValue<string>(Fields.SelectedEntityMetadata); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thực thể</para>
		/// <para><strong>Description</strong>: Thực thể đã bật Mobile Offline</para>
		/// <para><strong>EntityName</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string SelectedEntityTypeCode
		{
			get { return Entity.GetAttributeValue<string>(Fields.SelectedEntityTypeCode); }
			set { Entity.Attributes[Fields.SelectedEntityTypeCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giải pháp</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giải pháp được liên kết.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: (Không còn dùng) Giai đoạn Quy trình</para>
		/// <para><strong>Description</strong>: Cho biết ID của giai đoạn.</para>
		/// <para><strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? StageId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.StageId); }
			set { Entity.Attributes[Fields.StageId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giải pháp</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: SyncIntervalInMinutes</para>
		/// <para><strong>Description</strong>: How often to sync data offline.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: 5 - <strong>MaxValue</strong>: 1,440</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? SyncIntervalInMinutes
		{
			get { return Entity.GetAttributeValue<int?>(Fields.SyncIntervalInMinutes); }
			set { Entity.Attributes[Fields.SyncIntervalInMinutes] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: (Không còn dùng) Đường ngang</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,250</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string TraversedPath
		{
			get { return Entity.GetAttributeValue<string>(Fields.TraversedPath); }
			set { Entity.Attributes[Fields.TraversedPath] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số Phiên bản</para>
		/// <para><strong>Description</strong>: Số phiên bản của Mục Cấu hình Mobile Offline.</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Xem truy vấn</para>
		/// <para><strong>Description</strong>: Chứa sql đã chuyển đổi của dạng xem được tham chiếu.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 8.0.0.0")]
		public string ViewQuery
		{
			get { return Entity.GetAttributeValue<string>(Fields.ViewQuery); }
			set { Entity.Attributes[Fields.ViewQuery] = value; }
		}
	}
}