//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:47
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets
{
	public enum mspp_calendar_initialview
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Năm</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Nam = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày</para>
		/// <para><strong>Value</strong>: 756,150,003</para>
		/// </summary>
		Ngay = 756_150_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tháng</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Thang = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tuần</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Tuan = 756_150_002
	}
	public enum mspp_calendar_style
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Danh sách sự kiện</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Danh_sach_su_kien = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lịch đầy đủ</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Lich_day_du = 756_150_000
	}
	public enum mspp_calendar_timezonemode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Múi giờ cụ thể</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Mui_gio_cu_the = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Múi giờ địa phương của người dùng</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Mui_gio_dia_phuong_cua_nguoi_dung = 756_150_000
	}
	public enum mspp_filter_orientation
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Dọc</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Doc = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngang</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Ngang = 756_150_000
	}
	public enum mspp_map_distanceunits
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: dặm</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		dam = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Km</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Km = 756_150_000
	}
	public enum mspp_map_type
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bing</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Bing = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Esri</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Esri = 756_150_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Google</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Google = 756_150_001
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_entitylist : EntityBase
	{
		public struct Fields
		{
			public const string mspp_calendar_alldayfieldname = "mspp_calendar_alldayfieldname";
			public const string mspp_calendar_descriptionfieldname = "mspp_calendar_descriptionfieldname";
			public const string mspp_calendar_enabled = "mspp_calendar_enabled";
			public const string mspp_calendar_enddatefieldname = "mspp_calendar_enddatefieldname";
			public const string mspp_calendar_initialdate = "mspp_calendar_initialdate";
			public const string mspp_calendar_initialview = "mspp_calendar_initialview";
			public const string mspp_calendar_locationfieldname = "mspp_calendar_locationfieldname";
			public const string mspp_calendar_organizerfieldname = "mspp_calendar_organizerfieldname";
			public const string mspp_calendar_startdatefieldname = "mspp_calendar_startdatefieldname";
			public const string mspp_calendar_style = "mspp_calendar_style";
			public const string mspp_calendar_summaryfieldname = "mspp_calendar_summaryfieldname";
			public const string mspp_calendar_timezone = "mspp_calendar_timezone";
			public const string mspp_calendar_timezonemode = "mspp_calendar_timezonemode";
			public const string mspp_createbuttonlabel = "mspp_createbuttonlabel";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_detailsbuttonlabel = "mspp_detailsbuttonlabel";
			public const string mspp_emptylisttext = "mspp_emptylisttext";
			public const string mspp_entitylistId = "mspp_entitylistid";
			public const string mspp_entityname = "mspp_entityname";
			public const string mspp_entitypermissionsenabled = "mspp_entitypermissionsenabled";
			public const string mspp_filter_applybuttonlabel = "mspp_filter_applybuttonlabel";
			public const string mspp_filter_definition = "mspp_filter_definition";
			public const string mspp_filter_enabled = "mspp_filter_enabled";
			public const string mspp_filter_orientation = "mspp_filter_orientation";
			public const string mspp_filteraccount = "mspp_filteraccount";
			public const string mspp_filterportaluser = "mspp_filterportaluser";
			public const string mspp_filterwebsite = "mspp_filterwebsite";
			public const string mspp_idquerystringparametername = "mspp_idquerystringparametername";
			public const string mspp_iscodecomponent = "mspp_iscodecomponent";
			public const string mspp_key = "mspp_key";
			public const string mspp_map_credentials = "mspp_map_credentials";
			public const string mspp_map_distanceunits = "mspp_map_distanceunits";
			public const string mspp_map_distancevalues = "mspp_map_distancevalues";
			public const string mspp_map_enabled = "mspp_map_enabled";
			public const string mspp_map_infoboxdescriptionfieldname = "mspp_map_infoboxdescriptionfieldname";
			public const string mspp_map_infoboxoffsetx = "mspp_map_infoboxoffsetx";
			public const string mspp_map_infoboxoffsety = "mspp_map_infoboxoffsety";
			public const string mspp_map_infoboxtitlefieldname = "mspp_map_infoboxtitlefieldname";
			public const string mspp_map_latitude = "mspp_map_latitude";
			public const string mspp_map_latitudefieldname = "mspp_map_latitudefieldname";
			public const string mspp_map_longitude = "mspp_map_longitude";
			public const string mspp_map_longitudefieldname = "mspp_map_longitudefieldname";
			public const string mspp_map_pushpinheight = "mspp_map_pushpinheight";
			public const string mspp_map_pushpinurl = "mspp_map_pushpinurl";
			public const string mspp_map_pushpinwidth = "mspp_map_pushpinwidth";
			public const string mspp_map_resturl = "mspp_map_resturl";
			public const string mspp_map_type = "mspp_map_type";
			public const string mspp_map_zoom = "mspp_map_zoom";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_name = "mspp_name";
			public const string mspp_odata_enabled = "mspp_odata_enabled";
			public const string mspp_odata_entitysetname = "mspp_odata_entitysetname";
			public const string mspp_odata_entitytypename = "mspp_odata_entitytypename";
			public const string mspp_odata_view = "mspp_odata_view";
			public const string mspp_pagesize = "mspp_pagesize";
			public const string mspp_primarykeyname = "mspp_primarykeyname";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_registerstartupscript = "mspp_registerstartupscript";
			public const string mspp_searchenabled = "mspp_searchenabled";
			public const string mspp_searchplaceholdertext = "mspp_searchplaceholdertext";
			public const string mspp_searchtooltiptext = "mspp_searchtooltiptext";
			public const string mspp_settings = "mspp_settings";
			public const string mspp_view = "mspp_view";
			public const string mspp_views = "mspp_views";
			public const string mspp_webpageforcreate = "mspp_webpageforcreate";
			public const string mspp_webpagefordetailsview = "mspp_webpagefordetailsview";
			public const string mspp_websiteid = "mspp_websiteid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_entitylist";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10323;
		public const string EntityCollectionSchemaName = "mspp_entitylists";
		public const string EntityDisplayCollectionName = "Danh sách";
		public const string DisplayName = "Danh sách";
		public const string EntitySetName = "mspp_entitylists";
		public const string EntityLogicalCollectionName = "mspp_entitylists";
		public const string EntityPrimaryIdAttribute = "mspp_entitylistid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_entitylist";
		[DebuggerNonUserCode()]
		public mspp_entitylist()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_entitylist(Guid mspp_entitylistId)
		{
			Entity = new Entity(EntityLogicalName, mspp_entitylistId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_entitylist(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_entitylist"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_entitylist(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_entitylist"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_entitylist(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_entitylist(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_entitylist"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_entitylist(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_entitylist(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_entitylist(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Là tên trường cả ngày</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_alldayfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_alldayfieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_alldayfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường mô tả</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_descriptionfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_descriptionfieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_descriptionfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật dạng xem lịch</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_calendar_enabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_calendar_enabled); }
			set { Entity.Attributes[Fields.mspp_calendar_enabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường ngày kết thúc</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_enddatefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_enddatefieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_enddatefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày ban đầu trên lịch</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_calendar_initialdateUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_calendar_initialdate); }
			set { Entity.Attributes[Fields.mspp_calendar_initialdate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem ban đầu của lịch</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_initialview"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_initialview.Thang"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_initialview? mspp_calendar_initialview
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_calendar_initialview);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_initialview)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_calendar_initialview] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_calendar_initialview] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường vị trí</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_locationfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_locationfieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_locationfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường người tổ chức</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_organizerfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_organizerfieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_organizerfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường ngày bắt đầu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_startdatefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_startdatefieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_startdatefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kiểu lịch</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_style"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_style.Lich_day_du"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_style? mspp_calendar_style
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_calendar_style);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_style)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_calendar_style] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_calendar_style] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường tóm tắt</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_calendar_summaryfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_calendar_summaryfieldname); }
			set { Entity.Attributes[Fields.mspp_calendar_summaryfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị múi giờ</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1,500 - <strong>MaxValue</strong>: 1,500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_calendar_timezone
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_calendar_timezone); }
			set { Entity.Attributes[Fields.mspp_calendar_timezone] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chế độ hiển thị múi giờ</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_timezonemode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_timezonemode.Mui_gio_dia_phuong_cua_nguoi_dung"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_timezonemode? mspp_calendar_timezonemode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_calendar_timezonemode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_calendar_timezonemode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_calendar_timezonemode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_calendar_timezonemode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhãn nút tạo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_createbuttonlabel
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_createbuttonlabel); }
			set { Entity.Attributes[Fields.mspp_createbuttonlabel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Hiển thị người đã tạo bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ tạo bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhãn nút chi tiết</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_detailsbuttonlabel
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_detailsbuttonlabel); }
			set { Entity.Attributes[Fields.mspp_detailsbuttonlabel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản danh sách trống</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_emptylisttext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_emptylisttext); }
			set { Entity.Attributes[Fields.mspp_emptylisttext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Danh sách</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_entitylistId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_entitylistId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bảng</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_entityname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_entityname); }
			set { Entity.Attributes[Fields.mspp_entityname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bật quyền đối với bảng</para>
		/// <para><strong>Description</strong>: Cho biết nhà cung cấp quyền đối với bảng có xác nhận đặc quyền trên loại thực thể liên kết với danh sách này hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_entitypermissionsenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_entitypermissionsenabled); }
			set { Entity.Attributes[Fields.mspp_entitypermissionsenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhãn nút áp dụng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_filter_applybuttonlabel
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_filter_applybuttonlabel); }
			set { Entity.Attributes[Fields.mspp_filter_applybuttonlabel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Định nghĩa bộ lọc</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 65,536</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_filter_definition
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_filter_definition); }
			set { Entity.Attributes[Fields.mspp_filter_definition] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật bộ lọc</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_filter_enabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_filter_enabled); }
			set { Entity.Attributes[Fields.mspp_filter_enabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Định hướng bộ lọc</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_filter_orientation"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_filter_orientation? mspp_filter_orientation
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_filter_orientation);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_filter_orientation)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_filter_orientation] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_filter_orientation] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính lọc khách hàng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_filteraccount
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_filteraccount); }
			set { Entity.Attributes[Fields.mspp_filteraccount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính lọc người dùng cổng thông tin</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_filterportaluser
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_filterportaluser); }
			set { Entity.Attributes[Fields.mspp_filterportaluser] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính lọc website</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_filterwebsite
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_filterwebsite); }
			set { Entity.Attributes[Fields.mspp_filterwebsite] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tham số chuỗi truy vấn ID</para>
		/// <para><strong>Description</strong>: Tên tham số được thêm vào Chuỗi truy vấn cho URL của mục danh sách sẽ chứa ID của bản ghi mục danh sách.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_idquerystringparametername
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_idquerystringparametername); }
			set { Entity.Attributes[Fields.mspp_idquerystringparametername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Sử dụng thành phần mã đã đặt cấu hình</para>
		/// <para><strong>Description</strong>: Sử dụng thành phần mã đã đặt cấu hình</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_iscodecomponent
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_iscodecomponent); }
			set { Entity.Attributes[Fields.mspp_iscodecomponent] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Khóa</para>
		/// <para><strong>Description</strong>: Một chuỗi không thể bản địa hóa mà các truy vấn có thể dùng để truy xuất bản ghi.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_key
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_key); }
			set { Entity.Attributes[Fields.mspp_key] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông tin xác thực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_credentials
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_credentials); }
			set { Entity.Attributes[Fields.mspp_map_credentials] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn vị khoảng cách</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_distanceunits"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_distanceunits.dam"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_distanceunits? mspp_map_distanceunits
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_map_distanceunits);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_distanceunits)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_map_distanceunits] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_map_distanceunits] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giá trị khoảng cách</para>
		/// <para><strong>Description</strong>: Hiển thị một danh sách các giá trị số nguyên được phân tách bằng dấu phẩy sẽ được điền vào danh sách thả xuống trong cổng thông tin web để chọn khoảng cách tìm kiếm một vị trí trên bản đồ.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_distancevalues
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_distancevalues); }
			set { Entity.Attributes[Fields.mspp_map_distancevalues] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật bản đồ</para>
		/// <para><strong>Description</strong>: Cho biết có kết xuất dạng xem bản đồ của dữ liệu hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_map_enabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_map_enabled); }
			set { Entity.Attributes[Fields.mspp_map_enabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường mô tả hộp thông tin</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_infoboxdescriptionfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_infoboxdescriptionfieldname); }
			set { Entity.Attributes[Fields.mspp_map_infoboxdescriptionfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Khoảng bù hộp thông tin x</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_map_infoboxoffsetx
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_map_infoboxoffsetx); }
			set { Entity.Attributes[Fields.mspp_map_infoboxoffsetx] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Khoảng bù hộp thông tin y</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_map_infoboxoffsety
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_map_infoboxoffsety); }
			set { Entity.Attributes[Fields.mspp_map_infoboxoffsety] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường tiêu đề hộp thông tin</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_infoboxtitlefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_infoboxtitlefieldname); }
			set { Entity.Attributes[Fields.mspp_map_infoboxtitlefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Vĩ độ</para>
		/// <para><strong>Decimal Number</strong> - <strong>MinValue</strong>: -90 - <strong>MaxValue</strong>: 90</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public double? mspp_map_latitude
		{
			get { return Entity.GetAttributeValue<double?>(Fields.mspp_map_latitude); }
			set { Entity.Attributes[Fields.mspp_map_latitude] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường vĩ độ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_latitudefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_latitudefieldname); }
			set { Entity.Attributes[Fields.mspp_map_latitudefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kinh độ</para>
		/// <para><strong>Decimal Number</strong> - <strong>MinValue</strong>: -180 - <strong>MaxValue</strong>: 180</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public double? mspp_map_longitude
		{
			get { return Entity.GetAttributeValue<double?>(Fields.mspp_map_longitude); }
			set { Entity.Attributes[Fields.mspp_map_longitude] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường kinh độ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_longitudefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_longitudefieldname); }
			set { Entity.Attributes[Fields.mspp_map_longitudefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chiều cao hình ảnh ghim</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_map_pushpinheight
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_map_pushpinheight); }
			set { Entity.Attributes[Fields.mspp_map_pushpinheight] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: URL hình ảnh ghim</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 300</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_pushpinurl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_pushpinurl); }
			set { Entity.Attributes[Fields.mspp_map_pushpinurl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chiều rộng hình ảnh ghim</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_map_pushpinwidth
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_map_pushpinwidth); }
			set { Entity.Attributes[Fields.mspp_map_pushpinwidth] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: URL REST</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 300</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_map_resturl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_map_resturl); }
			set { Entity.Attributes[Fields.mspp_map_resturl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại bản đồ</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_type"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_type.Bing"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_type? mspp_map_type
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_map_type);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.mspp_map_type)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_map_type] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_map_type] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thu phóng</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_map_zoom
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_map_zoom); }
			set { Entity.Attributes[Fields.mspp_map_zoom] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị người gần đây nhất đã cập nhật bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của thực thể tùy chỉnh.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật OData</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_odata_enabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_odata_enabled); }
			set { Entity.Attributes[Fields.mspp_odata_enabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bộ thực thể OData</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_odata_entitysetname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_odata_entitysetname); }
			set { Entity.Attributes[Fields.mspp_odata_entitysetname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên loại thực thể OData</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_odata_entitytypename
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_odata_entitytypename); }
			set { Entity.Attributes[Fields.mspp_odata_entitytypename] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem OData</para>
		/// <para><strong>Description</strong>: Dạng xem thực thể nhằm xác định những cột sẽ được ánh xạ với thuộc tính của thực thể hiển thị trong nguồn cấp dữ liệu OData.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_odata_view
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_odata_view); }
			set { Entity.Attributes[Fields.mspp_odata_view] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kích thước trang</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_pagesize
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_pagesize); }
			set { Entity.Attributes[Fields.mspp_pagesize] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên khóa chính</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_primarykeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_primarykeyname); }
			set { Entity.Attributes[Fields.mspp_primarykeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ cung cấp</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: JavaScript tùy chỉnh</para>
		/// <para><strong>Description</strong>: Hiển thị JavaScript tùy chỉnh sẽ được đặt ngay trước phần tử &lt;/form&gt; đóng ở cuối trang.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_registerstartupscript
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_registerstartupscript); }
			set { Entity.Attributes[Fields.mspp_registerstartupscript] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật tính năng tìm kiếm</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_searchenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_searchenabled); }
			set { Entity.Attributes[Fields.mspp_searchenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản chỗ dành sẵn tìm kiếm</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_searchplaceholdertext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_searchplaceholdertext); }
			set { Entity.Attributes[Fields.mspp_searchplaceholdertext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản chú giải công cụ tìm kiếm</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_searchtooltiptext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_searchtooltiptext); }
			set { Entity.Attributes[Fields.mspp_searchtooltiptext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết đặt</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_settings); }
			set { Entity.Attributes[Fields.mspp_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem</para>
		/// <para><strong>Description</strong>: Không còn dùng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_view
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_view); }
			set { Entity.Attributes[Fields.mspp_view] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng xem</para>
		/// <para>Required - <strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_views
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_views); }
			set { Entity.Attributes[Fields.mspp_views] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trang web để tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho trang web được liên kết với danh sách thực thể.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webpageforcreate
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webpageforcreate); }
			set { Entity.Attributes[Fields.mspp_webpageforcreate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trang web cho dạng xem chi tiết</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho trang web được liên kết với danh sách thực thể.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webpagefordetailsview
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webpagefordetailsview); }
			set { Entity.Attributes[Fields.mspp_webpagefordetailsview] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Website</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho thực thể website được liên kết với bản ghi này</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_website"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_websiteid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_websiteid); }
			set { Entity.Attributes[Fields.mspp_websiteid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của danh sách</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của danh sách</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_entitylistOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}