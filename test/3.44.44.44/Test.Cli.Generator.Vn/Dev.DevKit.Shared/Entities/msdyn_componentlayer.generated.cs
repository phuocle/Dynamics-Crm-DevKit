//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:42
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.msdyn_componentlayerOptionSets
{

}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_componentlayer : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_changes = "msdyn_changes";
			public const string msdyn_children = "msdyn_children";
			public const string msdyn_componentid = "msdyn_componentid";
			public const string msdyn_componentjson = "msdyn_componentjson";
			public const string msdyn_componentlayerId = "msdyn_componentlayerid";
			public const string msdyn_endtime = "msdyn_overwritetime";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_order = "msdyn_order";
			public const string msdyn_publishername = "msdyn_publishername";
			public const string msdyn_solutioncomponentname = "msdyn_solutioncomponentname";
			public const string msdyn_solutionname = "msdyn_solutionname";
		}
		public const string EntityLogicalName = "msdyn_componentlayer";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10006;
		public const string EntityCollectionSchemaName = "msdyn_componentlayers";
		public const string EntityDisplayCollectionName = "Lớp Thành phần";
		public const string DisplayName = "Lớp Thành phần";
		public const string EntitySetName = "msdyn_componentlayers";
		public const string EntityLogicalCollectionName = "msdyn_componentlayers";
		public const string EntityPrimaryIdAttribute = "msdyn_componentlayerid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "msdyn_name";
		public const string EntitySchemaName = "msdyn_componentlayer";
		[DebuggerNonUserCode()]
		public msdyn_componentlayer()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(Guid msdyn_componentlayerId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_componentlayerId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_componentlayer"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_componentlayer"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_componentlayer(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="msdyn_componentlayer"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new msdyn_componentlayer(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public msdyn_componentlayer(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Các thay đổi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_changes
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_changes); }
			set { Entity.Attributes[Fields.msdyn_changes] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Con</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_children
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_children); }
			set { Entity.Attributes[Fields.msdyn_children] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Id thành phần</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_componentid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_componentid); }
			set { Entity.Attributes[Fields.msdyn_componentid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thành phần theo định dạng Json</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_componentjson
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_componentjson); }
			set { Entity.Attributes[Fields.msdyn_componentjson] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp Thành phần</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_componentlayerId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_componentlayerId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ghi đè thời gian</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? msdyn_endtimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.msdyn_endtime); }
			set { Entity.Attributes[Fields.msdyn_endtime] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của thành phần.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn hàng</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyn_order
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyn_order); }
			set { Entity.Attributes[Fields.msdyn_order] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên người phát hành</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_publishername
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_publishername); }
			set { Entity.Attributes[Fields.msdyn_publishername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thành phần giải pháp</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_solutioncomponentname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_solutioncomponentname); }
			set { Entity.Attributes[Fields.msdyn_solutioncomponentname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên giải pháp</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_solutionname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_solutionname); }
			set { Entity.Attributes[Fields.msdyn_solutionname] = value; }
		}
	}
}