//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:49
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets
{
	public enum mspp_websitelcid
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Ả Rập</para>
		/// <para><strong>Value</strong>: 1,025</para>
		/// </summary>
		Tieng_A_Rap = 1_025,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Anh</para>
		/// <para><strong>Value</strong>: 1,033</para>
		/// </summary>
		Tieng_Anh = 1_033,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Ba Lan – Ba Lan</para>
		/// <para><strong>Value</strong>: 1,045</para>
		/// </summary>
		Tieng_Ba_Lan_Ba_Lan = 1_045,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Basque – Basque</para>
		/// <para><strong>Value</strong>: 1,069</para>
		/// </summary>
		Tieng_Basque_Basque = 1_069,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Bồ Đào Nha – Bồ Đào Nha</para>
		/// <para><strong>Value</strong>: 2,070</para>
		/// </summary>
		Tieng_Bo_Dao_Nha_Bo_Dao_Nha = 2_070,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Bồ Đào Nha – Brazil</para>
		/// <para><strong>Value</strong>: 1,046</para>
		/// </summary>
		Tieng_Bo_Dao_Nha_Brazil = 1_046,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Bulgaria – Bulgaria</para>
		/// <para><strong>Value</strong>: 1,026</para>
		/// </summary>
		Tieng_Bulgaria_Bulgaria = 1_026,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Catalan – Catalan</para>
		/// <para><strong>Value</strong>: 1,027</para>
		/// </summary>
		Tieng_Catalan_Catalan = 1_027,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Croatia – Croatia</para>
		/// <para><strong>Value</strong>: 1,050</para>
		/// </summary>
		Tieng_Croatia_Croatia = 1_050,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Đan Mạch – Đan Mạch</para>
		/// <para><strong>Value</strong>: 1,030</para>
		/// </summary>
		Tieng_Dan_Mach_Dan_Mach = 1_030,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Do Thái</para>
		/// <para><strong>Value</strong>: 1,037</para>
		/// </summary>
		Tieng_Do_Thai = 1_037,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Đức – Đức</para>
		/// <para><strong>Value</strong>: 1,031</para>
		/// </summary>
		Tieng_Duc_Duc = 1_031,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Estonia – Estonia</para>
		/// <para><strong>Value</strong>: 1,061</para>
		/// </summary>
		Tieng_Estonia_Estonia = 1_061,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Galician – Tây Ban Nha</para>
		/// <para><strong>Value</strong>: 1,110</para>
		/// </summary>
		Tieng_Galician_Tay_Ban_Nha = 1_110,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Hà Lan – Hà Lan</para>
		/// <para><strong>Value</strong>: 1,043</para>
		/// </summary>
		Tieng_Ha_Lan_Ha_Lan = 1_043,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Hàn – Hàn Quốc</para>
		/// <para><strong>Value</strong>: 1,042</para>
		/// </summary>
		Tieng_Han_Han_Quoc = 1_042,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Hindi – Ấn Độ</para>
		/// <para><strong>Value</strong>: 1,081</para>
		/// </summary>
		Tieng_Hindi_An_Do = 1_081,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Hungary – Hungary</para>
		/// <para><strong>Value</strong>: 1,038</para>
		/// </summary>
		Tieng_Hungary_Hungary = 1_038,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Hy Lạp – Hy Lạp</para>
		/// <para><strong>Value</strong>: 1,032</para>
		/// </summary>
		Tieng_Hy_Lap_Hy_Lap = 1_032,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Indonesia – Indonesia</para>
		/// <para><strong>Value</strong>: 1,057</para>
		/// </summary>
		Tieng_Indonesia_Indonesia = 1_057,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Italy – Italy</para>
		/// <para><strong>Value</strong>: 1,040</para>
		/// </summary>
		Tieng_Italy_Italy = 1_040,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Kazakh – Kazakhstan</para>
		/// <para><strong>Value</strong>: 1,087</para>
		/// </summary>
		Tieng_Kazakh_Kazakhstan = 1_087,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Latvia – Latvia</para>
		/// <para><strong>Value</strong>: 1,062</para>
		/// </summary>
		Tieng_Latvia_Latvia = 1_062,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Litva – Litva</para>
		/// <para><strong>Value</strong>: 1,063</para>
		/// </summary>
		Tieng_Litva_Litva = 1_063,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Mã Lai – Malaysia</para>
		/// <para><strong>Value</strong>: 1,086</para>
		/// </summary>
		Tieng_Ma_Lai_Malaysia = 1_086,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Na Uy (Bokmål) – Na Uy</para>
		/// <para><strong>Value</strong>: 1,044</para>
		/// </summary>
		Tieng_Na_Uy_Bokmal_Na_Uy = 1_044,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Nga – Nga</para>
		/// <para><strong>Value</strong>: 1,049</para>
		/// </summary>
		Tieng_Nga_Nga = 1_049,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Nhật – Nhật Bản</para>
		/// <para><strong>Value</strong>: 1,041</para>
		/// </summary>
		Tieng_Nhat_Nhat_Ban = 1_041,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Phần Lan – Phần Lan</para>
		/// <para><strong>Value</strong>: 1,035</para>
		/// </summary>
		Tieng_Phan_Lan_Phan_Lan = 1_035,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Pháp – Pháp</para>
		/// <para><strong>Value</strong>: 1,036</para>
		/// </summary>
		Tieng_Phap_Phap = 1_036,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Romania – Romania</para>
		/// <para><strong>Value</strong>: 1,048</para>
		/// </summary>
		Tieng_Romania_Romania = 1_048,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Séc – Cộng hòa Séc</para>
		/// <para><strong>Value</strong>: 1,029</para>
		/// </summary>
		Tieng_Sec_Cong_hoa_Sec = 1_029,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Serbia (Cyrillic) – Serbia</para>
		/// <para><strong>Value</strong>: 3,098</para>
		/// </summary>
		Tieng_Serbia_Cyrillic_Serbia = 3_098,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Serbia (Latinh) – Serbia</para>
		/// <para><strong>Value</strong>: 2,074</para>
		/// </summary>
		Tieng_Serbia_Latinh_Serbia = 2_074,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Slovak – Slovakia</para>
		/// <para><strong>Value</strong>: 1,051</para>
		/// </summary>
		Tieng_Slovak_Slovakia = 1_051,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Slovenia – Slovenia</para>
		/// <para><strong>Value</strong>: 1,060</para>
		/// </summary>
		Tieng_Slovenia_Slovenia = 1_060,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Tây Ban Nha (Cách sắp xếp Truyền thống) – Tây Ban Nha</para>
		/// <para><strong>Value</strong>: 3,082</para>
		/// </summary>
		Tieng_Tay_Ban_Nha_Cach_sap_xep_Truyen_thong_Tay_Ban_Nha = 3_082,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Thái – Thái Lan</para>
		/// <para><strong>Value</strong>: 1,054</para>
		/// </summary>
		Tieng_Thai_Thai_Lan = 1_054,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Thổ Nhĩ Kỳ – Thổ Nhĩ Kỳ</para>
		/// <para><strong>Value</strong>: 1,055</para>
		/// </summary>
		Tieng_Tho_Nhi_Ky_Tho_Nhi_Ky = 1_055,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Thụy Điển – Thụy Điển</para>
		/// <para><strong>Value</strong>: 1,053</para>
		/// </summary>
		Tieng_Thuy_Dien_Thuy_Dien = 1_053,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Trung – Đặc khu Hành chính Hồng Kông</para>
		/// <para><strong>Value</strong>: 3,076</para>
		/// </summary>
		Tieng_Trung_Dac_khu_Hanh_chinh_Hong_Kong = 3_076,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Trung – Phồn thể</para>
		/// <para><strong>Value</strong>: 1,028</para>
		/// </summary>
		Tieng_Trung_Phon_the = 1_028,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Trung – Trung Quốc</para>
		/// <para><strong>Value</strong>: 2,052</para>
		/// </summary>
		Tieng_Trung_Trung_Quoc = 2_052,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Ukraina – Ukraina</para>
		/// <para><strong>Value</strong>: 1,058</para>
		/// </summary>
		Tieng_Ukraina_Ukraina = 1_058,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiếng Việt – Việt Nam</para>
		/// <para><strong>Value</strong>: 1,066</para>
		/// </summary>
		Tieng_Viet_Viet_Nam = 1_066
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_websitelanguage : EntityBase
	{
		public struct Fields
		{
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_description = "mspp_description";
			public const string mspp_displayname = "mspp_displayname";
			public const string mspp_languagecode = "mspp_languagecode";
			public const string mspp_lcid = "mspp_lcid";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_name = "mspp_name";
			public const string mspp_publishingstate = "mspp_publishingstate";
			public const string mspp_systemlanguage = "mspp_systemlanguage";
			public const string mspp_websiteid = "mspp_websiteid";
			public const string mspp_websitelanguageId = "mspp_websitelanguageid";
			public const string mspp_websitelcid = "mspp_websitelcid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_websitelanguage";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10345;
		public const string EntityCollectionSchemaName = "mspp_websitelanguages";
		public const string EntityDisplayCollectionName = "Ngôn ngữ của website";
		public const string DisplayName = "Ngôn ngữ của website";
		public const string EntitySetName = "mspp_websitelanguages";
		public const string EntityLogicalCollectionName = "mspp_websitelanguages";
		public const string EntityPrimaryIdAttribute = "mspp_websitelanguageid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_websitelanguage";
		[DebuggerNonUserCode()]
		public mspp_websitelanguage()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(Guid mspp_websitelanguageId)
		{
			Entity = new Entity(EntityLogicalName, mspp_websitelanguageId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_websitelanguage"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_websitelanguage"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_websitelanguage(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_websitelanguage"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_websitelanguage(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_websitelanguage(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Hiển thị người đã tạo bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ tạo bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô tả</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_description); }
			set { Entity.Attributes[Fields.mspp_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên hiển thị của cổng thông tin</para>
		/// <para><strong>Description</strong>: Tên hiển thị đã bản địa hóa của ngôn ngữ cổng thông tin</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_displayname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_displayname); }
			set { Entity.Attributes[Fields.mspp_displayname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã ngôn ngữ</para>
		/// <para><strong>Description</strong>: Mã định danh bản địa hoặc ngôn ngữ xuất hiện trong URL để cho biết ngôn ngữ của cổng thông tin</para>
		/// <para>Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_languagecode
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_languagecode); }
			set { Entity.Attributes[Fields.mspp_languagecode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã nhận dạng mã ngôn ngữ</para>
		/// <para><strong>Description</strong>: ID bản địa được gán cho ngôn ngữ cổng thông tin</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_lcid
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_lcid); }
			set { Entity.Attributes[Fields.mspp_lcid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị người gần đây nhất đã cập nhật bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên ngôn ngữ của cổng thông tin</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái phát hành</para>
		/// <para><strong>Description</strong>: Tra cứu trạng thái phát hành – trạng thái phát hành của phiên bản website/ngôn ngữ này (bản nháp/đã phát hành)</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_publishingstate"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_publishingstate
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_publishingstate); }
			set { Entity.Attributes[Fields.mspp_publishingstate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ hệ thống</para>
		/// <para><strong>Description</strong>: Ngôn ngữ hệ thống xác định ngôn ngữ cổng thông tin nào khả dụng</para>
		/// <para>Required - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_systemlanguage
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_systemlanguage); }
			set { Entity.Attributes[Fields.mspp_systemlanguage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Website</para>
		/// <para><strong>Description</strong>: Tra cứu website</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_website"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_websiteid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_websiteid); }
			set { Entity.Attributes[Fields.mspp_websiteid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ của website</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_websitelanguageId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_websitelanguageId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ Power Pages</para>
		/// <para><strong>Description</strong>: Thuộc tính này chỉ được sử dụng trong Ứng dụng quản lý Power Pages và chỉ dành cho mục đích giao diện người dùng. Giá trị của thuộc tính được ánh xạ tới mspp_systemlanguage.</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.mspp_websitelcid"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.mspp_websitelcid? mspp_websitelcid
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_websitelcid);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.mspp_websitelcid)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_websitelcid] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_websitelcid] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của ngôn ngữ website</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của ngôn ngữ website</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_websitelanguageOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}