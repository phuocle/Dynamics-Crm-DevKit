//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:03
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.AnnotationOptionSets
{
	public enum ObjectTypeCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Báo giá</para>
		/// <para><strong>Value</strong>: 1,084</para>
		/// </summary>
		Bao_gia = 1_084,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cam kết</para>
		/// <para><strong>Value</strong>: 4,215</para>
		/// </summary>
		Cam_ket = 4_215,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ định Nguồn lực</para>
		/// <para><strong>Value</strong>: 4,006</para>
		/// </summary>
		Chi_dinh_Nguon_luc = 4_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chiến dịch</para>
		/// <para><strong>Value</strong>: 4,400</para>
		/// </summary>
		Chien_dich = 4_400,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cơ hội</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Co_hoi = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cơ sở/Thiết bị</para>
		/// <para><strong>Value</strong>: 4,000</para>
		/// </summary>
		Co_soThiet_bi = 4_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cuộc gọi điện thoại</para>
		/// <para><strong>Value</strong>: 4,210</para>
		/// </summary>
		Cuoc_goi_dien_thoai = 4_210,
		/// <summary>
		/// <para><strong>Display Name</strong>: Cuộc hẹn</para>
		/// <para><strong>Value</strong>: 4,201</para>
		/// </summary>
		Cuoc_hen = 4_201,
		/// <summary>
		/// <para><strong>Display Name</strong>: Danh sách Khách hàng Tiếp thị</para>
		/// <para><strong>Value</strong>: 4,300</para>
		/// </summary>
		Danh_sach_Khach_hang_Tiep_thi = 4_300,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dịch vụ</para>
		/// <para><strong>Value</strong>: 4,001</para>
		/// </summary>
		Dich_vu = 4_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đối thủ cạnh tranh</para>
		/// <para><strong>Value</strong>: 123</para>
		/// </summary>
		Doi_thu_canh_tranh = 123,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn hàng</para>
		/// <para><strong>Value</strong>: 1,088</para>
		/// </summary>
		Don_hang = 1_088,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đóng báo giá</para>
		/// <para><strong>Value</strong>: 4,211</para>
		/// </summary>
		Dong_bao_gia = 4_211,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đóng Cơ hội</para>
		/// <para><strong>Value</strong>: 4,208</para>
		/// </summary>
		Dong_Co_hoi = 4_208,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đóng đơn hàng</para>
		/// <para><strong>Value</strong>: 4,209</para>
		/// </summary>
		Dong_don_hang = 4_209,
		/// <summary>
		/// <para><strong>Display Name</strong>: Email</para>
		/// <para><strong>Value</strong>: 4,202</para>
		/// </summary>
		Email = 4_202,
		/// <summary>
		/// <para><strong>Display Name</strong>: Fax</para>
		/// <para><strong>Value</strong>: 4,204</para>
		/// </summary>
		Fax = 4_204,
		/// <summary>
		/// <para><strong>Display Name</strong>: Giải quyết Trường hợp</para>
		/// <para><strong>Value</strong>: 4,206</para>
		/// </summary>
		Giai_quyet_Truong_hop = 4_206,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hóa đơn</para>
		/// <para><strong>Value</strong>: 1,090</para>
		/// </summary>
		Hoa_don = 1_090,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hoạt động Chiến dịch</para>
		/// <para><strong>Value</strong>: 4,402</para>
		/// </summary>
		Hoat_dong_Chien_dich = 4_402,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hoạt động dịch vụ</para>
		/// <para><strong>Value</strong>: 4,214</para>
		/// </summary>
		Hoat_dong_dich_vu = 4_214,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hợp đồng</para>
		/// <para><strong>Value</strong>: 1,010</para>
		/// </summary>
		Hop_dong = 1_010,
		/// <summary>
		/// <para><strong>Display Name</strong>: Khách hàng tiềm năng</para>
		/// <para><strong>Value</strong>: 4</para>
		/// </summary>
		Khach_hang_tiem_nang = 4,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lịch</para>
		/// <para><strong>Value</strong>: 4,003</para>
		/// </summary>
		Lich = 4_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô tả Hợp đồng</para>
		/// <para><strong>Value</strong>: 1,011</para>
		/// </summary>
		Mo_ta_Hop_dong = 1_011,
		/// <summary>
		/// <para><strong>Display Name</strong>: Mục quy tắc định tuyến</para>
		/// <para><strong>Value</strong>: 8,199</para>
		/// </summary>
		Muc_quy_tac_dinh_tuyen = 8_199,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người liên hệ</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Nguoi_lien_he = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhập Hàng loạt</para>
		/// <para><strong>Value</strong>: 4,407</para>
		/// </summary>
		Nhap_Hang_loat = 4_407,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhiệm vụ</para>
		/// <para><strong>Value</strong>: 4,212</para>
		/// </summary>
		Nhiem_vu = 4_212,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phản hồi về Chiến dịch</para>
		/// <para><strong>Value</strong>: 4,401</para>
		/// </summary>
		Phan_hoi_ve_Chien_dich = 4_401,
		/// <summary>
		/// <para><strong>Display Name</strong>: Quy tắc Định tuyến</para>
		/// <para><strong>Value</strong>: 8,181</para>
		/// </summary>
		Quy_tac_Dinh_tuyen = 8_181,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sản phẩm</para>
		/// <para><strong>Value</strong>: 1,024</para>
		/// </summary>
		San_pham = 1_024,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tài khoản</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Tai_khoan = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thư tín</para>
		/// <para><strong>Value</strong>: 4,207</para>
		/// </summary>
		Thu_tin = 4_207,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trường hợp</para>
		/// <para><strong>Value</strong>: 112</para>
		/// </summary>
		Truong_hop = 112
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class Annotation : EntityBase
	{
		public struct Fields
		{
			public const string AnnotationId = "annotationid";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string DocumentBody = "documentbody";
			[System.Obsolete("Deprecated from version: 9.1.0.0")]
			public const string DummyFileName = "dummyfilename";
			[System.Obsolete("Deprecated from version: 9.1.0.0")]
			public const string DummyRegarding = "dummyregarding";
			public const string FileName = "filename";
			public const string FilePointer = "filepointer";
			public const string FileSize = "filesize";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string IsDocument = "isdocument";
			public const string IsPrivate = "isprivate";
			public const string LangId = "langid";
			public const string MimeType = "mimetype";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string NoteText = "notetext";
			public const string ObjectId = "objectid";
			public const string ObjectTypeCode = "objecttypecode";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Prefix = "prefix";
			public const string StepId = "stepid";
			public const string StoragePointer = "storagepointer";
			public const string Subject = "subject";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "annotation";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 5;
		public const string EntityCollectionSchemaName = "Annotations";
		public const string EntityDisplayCollectionName = "Ghi chú";
		public const string DisplayName = "Ghi chú";
		public const string EntitySetName = "annotations";
		public const string EntityLogicalCollectionName = "annotations";
		public const string EntityPrimaryIdAttribute = "annotationid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "subject";
		public const string EntitySchemaName = "Annotation";
		[DebuggerNonUserCode()]
		public Annotation()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public Annotation(Guid AnnotationId)
		{
			Entity = new Entity(EntityLogicalName, AnnotationId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public Annotation(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="Annotation"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public Annotation(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="Annotation"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public Annotation(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new Annotation(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="Annotation"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public Annotation(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new Annotation(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public Annotation(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ghi chú</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của ghi chú.</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid AnnotationId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.AnnotationId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã tạo ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo chú thích.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tài liệu</para>
		/// <para><strong>Description</strong>: Nội dung của tệp đính kèm ghi chú.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string DocumentBody
		{
			get { return Entity.GetAttributeValue<string>(Fields.DocumentBody); }
			set { Entity.Attributes[Fields.DocumentBody] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tệp (không còn dùng)</para>
		/// <para><strong>Description</strong>: Thuộc tính giả lập liên kết với tệp đính kèm ghi chú</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 9.1.0.0")]
		public string DummyFileName
		{
			get { return Entity.GetAttributeValue<string>(Fields.DummyFileName); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Liên quan đến (không còn dùng)</para>
		/// <para><strong>Description</strong>: Thuộc tính giả lập liên kết với ghi chú về việc</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 9.1.0.0")]
		public string DummyRegarding
		{
			get { return Entity.GetAttributeValue<string>(Fields.DummyRegarding); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên Tệp</para>
		/// <para><strong>Description</strong>: Tên tệp ghi chú.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string FileName
		{
			get { return Entity.GetAttributeValue<string>(Fields.FileName); }
			set { Entity.Attributes[Fields.FileName] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Con trỏ Tệp</para>
		/// <para><strong>Description</strong>: Con trỏ tệp đính kèm.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string FilePointer
		{
			get { return Entity.GetAttributeValue<string>(Fields.FilePointer); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kích thước Tệp (Byte)</para>
		/// <para><strong>Description</strong>: Kích thước tệp của ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 1,000,000,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? FileSize
		{
			get { return Entity.GetAttributeValue<int?>(Fields.FileSize); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số Thứ tự Nhập</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của quá trình nhập dữ liệu hoặc dịch chuyển dữ liệu đã tạo bản ghi này.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Là Tài liệu</para>
		/// <para><strong>Description</strong>: Chỉ định ghi chú có là tệp đính kèm hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsDocument
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsDocument); }
			set { Entity.Attributes[Fields.IsDocument] = value; }
		}
		/// <summary>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsPrivate
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsPrivate); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: ID Ngôn ngữ</para>
		/// <para><strong>Description</strong>: Mã ngôn ngữ của ghi chú.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string LangId
		{
			get { return Entity.GetAttributeValue<string>(Fields.LangId); }
			set { Entity.Attributes[Fields.LangId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại Mime</para>
		/// <para><strong>Description</strong>: Loại MIME của tệp đính kèm ghi chú.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string MimeType
		{
			get { return Entity.GetAttributeValue<string>(Fields.MimeType); }
			set { Entity.Attributes[Fields.MimeType] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sửa đổi ghi chú lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Sửa đổi Vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi ghi chú lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa đổi chú thích lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô tả</para>
		/// <para><strong>Description</strong>: Văn bản của ghi chú.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string NoteText
		{
			get { return Entity.GetAttributeValue<string>(Fields.NoteText); }
			set { Entity.Attributes[Fields.NoteText] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản lưu ý</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của đối tượng có ghi chú được liên kết.</para>
		/// <para><strong>Lookup</strong>: <see cref="account"/>, <see cref="adx_invitation"/>, <see cref="adx_inviteredemption"/>, <see cref="adx_portalcomment"/>, <see cref="appointment"/>, <see cref="calendar"/>, <see cref="channelaccessprofile"/>, <see cref="channelaccessprofilerule"/>, <see cref="channelaccessprofileruleitem"/>, <see cref="chat"/>, <see cref="contact"/>, <see cref="convertrule"/>, <see cref="duplicaterule"/>, <see cref="email"/>, <see cref="emailserverprofile"/>, <see cref="fax"/>, <see cref="goal"/>, <see cref="kbarticle"/>, <see cref="knowledgearticle"/>, <see cref="knowledgebaserecord"/>, <see cref="letter"/>, <see cref="mailbox"/>, <see cref="msdyn_aifptrainingdocument"/>, <see cref="msdyn_aimodel"/>, <see cref="msdyn_aiodimage"/>, <see cref="msdyn_flow_approval"/>, <see cref="mspcat_catalogsubmissionfiles"/>, <see cref="phonecall"/>, <see cref="recurringappointmentmaster"/>, <see cref="routingrule"/>, <see cref="routingruleitem"/>, <see cref="sharepointdocument"/>, <see cref="sla"/>, <see cref="socialactivity"/>, <see cref="task"/>, <see cref="workflow"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ObjectId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ObjectId); }
			set { Entity.Attributes[Fields.ObjectId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại Đối tượng</para>
		/// <para><strong>Description</strong>: Loại thực thể có ghi chú được liên kết.</para>
		/// <para><strong>EntityName</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string ObjectTypeCode
		{
			get { return Entity.GetAttributeValue<string>(Fields.ObjectTypeCode); }
			set { Entity.Attributes[Fields.ObjectTypeCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo Bản ghi</para>
		/// <para><strong>Description</strong>: Ngày và giờ dịch chuyển bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chủ sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng hoặc nhóm sở hữu ghi chú.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn vị Kinh doanh Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của đơn vị kinh doanh sở hữu ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của nhóm sở hữu ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng Sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sở hữu ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiền tố</para>
		/// <para><strong>Description</strong>: Tiền tố của con trỏ tệp trong lưu trữ blob.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 10</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Prefix
		{
			get { return Entity.GetAttributeValue<string>(Fields.Prefix); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Id Bước</para>
		/// <para><strong>Description</strong>: id bước của quy trình làm việc liên kết với ghi chú.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 32</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string StepId
		{
			get { return Entity.GetAttributeValue<string>(Fields.StepId); }
			set { Entity.Attributes[Fields.StepId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Con trỏ Lưu trữ</para>
		/// <para><strong>Description</strong>: Con trỏ lưu trữ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 10</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string StoragePointer
		{
			get { return Entity.GetAttributeValue<string>(Fields.StoragePointer); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiêu đề</para>
		/// <para><strong>Description</strong>: Chủ đề liên kết với ghi chú.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 500</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Subject
		{
			get { return Entity.GetAttributeValue<string>(Fields.Subject); }
			set { Entity.Attributes[Fields.Subject] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số Phiên bản</para>
		/// <para><strong>Description</strong>: Số phiên bản của ghi chú.</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}