//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:46
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets
{
	public enum mspcat_IntendedDeploymentType
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Mẫu</para>
		/// <para><strong>Value</strong>: 526,430,001</para>
		/// </summary>
		Mau = 526_430_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiêu chuẩn</para>
		/// <para><strong>Value</strong>: 526,430,000</para>
		/// </summary>
		Tieu_chuan = 526_430_000
	}
	public enum mspcat_Operation
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Gửi đến danh mục</para>
		/// <para><strong>Value</strong>: 958,090,000</para>
		/// </summary>
		Gui_den_danh_muc = 958_090_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải gói lên</para>
		/// <para><strong>Value</strong>: 526,430,001</para>
		/// </summary>
		Tai_goi_len = 526_430_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tạo gói</para>
		/// <para><strong>Value</strong>: 958,090,001</para>
		/// </summary>
		Tao_goi = 958_090_001
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản nháp</para>
		/// <para><strong>Value</strong>: 958,090,003</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Ban_nhap = 958_090_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã gửi</para>
		/// <para><strong>Value</strong>: 958,090,004</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Da_gui = 958_090_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã hoàn tất</para>
		/// <para><strong>Value</strong>: 958,090,001</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Da_hoan_tat = 958_090_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đang chạy</para>
		/// <para><strong>Value</strong>: 958,090,000</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Dang_chay = 958_090_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đang chờ</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Dang_cho = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không thành công</para>
		/// <para><strong>Value</strong>: 958,090,002</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Khong_thanh_cong = 958_090_002
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspcat_PackageStore : EntityBase
	{
		public struct Fields
		{
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string mspcat_AsyncOperationId = "mspcat_asyncoperationid";
			public const string mspcat_IntendedDeploymentType = "mspcat_intendeddeploymenttype";
			public const string mspcat_Name = "mspcat_name";
			public const string mspcat_Operation = "mspcat_operation";
			public const string mspcat_PackageFile = "mspcat_packagefile";
			public const string mspcat_PackageFile_name = "mspcat_packagefile_name";
			public const string mspcat_PackageStoreId = "mspcat_packagestoreid";
			public const string mspcat_ProcessingMessage = "mspcat_processingmessage";
			public const string mspcat_SolutionUniqueName = "mspcat_solutionuniquename";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "mspcat_packagestore";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10360;
		public const string EntityCollectionSchemaName = "mspcat_PackageStores";
		public const string EntityDisplayCollectionName = "Kho nội dung gửi tới gói";
		public const string DisplayName = "Kho nội dung gửi tới gói";
		public const string EntitySetName = "mspcat_packagestores";
		public const string EntityLogicalCollectionName = "mspcat_packagestores";
		public const string EntityPrimaryIdAttribute = "mspcat_packagestoreid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspcat_name";
		public const string EntitySchemaName = "mspcat_PackageStore";
		[DebuggerNonUserCode()]
		public mspcat_PackageStore()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(Guid mspcat_PackageStoreId)
		{
			Entity = new Entity(EntityLogicalName, mspcat_PackageStoreId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspcat_PackageStore"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspcat_PackageStore"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspcat_PackageStore(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspcat_PackageStore"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspcat_PackageStore(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspcat_PackageStore(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số thứ tự của lượt nhập</para>
		/// <para><strong>Description</strong>: Số thứ tự của lần nhập tạo ra bản ghi này.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? ImportSequenceNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.ImportSequenceNumber); }
			set { Entity.Attributes[Fields.ImportSequenceNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện sửa đổi bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: ID hoạt động không đồng thời</para>
		/// <para><strong>Description</strong>: Công việc không đồng bộ được sử dụng để theo dõi hoạt động này.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 40</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspcat_AsyncOperationId
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspcat_AsyncOperationId); }
			set { Entity.Attributes[Fields.mspcat_AsyncOperationId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại triển khai dự kiến</para>
		/// <para><strong>Description</strong>: Loại triển khai dự kiến sử dụng cho gói này</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_IntendedDeploymentType"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_IntendedDeploymentType.Tieu_chuan"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_IntendedDeploymentType? mspcat_IntendedDeploymentType
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspcat_IntendedDeploymentType);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_IntendedDeploymentType)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspcat_IntendedDeploymentType] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspcat_IntendedDeploymentType] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspcat_Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspcat_Name); }
			set { Entity.Attributes[Fields.mspcat_Name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hoạt động</para>
		/// <para><strong>Description</strong>: Mô tả hoạt động yêu cầu trên gói này</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_Operation"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_Operation.Tao_goi"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_Operation? mspcat_Operation
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspcat_Operation);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.mspcat_Operation)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspcat_Operation] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspcat_Operation] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: PackageFile</para>
		/// <para><strong>Description</strong>: Tệp lưu trữ gói</para>
		/// <para><strong>ReadOnly</strong> - <strong>Virtual</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspcat_PackageFile_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspcat_PackageFile_name); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kho gói</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspcat_PackageStoreId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspcat_PackageStoreId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Xử lý thông báo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspcat_ProcessingMessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspcat_ProcessingMessage); }
			set { Entity.Attributes[Fields.mspcat_ProcessingMessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên duy nhất của giải pháp</para>
		/// <para><strong>Description</strong>: Liên kết giữa tên duy nhất của giải pháp và gói danh mục</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspcat_SolutionUniqueName
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspcat_SolutionUniqueName); }
			set { Entity.Attributes[Fields.mspcat_SolutionUniqueName] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo bản ghi</para>
		/// <para><strong>Description</strong>: Ngày và giờ di chuyển bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverriddenCreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverriddenCreatedOn); }
			set { Entity.Attributes[Fields.OverriddenCreatedOn] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chủ sở hữu</para>
		/// <para><strong>Description</strong>: ID chủ sở hữu</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/>, <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwnerId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwnerId); }
			set { Entity.Attributes[Fields.OwnerId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đơn vị kinh doanh sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của đơn vị kinh doanh sở hữu bản ghi</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="businessunit"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningBusinessUnit
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningBusinessUnit); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của nhóm sở hữu bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="team"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningTeam
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningTeam); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng sở hữu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng sở hữu bản ghi.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OwningUser
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OwningUser); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của kho gói</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của kho gói</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspcat_PackageStoreOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số phiên bản quy tắc múi giờ</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? TimeZoneRuleVersionNumber
		{
			get { return Entity.GetAttributeValue<int?>(Fields.TimeZoneRuleVersionNumber); }
			set { Entity.Attributes[Fields.TimeZoneRuleVersionNumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã múi giờ chuyển đổi UTC</para>
		/// <para><strong>Description</strong>: Mã múi giờ được sử dụng khi tạo bản ghi.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -1 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? UTCConversionTimeZoneCode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.UTCConversionTimeZoneCode); }
			set { Entity.Attributes[Fields.UTCConversionTimeZoneCode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Version Number</para>
		/// <para><strong>Description</strong>: Version Number</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}