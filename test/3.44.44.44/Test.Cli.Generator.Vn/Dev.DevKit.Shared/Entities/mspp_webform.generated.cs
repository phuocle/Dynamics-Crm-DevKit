//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:48
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webformOptionSets
{
	public enum mspp_progressindicatorposition
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Dưới cùng</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Duoi_cung = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phải</para>
		/// <para><strong>Value</strong>: 756,150,003</para>
		/// </summary>
		Phai = 756_150_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trái</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Trai = 756_150_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trên cùng</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Tren_cung = 756_150_000
	}
	public enum mspp_progressindicatortype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chức danh</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Chuc_danh = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Dạng số (Bước 1/N)</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Dang_so_Buoc_1N = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thanh tiến trình</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Thanh_tien_trinh = 756_150_002
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webform : EntityBase
	{
		public struct Fields
		{
			public const string mspp_authenticationrequired = "mspp_authenticationrequired";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_editexistingrecordpermitted = "mspp_editexistingrecordpermitted";
			public const string mspp_editexpiredmessage = "mspp_editexpiredmessage";
			public const string mspp_editexpiredstatecode = "mspp_editexpiredstatecode";
			public const string mspp_editexpiredstatuscode = "mspp_editexpiredstatuscode";
			public const string mspp_editnotpermittedmessage = "mspp_editnotpermittedmessage";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_multiplerecordsperuserpermitted = "mspp_multiplerecordsperuserpermitted";
			public const string mspp_name = "mspp_name";
			public const string mspp_progressindicatorenabled = "mspp_progressindicatorenabled";
			public const string mspp_progressindicatorignorelaststep = "mspp_progressindicatorignorelaststep";
			public const string mspp_progressindicatorposition = "mspp_progressindicatorposition";
			public const string mspp_progressindicatorprependstepnum = "mspp_progressindicatorprependstepnum";
			public const string mspp_progressindicatortype = "mspp_progressindicatortype";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_savechangeswarningmessage = "mspp_savechangeswarningmessage";
			public const string mspp_savechangeswarningonclose = "mspp_savechangeswarningonclose";
			public const string mspp_startnewsessiononload = "mspp_startnewsessiononload";
			public const string mspp_startstep = "mspp_startstep";
			public const string mspp_webformId = "mspp_webformid";
			public const string mspp_websiteid = "mspp_websiteid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webform";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10335;
		public const string EntityCollectionSchemaName = "mspp_webforms";
		public const string EntityDisplayCollectionName = "Biểu mẫu nhiều bước";
		public const string DisplayName = "Biểu mẫu nhiều bước";
		public const string EntitySetName = "mspp_webforms";
		public const string EntityLogicalCollectionName = "mspp_webforms";
		public const string EntityPrimaryIdAttribute = "mspp_webformid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_webform";
		[DebuggerNonUserCode()]
		public mspp_webform()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(Guid mspp_webformId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webformId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webform(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webform"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webform(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webform(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webform(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Yêu cầu xác thực</para>
		/// <para><strong>Description</strong>: Chuyển hướng đến phần đăng nhập nếu người dùng ở trạng thái ẩn danh.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_authenticationrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_authenticationrequired); }
			set { Entity.Attributes[Fields.mspp_authenticationrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Hiển thị người đã tạo bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ tạo bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Được phép chỉnh sửa bản ghi hiện có</para>
		/// <para><strong>Description</strong>: Xác định xem có thể chỉnh sửa bản ghi hiện tại hay không. Thiết đặt này bị bỏ qua nếu đặt chế độ biểu mẫu trên bước biểu mẫu thành chế độ chỉnh sửa. Nếu không, tính năng chỉnh sửa biểu mẫu sẽ hoạt động không đúng cách.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_editexistingrecordpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_editexistingrecordpermitted); }
			set { Entity.Attributes[Fields.mspp_editexistingrecordpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo hết hạn chỉnh sửa</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editexpiredmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editexpiredmessage); }
			set { Entity.Attributes[Fields.mspp_editexpiredmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã trạng thái hết hạn chỉnh sửa</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatecode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatecode); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatecode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã tình trạng hết hạn chỉnh sửa</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatuscode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatuscode); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatuscode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo không được phép chỉnh sửa</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editnotpermittedmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editnotpermittedmessage); }
			set { Entity.Attributes[Fields.mspp_editnotpermittedmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị người gần đây nhất đã cập nhật bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cho phép nhiều bản ghi mỗi người dùng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_multiplerecordsperuserpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_multiplerecordsperuserpermitted); }
			set { Entity.Attributes[Fields.mspp_multiplerecordsperuserpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của thực thể tùy chỉnh.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorenabled); }
			set { Entity.Attributes[Fields.mspp_progressindicatorenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bỏ qua đếm bước cuối cùng đang thực hiện</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorignorelaststep
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorignorelaststep); }
			set { Entity.Attributes[Fields.mspp_progressindicatorignorelaststep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Vị trí</para>
		/// <para><strong>Description</strong>: Vị trí của chỉ báo tiến độ liên quan đến biểu mẫu</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition.Tren_cung"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition? mspp_progressindicatorposition
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_progressindicatorposition);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatorposition)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_progressindicatorposition] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_progressindicatorposition] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thêm số bước vào đầu tiêu đề bước</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_progressindicatorprependstepnum
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_progressindicatorprependstepnum); }
			set { Entity.Attributes[Fields.mspp_progressindicatorprependstepnum] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype.Chuc_danh"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype? mspp_progressindicatortype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_progressindicatortype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.mspp_progressindicatortype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_progressindicatortype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_progressindicatortype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ cung cấp</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo cảnh báo lưu các thay đổi</para>
		/// <para><strong>Description</strong>: Thông báo mặc định: Bạn chưa lưu các thay đổi. Hãy bấm vào Hủy nếu bạn muốn ở lại trang để lưu các thay đổi của mình.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_savechangeswarningmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_savechangeswarningmessage); }
			set { Entity.Attributes[Fields.mspp_savechangeswarningmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị cảnh báo lưu các thay đổi khi đóng</para>
		/// <para><strong>Description</strong>: Hiển thị thông báo cảnh báo cho người dùng nếu họ đóng trình duyệt hoặc làm mới trang, hoặc bấm vào nút quay lại trong một biểu mẫu gồm nhiều bước và họ chưa lưu các thay đổi.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_savechangeswarningonclose
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_savechangeswarningonclose); }
			set { Entity.Attributes[Fields.mspp_savechangeswarningonclose] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bắt đầu phiên mới khi tải</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_startnewsessiononload
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_startnewsessiononload); }
			set { Entity.Attributes[Fields.mspp_startnewsessiononload] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước bắt đầu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho Bước biểu mẫu được liên kết với Biểu mẫu nhiều bước.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_startstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_startstep); }
			set { Entity.Attributes[Fields.mspp_startstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Biểu mẫu nhiều bước</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webformId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webformId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Website</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho thực thể website được liên kết với bản ghi này</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_website"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_websiteid
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_websiteid); }
			set { Entity.Attributes[Fields.mspp_websiteid] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của Biểu mẫu nhiều bước</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của Biểu mẫu nhiều bước</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}