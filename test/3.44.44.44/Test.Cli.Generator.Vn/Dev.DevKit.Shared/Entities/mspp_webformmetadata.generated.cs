//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:48
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets
{
	public enum mspp_controlstyle
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ tùy chọn dưới dạng danh sách nút radio dọc</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Bo_tuy_chon_duoi_dang_danh_sach_nut_radio_doc = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ tùy chọn dưới dạng danh sách nút radio ngang</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Bo_tuy_chon_duoi_dang_danh_sach_nut_radio_ngang = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Kết xuất tra cứu dưới dạng thả xuống</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Ket_xuat_tra_cuu_duoi_dang_tha_xuong = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ma trận nhiều lựa chọn</para>
		/// <para><strong>Value</strong>: 100,000,006</para>
		/// </summary>
		Ma_tran_nhieu_lua_chon = 100_000_006,
		/// <summary>
		/// <para><strong>Display Name</strong>: Một dòng văn bản dưới dạng trình xác thực tra cứu vị trí địa lý</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Mot_dong_van_ban_duoi_dang_trinh_xac_thuc_tra_cuu_vi_tri_dia_ly = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhiều lựa chọn</para>
		/// <para><strong>Value</strong>: 100,000,007</para>
		/// </summary>
		Nhieu_lua_chon = 100_000_007,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm số nguyên dưới dạng phạm vi thứ tự xếp hạng cho phép quan hệ ràng buộc</para>
		/// <para><strong>Value</strong>: 100,000,005</para>
		/// </summary>
		Nhom_so_nguyen_duoi_dang_pham_vi_thu_tu_xep_hang_cho_phep_quan_he_rang_buoc = 100_000_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm số nguyên dưới dạng phạm vi thứ tự xếp hạng không có quan hệ ràng buộc</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Nhom_so_nguyen_duoi_dang_pham_vi_thu_tu_xep_hang_khong_co_quan_he_rang_buoc = 100_000_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm số nguyên dưới dạng tổng hằng số</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Nhom_so_nguyen_duoi_dang_tong_hang_so = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm số nguyên dưới dạng xếp hạng ngăn xếp</para>
		/// <para><strong>Value</strong>: 100,000,008</para>
		/// </summary>
		Nhom_so_nguyen_duoi_dang_xep_hang_ngan_xep = 100_000_008,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thành phần mã</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Thanh_phan_ma = 756_150_001
	}
	public enum mspp_descriptionposition
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bên dưới trường</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Ben_duoi_truong = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bên trên nhãn</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Ben_tren_nhan = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bên trên trường</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Ben_tren_truong = 100_000_000
	}
	public enum mspp_onsavetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Giá trị</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Gia_tri = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tháng của ngày hôm nay</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Ngay_thang_cua_ngay_hom_nay = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Nguoi_dung_hien_tai_cua_cong_thong_tin = 100_000_002
	}
	public enum mspp_prepopulatetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Giá trị</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Gia_tri = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tháng của ngày hôm nay</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Ngay_thang_cua_ngay_hom_nay = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Nguoi_dung_hien_tai_cua_cong_thong_tin = 100_000_002
	}
	public enum mspp_type
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Dòng thời gian</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Dong_thoi_gian = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Ghi chú</para>
		/// <para><strong>Value</strong>: 100,000,005</para>
		/// </summary>
		Ghi_chu = 100_000_005,
		/// <summary>
		/// <para><strong>Display Name</strong>: Lưới con</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Luoi_con = 100_000_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Mua</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Mua = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Phần</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Phan = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tab</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Tab = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Thuoc_tinh = 100_000_000
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webformmetadata : EntityBase
	{
		public struct Fields
		{
			public const string mspp_adddescription = "mspp_adddescription";
			public const string mspp_attributelogicalname = "mspp_attributelogicalname";
			public const string mspp_constantsummaximumtotal = "mspp_constantsummaximumtotal";
			public const string mspp_constantsumminimumtotal = "mspp_constantsumminimumtotal";
			public const string mspp_constantsumvalidationerrormessage = "mspp_constantsumvalidationerrormessage";
			public const string mspp_controlstyle = "mspp_controlstyle";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_cssclass = "mspp_cssclass";
			public const string mspp_description = "mspp_description";
			public const string mspp_descriptionposition = "mspp_descriptionposition";
			public const string mspp_entityformforcreate = "mspp_entityformforcreate";
			public const string mspp_entityformforcreateinwebformmetadata = "mspp_entityformforcreateinwebformmetadata";
			public const string mspp_fieldisrequired = "mspp_fieldisrequired";
			public const string mspp_geolocationvalidatorerrormessage = "mspp_geolocationvalidatorerrormessage";
			public const string mspp_groupname = "mspp_groupname";
			public const string mspp_ignoredefaultvalue = "mspp_ignoredefaultvalue";
			public const string mspp_label = "mspp_label";
			public const string mspp_maxmultiplechoiceselectedcount = "mspp_maxmultiplechoiceselectedcount";
			public const string mspp_minmultiplechoiceselectedcount = "mspp_minmultiplechoiceselectedcount";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_multiplechoicevalidationerrormessage = "mspp_multiplechoicevalidationerrormessage";
			public const string mspp_notes_settings = "mspp_notes_settings";
			public const string mspp_onsavefromattribute = "mspp_onsavefromattribute";
			public const string mspp_onsavetype = "mspp_onsavetype";
			public const string mspp_onsavevalue = "mspp_onsavevalue";
			public const string mspp_prepopulatefromattribute = "mspp_prepopulatefromattribute";
			public const string mspp_prepopulatetype = "mspp_prepopulatetype";
			public const string mspp_prepopulatevalue = "mspp_prepopulatevalue";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_purchasecreateinvoiceonpayment = "mspp_purchasecreateinvoiceonpayment";
			public const string mspp_purchasefulfillorderonpayment = "mspp_purchasefulfillorderonpayment";
			public const string mspp_purchaselineitemdescriptionattribute = "mspp_purchaselineitemdescriptionattribute";
			public const string mspp_purchaselineiteminstructionsattribute = "mspp_purchaselineiteminstructionsattribute";
			public const string mspp_purchaselineitemorderattribute = "mspp_purchaselineitemorderattribute";
			public const string mspp_purchaselineitemproductattribute = "mspp_purchaselineitemproductattribute";
			public const string mspp_purchaselineitemquantityattribute = "mspp_purchaselineitemquantityattribute";
			public const string mspp_purchaselineitemrelationship = "mspp_purchaselineitemrelationship";
			public const string mspp_purchaselineitemrequiredattribute = "mspp_purchaselineitemrequiredattribute";
			public const string mspp_purchaselineitemuomattribute = "mspp_purchaselineitemuomattribute";
			public const string mspp_purchaseoptionalproductsrelationship = "mspp_purchaseoptionalproductsrelationship";
			public const string mspp_purchasequotename = "mspp_purchasequotename";
			public const string mspp_purchaserequiredproductsrelationship = "mspp_purchaserequiredproductsrelationship";
			public const string mspp_purchaserequiresshipping = "mspp_purchaserequiresshipping";
			public const string mspp_purchasetargetentityinvoicerelationship = "mspp_purchasetargetentityinvoicerelationship";
			public const string mspp_purchasetargetentityorderrelationship = "mspp_purchasetargetentityorderrelationship";
			public const string mspp_purchasetargetentityrelationship = "mspp_purchasetargetentityrelationship";
			public const string mspp_randomizeoptionsetvalues = "mspp_randomizeoptionsetvalues";
			public const string mspp_rangevalidationerrormessage = "mspp_rangevalidationerrormessage";
			public const string mspp_rankordernotiesvalidationerrormessage = "mspp_rankordernotiesvalidationerrormessage";
			public const string mspp_requiredfieldvalidationerrormessage = "mspp_requiredfieldvalidationerrormessage";
			public const string mspp_sectionname = "mspp_sectionname";
			public const string mspp_setvalueonsave = "mspp_setvalueonsave";
			public const string mspp_subgrid_name = "mspp_subgrid_name";
			public const string mspp_subgrid_settings = "mspp_subgrid_settings";
			public const string mspp_tabname = "mspp_tabname";
			public const string mspp_timeline_settings = "mspp_timeline_settings";
			public const string mspp_type = "mspp_type";
			public const string mspp_useattributedescriptionproperty = "mspp_useattributedescriptionproperty";
			public const string mspp_validationerrormessage = "mspp_validationerrormessage";
			public const string mspp_validationregularexpression = "mspp_validationregularexpression";
			public const string mspp_validationregularexpressionerrormessage = "mspp_validationregularexpressionerrormessage";
			public const string mspp_webformmetadataId = "mspp_webformmetadataid";
			public const string mspp_webformstep = "mspp_webformstep";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webformmetadata";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10336;
		public const string EntityCollectionSchemaName = "mspp_webformmetadatas";
		public const string EntityDisplayCollectionName = "Siêu dữ liệu biểu mẫu nhiều bước";
		public const string DisplayName = "Siêu dữ liệu biểu mẫu nhiều bước";
		public const string EntitySetName = "mspp_webformmetadatas";
		public const string EntityLogicalCollectionName = "mspp_webformmetadatas";
		public const string EntityPrimaryIdAttribute = "mspp_webformmetadataid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_attributelogicalname";
		public const string EntitySchemaName = "mspp_webformmetadata";
		[DebuggerNonUserCode()]
		public mspp_webformmetadata()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Guid mspp_webformmetadataId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webformmetadataId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformmetadata(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformmetadata"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformmetadata(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformmetadata(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thêm nội dung mô tả</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_adddescription
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_adddescription); }
			set { Entity.Attributes[Fields.mspp_adddescription] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính</para>
		/// <para><strong>Description</strong>: Tên của trường thuộc tính sẽ được sửa đổi.</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attributelogicalname); }
			set { Entity.Attributes[Fields.mspp_attributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tổng số tối đa cho tổng hằng số</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_constantsummaximumtotal
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_constantsummaximumtotal); }
			set { Entity.Attributes[Fields.mspp_constantsummaximumtotal] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tổng số tối thiểu cho tổng hằng số</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_constantsumminimumtotal
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_constantsumminimumtotal); }
			set { Entity.Attributes[Fields.mspp_constantsumminimumtotal] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực cho tổng hằng số</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_constantsumvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_constantsumvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_constantsumvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kiểu kiểm soát</para>
		/// <para><strong>Description</strong>: Chỉ định cách sửa đổi hoặc nâng cao kiểm soát.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle? mspp_controlstyle
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_controlstyle);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_controlstyle)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_controlstyle] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_controlstyle] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Hiển thị người đã tạo bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ tạo bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp CSS</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_cssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_cssclass); }
			set { Entity.Attributes[Fields.mspp_cssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nội dung mô tả</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_description
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_description); }
			set { Entity.Attributes[Fields.mspp_description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Vị trí</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition.Ben_tren_truong"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition? mspp_descriptionposition
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_descriptionposition);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_descriptionposition)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_descriptionposition] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_descriptionposition] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Biểu mẫu cơ bản để tạo</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entityformforcreate
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entityformforcreate); }
			set { Entity.Attributes[Fields.mspp_entityformforcreate] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Biểu mẫu cơ bản để tạo</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_entityform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entityformforcreateinwebformmetadata
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entityformforcreateinwebformmetadata); }
			set { Entity.Attributes[Fields.mspp_entityformforcreateinwebformmetadata] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trường bắt buộc</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_fieldisrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_fieldisrequired); }
			set { Entity.Attributes[Fields.mspp_fieldisrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi trình xác thực vị trí địa lý</para>
		/// <para><strong>Description</strong>: Thông báo lỗi hiển thị khi không thể xác thực trình xác thực vị trí địa lý.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocationvalidatorerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocationvalidatorerrormessage); }
			set { Entity.Attributes[Fields.mspp_geolocationvalidatorerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên nhóm</para>
		/// <para><strong>Description</strong>: Cho biết những thuộc tính được nhóm và kết xuất dưới dạng một kiểm soát phức hợp nếu kiểu kiểm soát là loại phân nhóm, chẳng hạn như &quot;Nhóm số nguyên dưới dạng tổng hằng số&quot;.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_groupname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_groupname); }
			set { Entity.Attributes[Fields.mspp_groupname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bỏ qua giá trị mặc định</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_ignoredefaultvalue
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_ignoredefaultvalue); }
			set { Entity.Attributes[Fields.mspp_ignoredefaultvalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhãn</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_label
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_label); }
			set { Entity.Attributes[Fields.mspp_label] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số giá trị tối đa được chọn trong câu nhiều lựa chọn</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_maxmultiplechoiceselectedcount
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_maxmultiplechoiceselectedcount); }
			set { Entity.Attributes[Fields.mspp_maxmultiplechoiceselectedcount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số giá trị tối thiểu cần chọn trong câu nhiều lựa chọn</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_minmultiplechoiceselectedcount
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_minmultiplechoiceselectedcount); }
			set { Entity.Attributes[Fields.mspp_minmultiplechoiceselectedcount] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị người gần đây nhất đã cập nhật bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực cho câu nhiều lựa chọn</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_multiplechoicevalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_multiplechoicevalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_multiplechoicevalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết đặt ghi chú</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_notes_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_notes_settings); }
			set { Entity.Attributes[Fields.mspp_notes_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính khi lưu từ</para>
		/// <para><strong>Description</strong>: Dùng trường này cùng với Loại khi lưu = Người liên hệ của người dùng hiện tại để ánh xạ mọi thuộc tính từ bản ghi người liên hệ của người dùng hiện tại với tên lô-gic cho thuộc tính của bản ghi này.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_onsavefromattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_onsavefromattribute); }
			set { Entity.Attributes[Fields.mspp_onsavefromattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại khi lưu</para>
		/// <para><strong>Description</strong>: Hiển thị cơ chế để điền giá trị vào một trường.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype? mspp_onsavetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_onsavetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_onsavetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_onsavetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_onsavetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giá trị</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_onsavevalue
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_onsavevalue); }
			set { Entity.Attributes[Fields.mspp_onsavevalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính điền sẵn từ</para>
		/// <para><strong>Description</strong>: Dùng trường này cùng với Loại điền sẵn = Người liên hệ của người dùng hiện tại để ánh xạ mọi thuộc tính từ bản ghi người liên hệ của người dùng hiện tại với tên lô-gic cho thuộc tính của bản ghi này.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_prepopulatefromattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_prepopulatefromattribute); }
			set { Entity.Attributes[Fields.mspp_prepopulatefromattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại điền sẵn</para>
		/// <para><strong>Description</strong>: Hiển thị cơ chế để điền giá trị vào một trường.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype? mspp_prepopulatetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_prepopulatetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_prepopulatetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_prepopulatetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_prepopulatetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giá trị điền sẵn</para>
		/// <para><strong>Description</strong>: Giá trị để điền sẵn vào trường.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_prepopulatevalue
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_prepopulatevalue); }
			set { Entity.Attributes[Fields.mspp_prepopulatevalue] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ cung cấp</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tạo hóa đơn khi thanh toán</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchasecreateinvoiceonpayment
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchasecreateinvoiceonpayment); }
			set { Entity.Attributes[Fields.mspp_purchasecreateinvoiceonpayment] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thực hiện đơn hàng khi thanh toán</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchasefulfillorderonpayment
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchasefulfillorderonpayment); }
			set { Entity.Attributes[Fields.mspp_purchasefulfillorderonpayment] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính mô tả đơn hàng chi tiết</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemdescriptionattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemdescriptionattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemdescriptionattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính hướng dẫn đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua đối với các hướng dẫn.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineiteminstructionsattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineiteminstructionsattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineiteminstructionsattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính thứ tự đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua cho đơn hàng cần hiển thị đơn hàng chi tiết.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemorderattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemorderattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemorderattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính sản phẩm trong đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua để tra cứu sản phẩm. Nếu giá trị này không hiển thị và không được đặt thì đơn hàng chi tiết tương ứng sẽ bị loại khỏi giao dịch mua.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemproductattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemproductattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemproductattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính số lượng đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua cho số lượng mặt hàng. (Phải là thuộc tính thập phân.)</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemquantityattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemquantityattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemquantityattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Mối quan hệ từ thực thể giao dịch mua giúp xác định các đơn hàng chi tiết trong giao dịch mua.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính bắt buộc của đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua để cho biết có cần một đơn hàng chi tiết hay không.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemrequiredattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemrequiredattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemrequiredattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên thuộc tính đơn vị đo của đơn hàng chi tiết</para>
		/// <para><strong>Description</strong>: Tên thuộc tính của thực thể đơn hàng chi tiết trong giao dịch mua để tra cứu đơn vị đo.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaselineitemuomattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaselineitemuomattribute); }
			set { Entity.Attributes[Fields.mspp_purchaselineitemuomattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ sản phẩm tùy chọn</para>
		/// <para><strong>Description</strong>: Mối quan hệ từ thực thể mua đối với những sản phẩm cần mua là tùy chọn (người dùng phải chọn đồng ý để mua những mặt hàng này).</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaseoptionalproductsrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaseoptionalproductsrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaseoptionalproductsrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên báo giá</para>
		/// <para><strong>Description</strong>: Tên được dùng cho tất cả báo giá mua hàng mà bước này tạo ra.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasequotename
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasequotename); }
			set { Entity.Attributes[Fields.mspp_purchasequotename] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ sản phẩm bắt buộc</para>
		/// <para><strong>Description</strong>: Mối quan hệ từ thực thể giao dịch mua đối với những sản phẩm cần mua là một phần bắt buộc trong giao dịch mua.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchaserequiredproductsrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchaserequiredproductsrelationship); }
			set { Entity.Attributes[Fields.mspp_purchaserequiredproductsrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Yêu cầu giao hàng</para>
		/// <para><strong>Description</strong>: Chọn xem có yêu cầu quy trình mua hàng thu thập thông tin giao hàng hay không.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_purchaserequiresshipping
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_purchaserequiresshipping); }
			set { Entity.Attributes[Fields.mspp_purchaserequiresshipping] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ hóa đơn của thực thể mục tiêu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityinvoicerelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityinvoicerelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityinvoicerelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ đơn hàng của thực thể mục tiêu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityorderrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityorderrelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityorderrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ của thực thể mục tiêu</para>
		/// <para><strong>Description</strong>: Mối quan hệ từ thực thể mục tiêu bước biểu mẫu tới thực thể mua hàng, nếu mục tiêu bước không phải là thực thể mua hàng.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_purchasetargetentityrelationship
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_purchasetargetentityrelationship); }
			set { Entity.Attributes[Fields.mspp_purchasetargetentityrelationship] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngẫu nhiên hóa giá trị bộ tùy chọn</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_randomizeoptionsetvalues
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_randomizeoptionsetvalues); }
			set { Entity.Attributes[Fields.mspp_randomizeoptionsetvalues] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực phạm vi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_rangevalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_rangevalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_rangevalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực cho thứ tự xếp hạng không có quan hệ ràng buộc</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_rankordernotiesvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_rankordernotiesvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_rankordernotiesvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực cho trường bắt buộc</para>
		/// <para><strong>Description</strong>: Thông báo lỗi hiển thị khi không có giá trị trong một trường bắt buộc.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_requiredfieldvalidationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_requiredfieldvalidationerrormessage); }
			set { Entity.Attributes[Fields.mspp_requiredfieldvalidationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên phần</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_sectionname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_sectionname); }
			set { Entity.Attributes[Fields.mspp_sectionname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đặt giá trị khi lưu</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_setvalueonsave
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_setvalueonsave); }
			set { Entity.Attributes[Fields.mspp_setvalueonsave] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lưới con</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 150</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_subgrid_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_subgrid_name); }
			set { Entity.Attributes[Fields.mspp_subgrid_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết đặt lưới con</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_subgrid_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_subgrid_settings); }
			set { Entity.Attributes[Fields.mspp_subgrid_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tab</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_tabname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_tabname); }
			set { Entity.Attributes[Fields.mspp_tabname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết đặt dòng thời gian</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_timeline_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_timeline_settings); }
			set { Entity.Attributes[Fields.mspp_timeline_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type.Thuoc_tinh"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type? mspp_type
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_type);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.mspp_type)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_type] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_type] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Dùng đặc tính mô tả của thuộc tính</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_useattributedescriptionproperty
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_useattributedescriptionproperty); }
			set { Entity.Attributes[Fields.mspp_useattributedescriptionproperty] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực</para>
		/// <para><strong>Description</strong>: Thông báo lỗi được xác định cho việc xác thực.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationerrormessage); }
			set { Entity.Attributes[Fields.mspp_validationerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Biểu thức chính quy xác thực</para>
		/// <para><strong>Description</strong>: Thêm một trình xác thực biểu thức chính quy với biểu thức chính quy đã chỉ định.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationregularexpression
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationregularexpression); }
			set { Entity.Attributes[Fields.mspp_validationregularexpression] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi xác thực biểu thức chính quy</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationregularexpressionerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationregularexpressionerrormessage); }
			set { Entity.Attributes[Fields.mspp_validationregularexpressionerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Siêu dữ liệu biểu mẫu nhiều bước</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webformmetadataId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webformmetadataId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước biểu mẫu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho Bước biểu mẫu được liên kết với Siêu dữ liệu biểu mẫu nhiều bước.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webformstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webformstep); }
			set { Entity.Attributes[Fields.mspp_webformstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của Siêu dữ liệu biểu mẫu nhiều bước</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của Siêu dữ liệu biểu mẫu nhiều bước</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformmetadataOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}