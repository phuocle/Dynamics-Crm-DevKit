//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:48
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets
{
	public enum mspp_attachfilestoragelocation
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Azure Blob Storage</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Azure_Blob_Storage = 756_150_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tài liệu ghi chú</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Tai_lieu_ghi_chu = 756_150_000
	}
	public enum mspp_entitysourcetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản ghi liên kết với người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Ban_ghi_lien_ket_voi_nguoi_dung_hien_tai_cua_cong_thong_tin = 100_000_004,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuỗi truy vấn</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Chuoi_truy_van = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Kết quả từ bước trước</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Ket_qua_tu_buoc_truoc = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Nguoi_dung_hien_tai_cua_cong_thong_tin = 100_000_002
	}
	public enum mspp_geolocation_maptype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bing</para>
		/// <para><strong>Value</strong>: 756,150,000</para>
		/// </summary>
		Bing = 756_150_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Esri</para>
		/// <para><strong>Value</strong>: 756,150,002</para>
		/// </summary>
		Esri = 756_150_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Google</para>
		/// <para><strong>Value</strong>: 756,150,001</para>
		/// </summary>
		Google = 756_150_001
	}
	public enum mspp_mode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chèn</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Chen = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ đọc</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Chi_doc = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉnh sửa</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Chinh_sua = 100_000_001
	}
	public enum mspp_referenceentitysourcetype
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Bản ghi liên kết với người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Ban_ghi_lien_ket_voi_nguoi_dung_hien_tai_cua_cong_thong_tin = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước trước</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Buoc_truoc = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuỗi truy vấn</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Chuoi_truy_van = 100_000_000
	}
	public enum mspp_type
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuyển hướng</para>
		/// <para><strong>Value</strong>: 100,000,003</para>
		/// </summary>
		Chuyen_huong = 100_000_003,
		/// <summary>
		/// <para><strong>Display Name</strong>: Điều kiện</para>
		/// <para><strong>Value</strong>: 100,000,000</para>
		/// </summary>
		Dieu_kien = 100_000_000,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tab tải</para>
		/// <para><strong>Value</strong>: 100,000,002</para>
		/// </summary>
		Tab_tai = 100_000_002,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải biểu mẫu</para>
		/// <para><strong>Value</strong>: 100,000,001</para>
		/// </summary>
		Tai_bieu_mau = 100_000_001,
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải kiểm soát người dùng</para>
		/// <para><strong>Value</strong>: 100,000,004</para>
		/// </summary>
		Tai_kiem_soat_nguoi_dung = 100_000_004
	}
	public enum statecode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Hien_hoat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_hoat_dong = 1
	}
	public enum statuscode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiện hoạt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Hien_hoat</strong></para>
		/// </summary>
		Hien_hoat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không hoạt động</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Khong_hoat_dong</strong></para>
		/// </summary>
		Khong_hoat_dong = 2
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class mspp_webformstep : EntityBase
	{
		public struct Fields
		{
			public const string mspp_accept = "mspp_accept";
			public const string mspp_allowmultiplefiles = "mspp_allowmultiplefiles";
			public const string mspp_appendquerystring = "mspp_appendquerystring";
			public const string mspp_associatecurrentportaluser = "mspp_associatecurrentportaluser";
			public const string mspp_attachfile = "mspp_attachfile";
			public const string mspp_attachfilelabel = "mspp_attachfilelabel";
			public const string mspp_attachfilemaxsize = "mspp_attachfilemaxsize";
			public const string mspp_attachfilerequired = "mspp_attachfilerequired";
			public const string mspp_attachfilerequirederrormessage = "mspp_attachfilerequirederrormessage";
			public const string mspp_attachfilerestrictaccept = "mspp_attachfilerestrictaccept";
			public const string mspp_attachfilesizeerrormessage = "mspp_attachfilesizeerrormessage";
			public const string mspp_attachfilestoragelocation = "mspp_attachfilestoragelocation";
			public const string mspp_attachfiletypeerrormessage = "mspp_attachfiletypeerrormessage";
			public const string mspp_autogeneratesteps = "mspp_autogeneratesteps";
			public const string mspp_autonumberattributelogicalname = "mspp_autonumberattributelogicalname";
			public const string mspp_autonumberdefinitionname = "mspp_autonumberdefinitionname";
			public const string mspp_captcharequired = "mspp_captcharequired";
			public const string mspp_condition = "mspp_condition";
			public const string mspp_conditiondefaultnextstep = "mspp_conditiondefaultnextstep";
			public const string mspp_containername = "mspp_containername";
			public const string mspp_createautonumber = "mspp_createautonumber";
			public const string mspp_createdby = "mspp_createdby";
			public const string mspp_createdon = "mspp_createdon";
			public const string mspp_editexistingrecordpermitted = "mspp_editexistingrecordpermitted";
			public const string mspp_editexpiredmessage = "mspp_editexpiredmessage";
			public const string mspp_editexpiredstatecode = "mspp_editexpiredstatecode";
			public const string mspp_editexpiredstatusreason = "mspp_editexpiredstatusreason";
			public const string mspp_editnotpermittedmessage = "mspp_editnotpermittedmessage";
			public const string mspp_entitypermissionsenabled = "mspp_entitypermissionsenabled";
			public const string mspp_entitysourcestep = "mspp_entitysourcestep";
			public const string mspp_entitysourcetype = "mspp_entitysourcetype";
			public const string mspp_forceallfieldsrequired = "mspp_forceallfieldsrequired";
			public const string mspp_formname = "mspp_formname";
			public const string mspp_geolocation_addresslinefieldname = "mspp_geolocation_addresslinefieldname";
			public const string mspp_geolocation_cityfieldname = "mspp_geolocation_cityfieldname";
			public const string mspp_geolocation_countryfieldname = "mspp_geolocation_countryfieldname";
			public const string mspp_geolocation_countyfieldname = "mspp_geolocation_countyfieldname";
			public const string mspp_geolocation_displaymap = "mspp_geolocation_displaymap";
			public const string mspp_geolocation_enabled = "mspp_geolocation_enabled";
			public const string mspp_geolocation_formattedaddressfieldname = "mspp_geolocation_formattedaddressfieldname";
			public const string mspp_geolocation_latitudefieldname = "mspp_geolocation_latitudefieldname";
			public const string mspp_geolocation_longitudefieldname = "mspp_geolocation_longitudefieldname";
			public const string mspp_geolocation_maptype = "mspp_geolocation_maptype";
			public const string mspp_geolocation_neighborhoodfieldname = "mspp_geolocation_neighborhoodfieldname";
			public const string mspp_geolocation_postalcodefieldname = "mspp_geolocation_postalcodefieldname";
			public const string mspp_geolocation_statefieldname = "mspp_geolocation_statefieldname";
			public const string mspp_hideformonsuccess = "mspp_hideformonsuccess";
			public const string mspp_instructions = "mspp_instructions";
			public const string mspp_loadeventkeyname = "mspp_loadeventkeyname";
			public const string mspp_loguser = "mspp_loguser";
			public const string mspp_maximumnooffiles = "mspp_maximumnooffiles";
			public const string mspp_mode = "mspp_mode";
			public const string mspp_modifiedby = "mspp_modifiedby";
			public const string mspp_modifiedon = "mspp_modifiedon";
			public const string mspp_movepreviouseventkeyname = "mspp_movepreviouseventkeyname";
			public const string mspp_movepreviouspermitted = "mspp_movepreviouspermitted";
			public const string mspp_multiplerecordsperuserpermitted = "mspp_multiplerecordsperuserpermitted";
			public const string mspp_name = "mspp_name";
			public const string mspp_nextbuttoncssclass = "mspp_nextbuttoncssclass";
			public const string mspp_nextbuttontext = "mspp_nextbuttontext";
			public const string mspp_nextstep = "mspp_nextstep";
			public const string mspp_populatereferenceentitylookupfield = "mspp_populatereferenceentitylookupfield";
			public const string mspp_portaluserlookupattributeisactivityparty = "mspp_portaluserlookupattributeisactivityparty";
			public const string mspp_postbackurl = "mspp_postbackurl";
			public const string mspp_previousbuttoncssclass = "mspp_previousbuttoncssclass";
			public const string mspp_previousbuttontext = "mspp_previousbuttontext";
			public const string mspp_previousstep = "mspp_previousstep";
			public const string mspp_primarykeyattributelogicalname = "mspp_primarykeyattributelogicalname";
			public const string mspp_primarykeyquerystringparametername = "mspp_primarykeyquerystringparametername";
			public const string mspp_provisionedlanguages = "mspp_provisionedlanguages";
			public const string mspp_recommendedfieldsrequired = "mspp_recommendedfieldsrequired";
			public const string mspp_recordnotfoundmessage = "mspp_recordnotfoundmessage";
			public const string mspp_recordsourcerelationshipname = "mspp_recordsourcerelationshipname";
			public const string mspp_redirecturl = "mspp_redirecturl";
			public const string mspp_redirecturlappendentityidquerystring = "mspp_redirecturlappendentityidquerystring";
			public const string mspp_redirecturlcustomquerystring = "mspp_redirecturlcustomquerystring";
			public const string mspp_redirecturlquerystringattribute = "mspp_redirecturlquerystringattribute";
			public const string mspp_redirecturlquerystringattributeparamname = "mspp_redirecturlquerystringattributeparamname";
			public const string mspp_redirecturlquerystringname = "mspp_redirecturlquerystringname";
			public const string mspp_redirectwebpage = "mspp_redirectwebpage";
			public const string mspp_referenceentitylogicalname = "mspp_referenceentitylogicalname";
			public const string mspp_referenceentityprimarykeylogicalname = "mspp_referenceentityprimarykeylogicalname";
			public const string mspp_referenceentityreadonlyformname = "mspp_referenceentityreadonlyformname";
			public const string mspp_referenceentityrelationshipname = "mspp_referenceentityrelationshipname";
			public const string mspp_referenceentityshowreadonlyform = "mspp_referenceentityshowreadonlyform";
			public const string mspp_referenceentitysourcetype = "mspp_referenceentitysourcetype";
			public const string mspp_referenceentitystep = "mspp_referenceentitystep";
			public const string mspp_referencequeryattributelogicalname = "mspp_referencequeryattributelogicalname";
			public const string mspp_referencequerystringisprimarykey = "mspp_referencequerystringisprimarykey";
			public const string mspp_referencequerystringname = "mspp_referencequerystringname";
			public const string mspp_referencerecordsourcerelationshipname = "mspp_referencerecordsourcerelationshipname";
			public const string mspp_referencesourceentitylogicalname = "mspp_referencesourceentitylogicalname";
			public const string mspp_referencetargetlookupattributelogicalname = "mspp_referencetargetlookupattributelogicalname";
			public const string mspp_registerstartupscript = "mspp_registerstartupscript";
			public const string mspp_renderwebresourcesinline = "mspp_renderwebresourcesinline";
			public const string mspp_savedeventkeyname = "mspp_savedeventkeyname";
			public const string mspp_savingeventkeyname = "mspp_savingeventkeyname";
			public const string mspp_setentityreference = "mspp_setentityreference";
			public const string mspp_settings = "mspp_settings";
			public const string mspp_showcaptchaforauthenticatedusers = "mspp_showcaptchaforauthenticatedusers";
			public const string mspp_showownerfields = "mspp_showownerfields";
			public const string mspp_showunsupportedfields = "mspp_showunsupportedfields";
			public const string mspp_storageaccountname = "mspp_storageaccountname";
			public const string mspp_submitbuttonbusytext = "mspp_submitbuttonbusytext";
			public const string mspp_submitbuttoncssclass = "mspp_submitbuttoncssclass";
			public const string mspp_submitbuttontext = "mspp_submitbuttontext";
			public const string mspp_submiteventkeyname = "mspp_submiteventkeyname";
			public const string mspp_successmessage = "mspp_successmessage";
			public const string mspp_tabname = "mspp_tabname";
			public const string mspp_targetentitylogicalname = "mspp_targetentitylogicalname";
			public const string mspp_targetentityportaluserlookupattribute = "mspp_targetentityportaluserlookupattribute";
			public const string mspp_targetentityprimarykeylogicalname = "mspp_targetentityprimarykeylogicalname";
			public const string mspp_title = "mspp_title";
			public const string mspp_tooltipenabled = "mspp_tooltipenabled";
			public const string mspp_type = "mspp_type";
			public const string mspp_usercontrolpath = "mspp_usercontrolpath";
			public const string mspp_usercontroltitle = "mspp_usercontroltitle";
			public const string mspp_userhostaddressattributelogicalname = "mspp_userhostaddressattributelogicalname";
			public const string mspp_useridentitynameattributelogicalname = "mspp_useridentitynameattributelogicalname";
			public const string mspp_validationgroup = "mspp_validationgroup";
			public const string mspp_validationsummarycssclass = "mspp_validationsummarycssclass";
			public const string mspp_validationsummaryheadertext = "mspp_validationsummaryheadertext";
			public const string mspp_validationsummarylinksenabled = "mspp_validationsummarylinksenabled";
			public const string mspp_validationsummarylinktext = "mspp_validationsummarylinktext";
			public const string mspp_webform = "mspp_webform";
			public const string mspp_webformstepId = "mspp_webformstepid";
			public const string statecode = "statecode";
			public const string statuscode = "statuscode";
		}
		public const string EntityLogicalName = "mspp_webformstep";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10337;
		public const string EntityCollectionSchemaName = "mspp_webformsteps";
		public const string EntityDisplayCollectionName = "Bước biểu mẫu";
		public const string DisplayName = "Bước biểu mẫu";
		public const string EntitySetName = "mspp_webformsteps";
		public const string EntityLogicalCollectionName = "mspp_webformsteps";
		public const string EntityPrimaryIdAttribute = "mspp_webformstepid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "mspp_name";
		public const string EntitySchemaName = "mspp_webformstep";
		[DebuggerNonUserCode()]
		public mspp_webformstep()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformstep(Guid mspp_webformstepId)
		{
			Entity = new Entity(EntityLogicalName, mspp_webformstepId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformstep(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformstep"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public mspp_webformstep(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformstep"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformstep(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformstep(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="mspp_webformstep"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public mspp_webformstep(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new mspp_webformstep(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public mspp_webformstep(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chấp nhận</para>
		/// <para><strong>Description</strong>: Thuộc tính chấp nhận chỉ định loại MIME của tệp mà máy chủ chấp nhận thông qua thao tác tải tệp lên. Để chỉ định nhiều giá trị, hãy dùng dấu phẩy để phân tách các giá trị (ví dụ: audio/*,video/*,image/*).</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_accept
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_accept); }
			set { Entity.Attributes[Fields.mspp_accept] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cho phép nhiều tệp</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_allowmultiplefiles
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_allowmultiplefiles); }
			set { Entity.Attributes[Fields.mspp_allowmultiplefiles] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Gắn thêm chuỗi truy vấn</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_appendquerystring
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_appendquerystring); }
			set { Entity.Attributes[Fields.mspp_appendquerystring] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Liên kết người dùng hiện tại của cổng thông tin</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_associatecurrentportaluser
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_associatecurrentportaluser); }
			set { Entity.Attributes[Fields.mspp_associatecurrentportaluser] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đính kèm tệp</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_attachfile
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_attachfile); }
			set { Entity.Attributes[Fields.mspp_attachfile] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhãn đính kèm tệp</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attachfilelabel
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attachfilelabel); }
			set { Entity.Attributes[Fields.mspp_attachfilelabel] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kích thước tối đa của tệp đính kèm</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_attachfilemaxsize
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_attachfilemaxsize); }
			set { Entity.Attributes[Fields.mspp_attachfilemaxsize] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Yêu cầu đính kèm tệp</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_attachfilerequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_attachfilerequired); }
			set { Entity.Attributes[Fields.mspp_attachfilerequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi yêu cầu đính kèm tệp</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attachfilerequirederrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attachfilerequirederrormessage); }
			set { Entity.Attributes[Fields.mspp_attachfilerequirederrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chấp nhận hạn chế đính kèm tệp</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_attachfilerestrictaccept
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_attachfilerestrictaccept); }
			set { Entity.Attributes[Fields.mspp_attachfilerestrictaccept] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi kích cỡ tệp đính kèm</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attachfilesizeerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attachfilesizeerrormessage); }
			set { Entity.Attributes[Fields.mspp_attachfilesizeerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Vị trí lưu trữ tệp đính kèm</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_attachfilestoragelocation"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_attachfilestoragelocation? mspp_attachfilestoragelocation
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_attachfilestoragelocation);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_attachfilestoragelocation)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_attachfilestoragelocation] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_attachfilestoragelocation] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo lỗi loại tệp đính kèm</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_attachfiletypeerrormessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_attachfiletypeerrormessage); }
			set { Entity.Attributes[Fields.mspp_attachfiletypeerrormessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tự động tạo các bước từ tab</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_autogeneratesteps
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_autogeneratesteps); }
			set { Entity.Attributes[Fields.mspp_autogeneratesteps] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính tự động đánh số</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_autonumberattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_autonumberattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_autonumberattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên định nghĩa tự động đánh số</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_autonumberdefinitionname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_autonumberdefinitionname); }
			set { Entity.Attributes[Fields.mspp_autonumberdefinitionname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Yêu cầu captcha</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_captcharequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_captcharequired); }
			set { Entity.Attributes[Fields.mspp_captcharequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Điều kiện</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_condition
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_condition); }
			set { Entity.Attributes[Fields.mspp_condition] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước tiếp theo mặc định của điều kiện</para>
		/// <para><strong>Description</strong>: Nếu kiểm tra điều kiện không thành công thì đây là bước tiếp theo.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_conditiondefaultnextstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_conditiondefaultnextstep); }
			set { Entity.Attributes[Fields.mspp_conditiondefaultnextstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bộ chứa</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_containername
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_containername); }
			set { Entity.Attributes[Fields.mspp_containername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tạo tự động đánh số</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_createautonumber
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_createautonumber); }
			set { Entity.Attributes[Fields.mspp_createautonumber] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Hiển thị người đã tạo bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_createdby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_createdby); }
			set { Entity.Attributes[Fields.mspp_createdby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ tạo bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_createdonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_createdon); }
			set { Entity.Attributes[Fields.mspp_createdon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Được phép chỉnh sửa bản ghi hiện có</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_editexistingrecordpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_editexistingrecordpermitted); }
			set { Entity.Attributes[Fields.mspp_editexistingrecordpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo hết hạn chỉnh sửa</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editexpiredmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editexpiredmessage); }
			set { Entity.Attributes[Fields.mspp_editexpiredmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã trạng thái hết hạn chỉnh sửa</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatecode
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatecode); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatecode] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉnh sửa lý do dẫn đến trạng thái hết hạn</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_editexpiredstatusreason
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_editexpiredstatusreason); }
			set { Entity.Attributes[Fields.mspp_editexpiredstatusreason] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo không được phép chỉnh sửa</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 2,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_editnotpermittedmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_editnotpermittedmessage); }
			set { Entity.Attributes[Fields.mspp_editnotpermittedmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bật quyền đối với bảng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_entitypermissionsenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_entitypermissionsenabled); }
			set { Entity.Attributes[Fields.mspp_entitypermissionsenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước nguồn thực thể</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho Bước biểu mẫu được liên kết với Bước biểu mẫu.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_entitysourcestep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_entitysourcestep); }
			set { Entity.Attributes[Fields.mspp_entitysourcestep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại nguồn bảng</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_entitysourcetype"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_entitysourcetype? mspp_entitysourcetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_entitysourcetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_entitysourcetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_entitysourcetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_entitysourcetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đặt tất cả các trường thành bắt buộc</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_forceallfieldsrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_forceallfieldsrequired); }
			set { Entity.Attributes[Fields.mspp_forceallfieldsrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên biểu mẫu</para>
		/// <para><strong>Description</strong>: Hiển thị tên của biểu mẫu thực thể để kết xuất.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_formname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_formname); }
			set { Entity.Attributes[Fields.mspp_formname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường dòng địa chỉ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_addresslinefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_addresslinefieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_addresslinefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường thành phố</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_cityfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_cityfieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_cityfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường quốc gia/khu vực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_countryfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_countryfieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_countryfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường quận hạt</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_countyfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_countyfieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_countyfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị bản đồ</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_geolocation_displaymap
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_geolocation_displaymap); }
			set { Entity.Attributes[Fields.mspp_geolocation_displaymap] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_geolocation_enabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_geolocation_enabled); }
			set { Entity.Attributes[Fields.mspp_geolocation_enabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường địa chỉ đã định dạng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_formattedaddressfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_formattedaddressfieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_formattedaddressfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường vĩ độ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_latitudefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_latitudefieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_latitudefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường kinh độ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_longitudefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_longitudefieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_longitudefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại bản đồ</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_geolocation_maptype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_geolocation_maptype.Bing"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_geolocation_maptype? mspp_geolocation_maptype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_geolocation_maptype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_geolocation_maptype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_geolocation_maptype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_geolocation_maptype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường vùng lân cận</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_neighborhoodfieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_neighborhoodfieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_neighborhoodfieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường mã zip/mã bưu điện</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_postalcodefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_postalcodefieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_postalcodefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên trường bang hoặc tỉnh</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_geolocation_statefieldname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_geolocation_statefieldname); }
			set { Entity.Attributes[Fields.mspp_geolocation_statefieldname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ẩn biểu mẫu khi thành công</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_hideformonsuccess
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_hideformonsuccess); }
			set { Entity.Attributes[Fields.mspp_hideformonsuccess] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hướng dẫn</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_instructions
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_instructions); }
			set { Entity.Attributes[Fields.mspp_instructions] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tải tên khóa sự kiện</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_loadeventkeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_loadeventkeyname); }
			set { Entity.Attributes[Fields.mspp_loadeventkeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ghi nhật ký người dùng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_loguser
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_loguser); }
			set { Entity.Attributes[Fields.mspp_loguser] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Số lượng tệp tối đa</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_maximumnooffiles
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_maximumnooffiles); }
			set { Entity.Attributes[Fields.mspp_maximumnooffiles] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chế độ</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_mode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_mode.Chen"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_mode? mspp_mode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_mode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_mode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_mode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_mode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị người gần đây nhất đã cập nhật bản ghi.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_modifiedby
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_modifiedby); }
			set { Entity.Attributes[Fields.mspp_modifiedby] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày sửa đổi</para>
		/// <para><strong>Description</strong>: Hiển thị ngày và giờ sửa đổi bản ghi.</para>
		/// <para><strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? mspp_modifiedonUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.mspp_modifiedon); }
			set { Entity.Attributes[Fields.mspp_modifiedon] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Di chuyển tên khóa sự kiện trước đó</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_movepreviouseventkeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_movepreviouseventkeyname); }
			set { Entity.Attributes[Fields.mspp_movepreviouseventkeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cho phép di chuyển mục trước đó</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_movepreviouspermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_movepreviouspermitted); }
			set { Entity.Attributes[Fields.mspp_movepreviouspermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cho phép nhiều bản ghi mỗi người dùng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_multiplerecordsperuserpermitted
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_multiplerecordsperuserpermitted); }
			set { Entity.Attributes[Fields.mspp_multiplerecordsperuserpermitted] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của thực thể tùy chỉnh.</para>
		/// <para><strong>Primary Name</strong>: Required - <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_name); }
			set { Entity.Attributes[Fields.mspp_name] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp CSS cho nút tiếp theo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_nextbuttoncssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_nextbuttoncssclass); }
			set { Entity.Attributes[Fields.mspp_nextbuttoncssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản cho nút tiếp theo</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_nextbuttontext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_nextbuttontext); }
			set { Entity.Attributes[Fields.mspp_nextbuttontext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước tiếp theo</para>
		/// <para><strong>Description</strong>: Con trỏ tới bước tiếp theo.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_nextstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_nextstep); }
			set { Entity.Attributes[Fields.mspp_nextstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Điền trường tra cứu tham chiếu bảng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_populatereferenceentitylookupfield
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_populatereferenceentitylookupfield); }
			set { Entity.Attributes[Fields.mspp_populatereferenceentitylookupfield] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Là bên hoạt động</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_portaluserlookupattributeisactivityparty
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_portaluserlookupattributeisactivityparty); }
			set { Entity.Attributes[Fields.mspp_portaluserlookupattributeisactivityparty] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: URL gửi ngược</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_postbackurl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_postbackurl); }
			set { Entity.Attributes[Fields.mspp_postbackurl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp CSS cho nút trước đó</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_previousbuttoncssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_previousbuttoncssclass); }
			set { Entity.Attributes[Fields.mspp_previousbuttoncssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản cho nút trước đó</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_previousbuttontext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_previousbuttontext); }
			set { Entity.Attributes[Fields.mspp_previousbuttontext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước trước</para>
		/// <para><strong>Description</strong>: Con trỏ tới bước trước đó.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_previousstep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_previousstep); }
			set { Entity.Attributes[Fields.mspp_previousstep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính khóa chính</para>
		/// <para><strong>Description</strong>: Tên lô-gic của thuộc tính khóa chính cho thực thể mục tiêu.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_primarykeyattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_primarykeyattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_primarykeyattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tham số chuỗi truy vấn khóa chính</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_primarykeyquerystringparametername
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_primarykeyquerystringparametername); }
			set { Entity.Attributes[Fields.mspp_primarykeyquerystringparametername] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngôn ngữ cung cấp</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>:  - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? mspp_provisionedlanguages
		{
			get { return Entity.GetAttributeValue<int?>(Fields.mspp_provisionedlanguages); }
			set { Entity.Attributes[Fields.mspp_provisionedlanguages] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trường được đề xuất là bắt buộc</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_recommendedfieldsrequired
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_recommendedfieldsrequired); }
			set { Entity.Attributes[Fields.mspp_recommendedfieldsrequired] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo không tìm thấy bản ghi</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_recordnotfoundmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_recordnotfoundmessage); }
			set { Entity.Attributes[Fields.mspp_recordnotfoundmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_recordsourcerelationshipname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_recordsourcerelationshipname); }
			set { Entity.Attributes[Fields.mspp_recordsourcerelationshipname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: URL chuyển hướng</para>
		/// <para><strong>Description</strong>: Hiển thị URL để chuyển hướng tới.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 300</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_redirecturl
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_redirecturl); }
			set { Entity.Attributes[Fields.mspp_redirecturl] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Gắn thêm ID bảng vào chuỗi truy vấn</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_redirecturlappendentityidquerystring
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_redirecturlappendentityidquerystring); }
			set { Entity.Attributes[Fields.mspp_redirecturlappendentityidquerystring] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuỗi truy vấn tùy chỉnh</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 300</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_redirecturlcustomquerystring
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_redirecturlcustomquerystring); }
			set { Entity.Attributes[Fields.mspp_redirecturlcustomquerystring] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính</para>
		/// <para><strong>Description</strong>: Thêm một giá trị thuộc tính dưới dạng giá trị chuỗi truy vấn bằng cách chỉ định tên lô-gic của thuộc tính để gán giá trị cho chuỗi truy vấn đó.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_redirecturlquerystringattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_redirecturlquerystringattribute); }
			set { Entity.Attributes[Fields.mspp_redirecturlquerystringattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tham số chuỗi truy vấn</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_redirecturlquerystringattributeparamname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_redirecturlquerystringattributeparamname); }
			set { Entity.Attributes[Fields.mspp_redirecturlquerystringattributeparamname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên chuỗi truy vấn URL chuyển hướng</para>
		/// <para><strong>Description</strong>: URL để chuyển hướng tới được tự động truy xuất từ chuỗi truy vấn bằng cách sử dụng tên tham số này</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_redirecturlquerystringname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_redirecturlquerystringname); }
			set { Entity.Attributes[Fields.mspp_redirecturlquerystringname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuyển hướng trang web</para>
		/// <para><strong>Description</strong>: Trang web để chuyển hướng tới.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webpage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_redirectwebpage
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_redirectwebpage); }
			set { Entity.Attributes[Fields.mspp_redirectwebpage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bảng tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referenceentitylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referenceentitylogicalname); }
			set { Entity.Attributes[Fields.mspp_referenceentitylogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của khóa chính cho bảng tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referenceentityprimarykeylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referenceentityprimarykeylogicalname); }
			set { Entity.Attributes[Fields.mspp_referenceentityprimarykeylogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên biểu mẫu chỉ đọc cho thực thể tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referenceentityreadonlyformname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referenceentityreadonlyformname); }
			set { Entity.Attributes[Fields.mspp_referenceentityreadonlyformname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ của thực thể tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 150</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referenceentityrelationshipname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referenceentityrelationshipname); }
			set { Entity.Attributes[Fields.mspp_referenceentityrelationshipname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị biểu mẫu chỉ đọc cho thực thể tham chiếu</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_referenceentityshowreadonlyform
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_referenceentityshowreadonlyform); }
			set { Entity.Attributes[Fields.mspp_referenceentityshowreadonlyform] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại nguồn</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_referenceentitysourcetype"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_referenceentitysourcetype.Buoc_truoc"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_referenceentitysourcetype? mspp_referenceentitysourcetype
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_referenceentitysourcetype);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_referenceentitysourcetype)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_referenceentitysourcetype] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_referenceentitysourcetype] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước thực thể tham chiếu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho Bước biểu mẫu được liên kết với Bước biểu mẫu.</para>
		/// <para><strong>Lookup</strong>: <see cref="mspp_webformstep"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_referenceentitystep
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_referenceentitystep); }
			set { Entity.Attributes[Fields.mspp_referenceentitystep] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính truy vấn tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referencequeryattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referencequeryattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_referencequeryattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chuỗi truy vấn tham chiếu là khóa chính</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_referencequerystringisprimarykey
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_referencequerystringisprimarykey); }
			set { Entity.Attributes[Fields.mspp_referencequerystringisprimarykey] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên chuỗi truy vấn tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referencequerystringname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referencequerystringname); }
			set { Entity.Attributes[Fields.mspp_referencequerystringname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên mối quan hệ nguồn bản ghi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referencerecordsourcerelationshipname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referencerecordsourcerelationshipname); }
			set { Entity.Attributes[Fields.mspp_referencerecordsourcerelationshipname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bảng nguồn tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referencesourceentitylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referencesourceentitylogicalname); }
			set { Entity.Attributes[Fields.mspp_referencesourceentitylogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính tra cứu mục tiêu tham chiếu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_referencetargetlookupattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_referencetargetlookupattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_referencetargetlookupattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: JavaScript tùy chỉnh</para>
		/// <para><strong>Description</strong>: Hiển thị JavaScript tùy chỉnh sẽ được đặt ngay trước phần tử &lt;/form&gt; đóng ở cuối trang.</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_registerstartupscript
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_registerstartupscript); }
			set { Entity.Attributes[Fields.mspp_registerstartupscript] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Kết xuất nội tuyến tài nguyên web</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_renderwebresourcesinline
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_renderwebresourcesinline); }
			set { Entity.Attributes[Fields.mspp_renderwebresourcesinline] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên khóa sự kiện đã lưu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_savedeventkeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_savedeventkeyname); }
			set { Entity.Attributes[Fields.mspp_savedeventkeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đang lưu tên khóa sự kiện</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_savingeventkeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_savingeventkeyname); }
			set { Entity.Attributes[Fields.mspp_savingeventkeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đặt tham chiếu bảng</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_setentityreference
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_setentityreference); }
			set { Entity.Attributes[Fields.mspp_setentityreference] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thiết đặt</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_settings
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_settings); }
			set { Entity.Attributes[Fields.mspp_settings] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị captcha cho người dùng đã xác thực</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_showcaptchaforauthenticatedusers
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_showcaptchaforauthenticatedusers); }
			set { Entity.Attributes[Fields.mspp_showcaptchaforauthenticatedusers] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị trường chủ sở hữu</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_showownerfields
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_showownerfields); }
			set { Entity.Attributes[Fields.mspp_showownerfields] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Hiển thị trường không được hỗ trợ</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_showunsupportedfields
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_showunsupportedfields); }
			set { Entity.Attributes[Fields.mspp_showunsupportedfields] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tài khoản lưu trữ</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_storageaccountname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_storageaccountname); }
			set { Entity.Attributes[Fields.mspp_storageaccountname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản báo bận trên nút gửi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_submitbuttonbusytext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_submitbuttonbusytext); }
			set { Entity.Attributes[Fields.mspp_submitbuttonbusytext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp CSS cho nút gửi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_submitbuttoncssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_submitbuttoncssclass); }
			set { Entity.Attributes[Fields.mspp_submitbuttoncssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản trên nút gửi</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_submitbuttontext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_submitbuttontext); }
			set { Entity.Attributes[Fields.mspp_submitbuttontext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Gửi tên khóa sự kiện</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_submiteventkeyname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_submiteventkeyname); }
			set { Entity.Attributes[Fields.mspp_submiteventkeyname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo thành công</para>
		/// <para><strong>Multiple Lines of Text</strong> - <strong>MaxLength</strong>: 10,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_successmessage
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_successmessage); }
			set { Entity.Attributes[Fields.mspp_successmessage] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên tab</para>
		/// <para><strong>Description</strong>: Tên của tab trên một biểu mẫu thực thể để kết xuất.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_tabname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_tabname); }
			set { Entity.Attributes[Fields.mspp_tabname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên bảng đích</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_targetentitylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_targetentitylogicalname); }
			set { Entity.Attributes[Fields.mspp_targetentitylogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cột tra cứu người dùng cổng thông tin</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_targetentityportaluserlookupattribute
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_targetentityportaluserlookupattribute); }
			set { Entity.Attributes[Fields.mspp_targetentityportaluserlookupattribute] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic cho khóa chính của thực thể mục tiêu</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_targetentityprimarykeylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_targetentityprimarykeylogicalname); }
			set { Entity.Attributes[Fields.mspp_targetentityprimarykeylogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chức danh</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_title
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_title); }
			set { Entity.Attributes[Fields.mspp_title] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật chú giải công cụ</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_tooltipenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_tooltipenabled); }
			set { Entity.Attributes[Fields.mspp_tooltipenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại</para>
		/// <para>Required - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_type"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_type.Tai_bieu_mau"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_type? mspp_type
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.mspp_type);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.mspp_type)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.mspp_type] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.mspp_type] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Đường dẫn kiểm soát người dùng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 200</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_usercontrolpath
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_usercontrolpath); }
			set { Entity.Attributes[Fields.mspp_usercontrolpath] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tiêu đề kiểm soát người dùng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_usercontroltitle
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_usercontroltitle); }
			set { Entity.Attributes[Fields.mspp_usercontroltitle] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính địa chỉ máy chủ người dùng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_userhostaddressattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_userhostaddressattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_userhostaddressattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên lô-gic của thuộc tính tên trong danh tính người dùng</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_useridentitynameattributelogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_useridentitynameattributelogicalname); }
			set { Entity.Attributes[Fields.mspp_useridentitynameattributelogicalname] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhóm xác thực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationgroup
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationgroup); }
			set { Entity.Attributes[Fields.mspp_validationgroup] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lớp CSS tóm tắt xác thực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationsummarycssclass
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationsummarycssclass); }
			set { Entity.Attributes[Fields.mspp_validationsummarycssclass] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản tiêu đề tóm tắt xác thực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 4,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationsummaryheadertext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationsummaryheadertext); }
			set { Entity.Attributes[Fields.mspp_validationsummaryheadertext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bật liên kết tóm tắt xác thực</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Có</strong>]: true</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? mspp_validationsummarylinksenabled
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.mspp_validationsummarylinksenabled); }
			set { Entity.Attributes[Fields.mspp_validationsummarylinksenabled] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Văn bản liên kết tóm tắt xác thực</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string mspp_validationsummarylinktext
		{
			get { return Entity.GetAttributeValue<string>(Fields.mspp_validationsummarylinktext); }
			set { Entity.Attributes[Fields.mspp_validationsummarylinktext] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Biểu mẫu nhiều bước</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất cho Biểu mẫu nhiều bước được liên kết với Bước biểu mẫu.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="mspp_webform"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference mspp_webform
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.mspp_webform); }
			set { Entity.Attributes[Fields.mspp_webform] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bước biểu mẫu</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của phiên bản thực thể</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid mspp_webformstepId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.mspp_webformstepId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của Bước biểu mẫu</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statecode"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statecode? statecode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statecode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statecode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statecode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statecode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của Bước biểu mẫu</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statuscode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statuscode? statuscode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.statuscode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.mspp_webformstepOptionSets.statuscode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.statuscode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.statuscode] = null;
			}
		}
	}
}