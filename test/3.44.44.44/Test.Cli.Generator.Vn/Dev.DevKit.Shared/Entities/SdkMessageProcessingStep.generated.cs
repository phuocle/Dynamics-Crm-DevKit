//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
//		Last Modified: 2024-07-30 10:00:56
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;
using System.Linq;
namespace Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets
{
	public enum ComponentState
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã phát hành</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Da_phat_hanh = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã xóa</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Da_xoa = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã xóa Hủy phát hành</para>
		/// <para><strong>Value</strong>: 3</para>
		/// </summary>
		Da_xoa_Huy_phat_hanh = 3,
		/// <summary>
		/// <para><strong>Display Name</strong>: Hủy phát hành</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Huy_phat_hanh = 1
	}
	public enum InvocationSource
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Mã Cha</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Ma_Cha = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Mục con</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Muc_con = 1
	}
	public enum Mode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đồng bộ</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Dong_bo = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Không đồng bộ</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Khong_dong_bo = 1
	}
	public enum Stage
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Giai đoạn Hậu cam kết được bắt đầu sau khi cam kết giao dịch (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 90</para>
		/// </summary>
		Giai_doan_Hau_cam_ket_duoc_bat_dau_sau_khi_cam_ket_giao_dich_Chi_su_dung_noi_bo = 90,
		/// <summary>
		/// <para><strong>Display Name</strong>: Giai đoạn Tiền cam kết được bắt đầu trước khi cam kết giao dịch (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 80</para>
		/// </summary>
		Giai_doan_Tien_cam_ket_duoc_bat_dau_truoc_khi_cam_ket_giao_dich_Chi_su_dung_noi_bo = 80,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sau khi thao tác</para>
		/// <para><strong>Value</strong>: 40</para>
		/// </summary>
		Sau_khi_thao_tac = 40,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sau khi thao tác (Không còn dùng)</para>
		/// <para><strong>Value</strong>: 50</para>
		/// </summary>
		Sau_khi_thao_tac_Khong_con_dung = 50,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sau khi thao thác cuối cùng (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 55</para>
		/// </summary>
		Sau_khi_thao_thac_cuoi_cung_Chi_su_dung_noi_bo = 55,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sau khi thao thác nội bộ, sau bổ trợ ngoài (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 45</para>
		/// </summary>
		Sau_khi_thao_thac_noi_bo_sau_bo_tro_ngoai_Chi_su_dung_noi_bo = 45,
		/// <summary>
		/// <para><strong>Display Name</strong>: Sau khi thao thác nội bộ, trước bổ trợ ngoài (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 35</para>
		/// </summary>
		Sau_khi_thao_thac_noi_bo_truoc_bo_tro_ngoai_Chi_su_dung_noi_bo = 35,
		/// <summary>
		/// <para><strong>Display Name</strong>: Thao thác chính (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 30</para>
		/// </summary>
		Thao_thac_chinh_Chi_su_dung_noi_bo = 30,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trước khi thao tác</para>
		/// <para><strong>Value</strong>: 20</para>
		/// </summary>
		Truoc_khi_thao_tac = 20,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trước khi thao thác ban đầu (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 5</para>
		/// </summary>
		Truoc_khi_thao_thac_ban_dau_Chi_su_dung_noi_bo = 5,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trước khi thao thác nội bộ, sau bổ trợ ngoài (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 25</para>
		/// </summary>
		Truoc_khi_thao_thac_noi_bo_sau_bo_tro_ngoai_Chi_su_dung_noi_bo = 25,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trước khi thao thác nội bộ, trước bổ trợ ngoài (Chỉ sử dụng nội bộ)</para>
		/// <para><strong>Value</strong>: 15</para>
		/// </summary>
		Truoc_khi_thao_thac_noi_bo_truoc_bo_tro_ngoai_Chi_su_dung_noi_bo = 15,
		/// <summary>
		/// <para><strong>Display Name</strong>: Trước khi xác thực</para>
		/// <para><strong>Value</strong>: 10</para>
		/// </summary>
		Truoc_khi_xac_thuc = 10
	}
	public enum StateCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Da_bat = 0,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã tắt</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Da_tat = 1
	}
	public enum StatusCode
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã bật</para>
		/// <para><strong>Value</strong>: 1</para>
		/// <para><strong>StateCode.Da_bat</strong></para>
		/// </summary>
		Da_bat = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Đã tắt</para>
		/// <para><strong>Value</strong>: 2</para>
		/// <para><strong>StateCode.Da_tat</strong></para>
		/// </summary>
		Da_tat = 2
	}
	public enum SupportedDeployment
	{
		/// <summary>
		/// <para><strong>Display Name</strong>: Cả hai</para>
		/// <para><strong>Value</strong>: 2</para>
		/// </summary>
		Ca_hai = 2,
		/// <summary>
		/// <para><strong>Display Name</strong>: Chỉ dành cho Microsoft Dynamics 365 Client for Outlook</para>
		/// <para><strong>Value</strong>: 1</para>
		/// </summary>
		Chi_danh_cho_Microsoft_Dynamics_365_Client_for_Outlook = 1,
		/// <summary>
		/// <para><strong>Display Name</strong>: Duy nhất máy chủ</para>
		/// <para><strong>Value</strong>: 0</para>
		/// </summary>
		Duy_nhat_may_chu = 0
	}
}
namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class SdkMessageProcessingStep : EntityBase
	{
		public struct Fields
		{
			public const string AsyncAutoDelete = "asyncautodelete";
			public const string CanBeBypassed = "canbebypassed";
			public const string CanUseReadOnlyConnection = "canusereadonlyconnection";
			public const string Category = "category";
			public const string ComponentState = "componentstate";
			public const string Configuration = "configuration";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string CustomizationLevel = "customizationlevel";
			public const string Description = "description";
			public const string EnablePluginProfiler = "enablepluginprofiler";
			public const string EventExpander = "eventexpander";
			public const string EventHandler = "eventhandler";
			public const string FilteringAttributes = "filteringattributes";
			public const string FxExpressionId = "fxexpressionid";
			public const string ImpersonatingUserId = "impersonatinguserid";
			public const string IntroducedVersion = "introducedversion";
			[System.Obsolete("Deprecated from version: 5.0.0.0")]
			public const string InvocationSource = "invocationsource";
			public const string IsManaged = "ismanaged";
			public const string Mode = "mode";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			[System.Obsolete("Deprecated from version: 5.0.0.0")]
			public const string PluginTypeId = "plugintypeid";
			public const string PowerfxRuleId = "powerfxruleid";
			public const string Rank = "rank";
			public const string RuntimeIntegrationProperties = "runtimeintegrationproperties";
			public const string SdkMessageFilterId = "sdkmessagefilterid";
			public const string SdkMessageId = "sdkmessageid";
			public const string SdkMessageProcessingStepId = "sdkmessageprocessingstepid";
			public const string SdkMessageProcessingStepIdUnique = "sdkmessageprocessingstepidunique";
			public const string SdkMessageProcessingStepSecureConfigId = "sdkmessageprocessingstepsecureconfigid";
			public const string SolutionId = "solutionid";
			public const string Stage = "stage";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string SupportedDeployment = "supporteddeployment";
			public const string SupportingSolutionId = "supportingsolutionid";
			public const string VersionNumber = "versionnumber";
		}
		public const string EntityLogicalName = "sdkmessageprocessingstep";
		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 4608;
		public const string EntityCollectionSchemaName = "SdkMessageProcessingSteps";
		public const string EntityDisplayCollectionName = "Bước xử lý thông báo sdk";
		public const string DisplayName = "Bước xử lý thông báo sdk";
		public const string EntitySetName = "sdkmessageprocessingsteps";
		public const string EntityLogicalCollectionName = "sdkmessageprocessingsteps";
		public const string EntityPrimaryIdAttribute = "sdkmessageprocessingstepid";
		public const string EntityPrimaryImageAttribute = "";
		public const string EntityPrimaryNameAttribute = "name";
		public const string EntitySchemaName = "SdkMessageProcessingStep";
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep()
		{
			Entity = new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(Guid SdkMessageProcessingStepId)
		{
			Entity = new Entity(EntityLogicalName, SdkMessageProcessingStepId);
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SdkMessageProcessingStep"/> with <paramref name="targetEntity"/>.
		/// </summary>
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(Entity targetEntity)
		{
			Entity = targetEntity ?? new Entity(EntityLogicalName, Guid.Empty);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SdkMessageProcessingStep"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(Entity preEntity, Entity targetEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new SdkMessageProcessingStep(preEntity, targetEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// Instance new late bound class <see cref="SdkMessageProcessingStep"/> with <paramref name="preEntity"/>. Then copy all attributes from <paramref name="targetEntity"/> to <paramref name="preEntity"/>. After that copy all attributes from <paramref name="postEntity"/> to the last result. Existing attribute will be overwritten.
		/// </summary>
		/// <exception cref="InvalidPluginExecutionException">when <paramref name="targetEntity"/> is null.</exception>
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(Entity preEntity, Entity targetEntity, Entity postEntity)
		{
			if (targetEntity == null) throw new InvalidPluginExecutionException($"new SdkMessageProcessingStep(preEntity, targetEntity, postEntity) with targetEntity = null");
			if (preEntity == null) preEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			if (postEntity == null) postEntity = new Entity(targetEntity.LogicalName, targetEntity.Id);
			Entity = CloneThisEntity(preEntity);
			foreach (var property in targetEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			foreach (var property in postEntity?.Attributes?.ToList())
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}
		[DebuggerNonUserCode()]
		public SdkMessageProcessingStep(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Xóa tự động không đồng bộ</para>
		/// <para><strong>Description</strong>: Cho biết khả năng tự động xóa công việc hệ thống không đồng bộ khi hoàn thành.</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? AsyncAutoDelete
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.AsyncAutoDelete); }
			set { Entity.Attributes[Fields.AsyncAutoDelete] = value; }
		}
		/// <summary>
		/// <para><strong>Two Option</strong> - [<strong>Yes</strong>]: true - [<strong>No</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>No</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? CanBeBypassed
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.CanBeBypassed); }
			set { Entity.Attributes[Fields.CanBeBypassed] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mục đích</para>
		/// <para><strong>Description</strong>: Xác định Loại Bước Xử lý Thông báo SDK sẽ là ReadOnly hay Read Write. false - ReadWrite, true - ReadOnly</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? CanUseReadOnlyConnection
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.CanUseReadOnlyConnection); }
			set { Entity.Attributes[Fields.CanUseReadOnlyConnection] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Category</para>
		/// <para><strong>Description</strong>: For internal use only.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Category
		{
			get { return Entity.GetAttributeValue<string>(Fields.Category); }
			set { Entity.Attributes[Fields.Category] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái Thành phần</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.ComponentState"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.ComponentState? ComponentState
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.ComponentState);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.ComponentState)value.Value;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cấu hình</para>
		/// <para><strong>Description</strong>: Cấu hình theo từng bước dành cho loại bổ trợ. Hệ thống đã chuyển cho hàm dựng bổ trợ vào lúc chạy.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Configuration
		{
			get { return Entity.GetAttributeValue<string>(Fields.Configuration); }
			set { Entity.Attributes[Fields.Configuration] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã tạo bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Ngày tạo</para>
		/// <para><strong>Description</strong>: Ngày và giờ tạo bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? CreatedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.CreatedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người tạo (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã tạo sdkmessageprocessingstep.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference CreatedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.CreatedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Cấp độ tùy chỉnh của bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Whole Number</strong> - <strong>MinValue</strong>: -255 - <strong>MaxValue</strong>: 255</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? CustomizationLevel
		{
			get { return Entity.GetAttributeValue<int?>(Fields.CustomizationLevel); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Mô tả</para>
		/// <para><strong>Description</strong>: Mô tả của bước xử lý thông báo SDK.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Description
		{
			get { return Entity.GetAttributeValue<string>(Fields.Description); }
			set { Entity.Attributes[Fields.Description] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: EnablePluginProfiler</para>
		/// <para><strong>Description</strong>: EnablePluginProfiler</para>
		/// <para><strong>Two Option</strong> - [<strong>Có</strong>]: true - [<strong>Không</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? EnablePluginProfiler
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.EnablePluginProfiler); }
			set { Entity.Attributes[Fields.EnablePluginProfiler] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: EventExpander</para>
		/// <para><strong>Description</strong>: Cấu hình cho việc gửi các sự kiện quy trình bán hàng sang dịch vụ Trình mở rộng Sự kiện.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 1,073,741,823</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string EventExpander
		{
			get { return Entity.GetAttributeValue<string>(Fields.EventExpander); }
			set { Entity.Attributes[Fields.EventExpander] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trình xử lý sự kiện</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của trình xử lý sự kiện đã liên kết.</para>
		/// <para><strong>Lookup</strong>: <see cref="plugintype"/>, <see cref="serviceendpoint"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference EventHandler
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.EventHandler); }
			set { Entity.Attributes[Fields.EventHandler] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính lọc</para>
		/// <para><strong>Description</strong>: Danh sách thuộc tính, phân tách bằng dấu phẩy. Nếu sửa ít nhất một thuộc tính thì phần bổ trợ sẽ thực thi.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 100,000</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string FilteringAttributes
		{
			get { return Entity.GetAttributeValue<string>(Fields.FilteringAttributes); }
			set { Entity.Attributes[Fields.FilteringAttributes] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: fxexpressionid</para>
		/// <para><strong>Description</strong>: Unique identifier for fxexpression associated with SdkMessageProcessingStep.</para>
		/// <para><strong>Lookup</strong>: <see cref="fxexpression"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference FxExpressionId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.FxExpressionId); }
			set { Entity.Attributes[Fields.FxExpressionId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nhân cách hóa người dùng</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng để nhân cách hóa bối cảnh khi thực thi bước.</para>
		/// <para><strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ImpersonatingUserId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ImpersonatingUserId); }
			set { Entity.Attributes[Fields.ImpersonatingUserId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Phiên bản được Giới thiệu</para>
		/// <para><strong>Description</strong>: Phiên bản có biểu mẫu được giới thiệu.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 48</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string IntroducedVersion
		{
			get { return Entity.GetAttributeValue<string>(Fields.IntroducedVersion); }
			set { Entity.Attributes[Fields.IntroducedVersion] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Nguồn viện dẫn</para>
		/// <para><strong>Description</strong>: Xác định nên thực thi phần bổ trợ từ ống truyền lệnh mẹ, ống truyền lệnh con hay cả hai.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.InvocationSource"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.InvocationSource.Ma_Cha"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 5.0.0.0")]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.InvocationSource? InvocationSource
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.InvocationSource);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.InvocationSource)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.InvocationSource] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.InvocationSource] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Thông tin chỉ định khả năng quản lý thành phần này.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Two Option</strong> - [<strong>Được quản lý</strong>]: true - [<strong>Không được quản lý</strong>]: false</para>
		/// <para><strong>Default Value</strong> [<strong>Không được quản lý</strong>]: false</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public bool? IsManaged
		{
			get { return Entity.GetAttributeValue<bool?>(Fields.IsManaged); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Chế độ thực thi</para>
		/// <para><strong>Description</strong>: Chế độ chạy thực của thực thi, ví dụ: đồng bộ hoặc không đồng bộ.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Mode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Mode.Dong_bo"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Mode? Mode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.Mode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Mode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.Mode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.Mode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đã sửa bước xử lý thông báo SDK lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Sửa đổi Vào</para>
		/// <para><strong>Description</strong>: Ngày và giờ sửa bước xử lý thông báo SDK lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateAndTime</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? ModifiedOnUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.ModifiedOn); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Người Sửa đổi (Đại diện)</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của người dùng đại diện đã sửa đổi sdkmessageprocessingstep lần cuối.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="systemuser"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference ModifiedOnBehalfBy
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.ModifiedOnBehalfBy); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Tên</para>
		/// <para><strong>Description</strong>: Tên của bước xử lý thông báo sdk.</para>
		/// <para><strong>Primary Name</strong>: <strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 256</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Name
		{
			get { return Entity.GetAttributeValue<string>(Fields.Name); }
			set { Entity.Attributes[Fields.Name] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của tổ chức có liên kết với bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Lookup</strong>: <see cref="organization"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OrganizationId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OrganizationId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thời gian Ghi đè Bản ghi</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Date and Time</strong> - <strong>DateTimeBehavior</strong>: UserLocal - <strong>DateTimeFormat</strong>: DateOnly</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public DateTime? OverwriteTimeUtc
		{
			get { return Entity.GetAttributeValue<DateTime?>(Fields.OverwriteTime); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Loại bổ trợ</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của loại bổ trợ có liên kết với bước.</para>
		/// <para><strong>Lookup</strong>: <see cref="sdkmessagefilter"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		[System.Obsolete("Deprecated from version: 5.0.0.0")]
		public EntityReference PluginTypeId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.PluginTypeId); }
			set { Entity.Attributes[Fields.PluginTypeId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: powerfxruleid</para>
		/// <para><strong>Description</strong>: Unique identifier for powerfxrule associated with SdkMessageProcessingStep.</para>
		/// <para><strong>Lookup</strong>: <see cref="powerfxrule"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference PowerfxRuleId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.PowerfxRuleId); }
			set { Entity.Attributes[Fields.PowerfxRuleId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thứ tự thực thi</para>
		/// <para><strong>Description</strong>: Thứ tự xử lý trong giai đoạn.</para>
		/// <para><strong>Whole Number</strong> - <strong>MinValue</strong>: -2,147,483,648 - <strong>MaxValue</strong>: 2,147,483,647</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? Rank
		{
			get { return Entity.GetAttributeValue<int?>(Fields.Rank); }
			set { Entity.Attributes[Fields.Rank] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thuộc tính tích hợp thời gian chạy</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ. Giữ các thuộc tính chung liên quan đến tích hợp thời gian chạy.</para>
		/// <para><strong>Single Line of Text</strong> - <strong>MaxLength</strong>: 512</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string RuntimeIntegrationProperties
		{
			get { return Entity.GetAttributeValue<string>(Fields.RuntimeIntegrationProperties); }
			set { Entity.Attributes[Fields.RuntimeIntegrationProperties] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Bộ lọc SdkMessage</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bộ lọc thông báo SDK.</para>
		/// <para><strong>Lookup</strong>: <see cref="sdkmessagefilter"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference SdkMessageFilterId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.SdkMessageFilterId); }
			set { Entity.Attributes[Fields.SdkMessageFilterId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Thông báo SDK</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của thông báo SDK.</para>
		/// <para><strong>Lookup</strong>: <see cref="sdkmessage"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference SdkMessageId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.SdkMessageId); }
			set { Entity.Attributes[Fields.SdkMessageId] = value; }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của thực thể bước xử lý thông báo SDK.</para>
		/// <para><strong>Primary Key</strong>: <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid SdkMessageProcessingStepId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.SdkMessageProcessingStepId] = value;
				Entity.Id = value;
			}
		}
		/// <summary>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SdkMessageProcessingStepIdUnique
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SdkMessageProcessingStepIdUnique); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Cấu hình bảo mật bước xử lý thông báo SDK</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của cấu hình bảo mật dành cho bước xử lý thông báo Sdk.</para>
		/// <para>Required - <strong>Lookup</strong>: <see cref="sdkmessageprocessingstepsecureconfig"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference SdkMessageProcessingStepSecureConfigId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.SdkMessageProcessingStepSecureConfigId); }
			set { Entity.Attributes[Fields.SdkMessageProcessingStepSecureConfigId] = value; }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giải pháp</para>
		/// <para><strong>Description</strong>: Mã định danh duy nhất của giải pháp được liên kết.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SolutionId); }
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giai đoạn thực thi</para>
		/// <para><strong>Description</strong>: Giai đoạn trong ống truyền lệnh thực thi mà bước xử lý thông báo SDK nằm trong đó.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Stage"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Stage.Truoc_khi_xac_thuc"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Stage? Stage
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.Stage);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.Stage)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.Stage] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.Stage] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Trạng thái</para>
		/// <para><strong>Description</strong>: Trạng thái của bước xử lý thông báo SDK.</para>
		/// <para><strong>Status</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StateCode"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StateCode.Da_bat"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StateCode? StateCode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.StateCode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StateCode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.StateCode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.StateCode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Lý do dẫn đến Trạng thái</para>
		/// <para><strong>Description</strong>: Lý do dẫn đến trạng thái của bước xử lý thông báo SDK.</para>
		/// <para><strong>Status Reason</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StatusCode"/></para>
		/// <para><strong>Default Value</strong>: <see langword="null"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StatusCode? StatusCode
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.StatusCode);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.StatusCode)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.StatusCode] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.StatusCode] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Triển khai</para>
		/// <para><strong>Description</strong>: Triển khai việc thực thi bước xử lý thông báo SDK; trên máy chủ, máy khách hoặc cả hai.</para>
		/// <para><strong>OptionSet</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.SupportedDeployment"/></para>
		/// <para><strong>Default Value</strong>: <see cref="Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.SupportedDeployment.Duy_nhat_may_chu"/></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.SupportedDeployment? SupportedDeployment
		{
			get
			{
				var value = Entity.GetAttributeValue<OptionSetValue>(Fields.SupportedDeployment);
				if (value == null) return null;
				return (Dev.DevKit.Shared.Entities.SdkMessageProcessingStepOptionSets.SupportedDeployment)value.Value;
			}
			set
			{
				if (value.HasValue)
					Entity.Attributes[Fields.SupportedDeployment] = new OptionSetValue((int)value.Value);
				else
					Entity.Attributes[Fields.SupportedDeployment] = null;
			}
		}
		/// <summary>
		/// <para><strong>Display Name</strong>: Giải pháp</para>
		/// <para><strong>Description</strong>: Chỉ sử dụng nội bộ.</para>
		/// <para><strong>ReadOnly</strong> - <strong>Uniqueidentifier</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid? SupportingSolutionId
		{
			get { return Entity.GetAttributeValue<Guid?>(Fields.SupportingSolutionId); }
		}
		/// <summary>
		/// <para><strong>Description</strong>: Số xác định bản sửa đổi cụ thể của bước xử lý thông báo SDK.</para>
		/// <para><strong>ReadOnly</strong> - <strong>BigInt</strong></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}