//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.msdyn_solutioncomponentcountsummaryOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_solutioncomponentcountsummary : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_componentlogicalname = "msdyn_componentlogicalname";
			public const string msdyn_componenttype = "msdyn_componenttype";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_primaryentityname = "msdyn_primaryentityname";
			public const string msdyn_solutioncomponentcountsummaryId = "msdyn_solutioncomponentcountsummaryid";
			public const string msdyn_solutionid = "msdyn_solutionid";
			public const string msdyn_subtype = "msdyn_subtype";
			public const string msdyn_total = "msdyn_total";
			public const string msdyn_workflowcategory = "msdyn_workflowcategory";
			public const string OrganizationId = "organizationid";
		}

		public const string EntityLogicalName = "msdyn_solutioncomponentcountsummary";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10014;

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary(Guid msdyn_solutioncomponentcountsummaryId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_solutioncomponentcountsummaryId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_solutioncomponentcountsummary(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Component Logical Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_componentlogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_componentlogicalname); }
			set { Entity.Attributes[Fields.msdyn_componentlogicalname] = value; }
		}

		/// <summary>
		/// <para>Decimal - MinValue: -100,000,000,000 - MaxValue: 100,000,000,000</para>
		/// <para>msdyn_componenttype</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public decimal? msdyn_componenttype
		{
			get { return Entity.GetAttributeValue<decimal?>(Fields.msdyn_componenttype); }
			set { Entity.Attributes[Fields.msdyn_componenttype] = value; }
		}

		/// <summary>
		/// <para>The name of the custom entity.</para>
		/// <para>Required - String - MaxLength: 100</para>
		/// <para>msdyn_name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>Primary Entity Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_primaryentityname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_primaryentityname); }
			set { Entity.Attributes[Fields.msdyn_primaryentityname] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>SolutionComponentCountSummary</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_solutioncomponentcountsummaryId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_solutioncomponentcountsummaryId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_solutionid</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_solutionid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_solutionid); }
			set { Entity.Attributes[Fields.msdyn_solutionid] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_subtype</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_subtype
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_subtype); }
			set { Entity.Attributes[Fields.msdyn_subtype] = value; }
		}

		/// <summary>
		/// <para>Decimal - MinValue: -100,000,000,000 - MaxValue: 100,000,000,000</para>
		/// <para>msdyn_total</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public decimal? msdyn_total
		{
			get { return Entity.GetAttributeValue<decimal?>(Fields.msdyn_total); }
			set { Entity.Attributes[Fields.msdyn_total] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 100</para>
		/// <para>msdyn_workflowcategory</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_workflowcategory
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_workflowcategory); }
			set { Entity.Attributes[Fields.msdyn_workflowcategory] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for the organization</para>
		/// <para>ReadOnly - Lookup to </para>
		/// <para>Organization Id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference OrganizationId
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.OrganizationId); }
		}
	}
}
