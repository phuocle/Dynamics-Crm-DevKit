//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.msdyn_casesuggestionOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class msdyn_casesuggestion : EntityBase
	{
		public struct Fields
		{
			public const string msdyn_additionalcontext = "msdyn_additionalcontext";
			public const string msdyn_casesuggestionId = "msdyn_casesuggestionid";
			public const string msdyn_confidencescore = "msdyn_confidencescore";
			public const string msdyn_keyphrases = "msdyn_keyphrases";
			public const string msdyn_name = "msdyn_name";
			public const string msdyn_rank = "msdyn_rank";
			public const string msdyn_suggestedentity = "msdyn_suggestedentity";
			public const string msdyn_suggestionforentitylogicalname = "msdyn_suggestionforentitylogicalname";
			public const string msdyn_suggestionforid = "msdyn_suggestionforid";
		}

		public const string EntityLogicalName = "msdyn_casesuggestion";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 10217;

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion(Guid msdyn_casesuggestionId)
		{
			Entity = new Entity(EntityLogicalName, msdyn_casesuggestionId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public msdyn_casesuggestion(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>Memo - MaxLength: 10000</para>
		/// <para>Additional Context</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_additionalcontext
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_additionalcontext); }
			set { Entity.Attributes[Fields.msdyn_additionalcontext] = value; }
		}

		/// <summary>
		/// <para>Unique identifier for entity instances</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para>Case Suggestion</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid msdyn_casesuggestionId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.msdyn_casesuggestionId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>Decimal - MinValue: 0 - MaxValue: 100</para>
		/// <para>Confidence Score</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public decimal? msdyn_confidencescore
		{
			get { return Entity.GetAttributeValue<decimal?>(Fields.msdyn_confidencescore); }
			set { Entity.Attributes[Fields.msdyn_confidencescore] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 2000</para>
		/// <para>Key Phrases</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_keyphrases
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_keyphrases); }
			set { Entity.Attributes[Fields.msdyn_keyphrases] = value; }
		}

		/// <summary>
		/// <para>The name of the custom entity.</para>
		/// <para>String - MaxLength: 100</para>
		/// <para>Name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_name
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_name); }
			set { Entity.Attributes[Fields.msdyn_name] = value; }
		}

		/// <summary>
		/// <para>Integer - MinValue: 0 - MaxValue: 100</para>
		/// <para>Rank</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public int? msdyn_rank
		{
			get { return Entity.GetAttributeValue<int?>(Fields.msdyn_rank); }
			set { Entity.Attributes[Fields.msdyn_rank] = value; }
		}

		/// <summary>
		/// <para>Lookup to incident</para>
		/// <para>Suggested Case</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public EntityReference msdyn_suggestedentity
		{
			get { return Entity.GetAttributeValue<EntityReference>(Fields.msdyn_suggestedentity); }
			set { Entity.Attributes[Fields.msdyn_suggestedentity] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 150</para>
		/// <para>suggestion for entity  logical name</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_suggestionforentitylogicalname
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_suggestionforentitylogicalname); }
			set { Entity.Attributes[Fields.msdyn_suggestionforentitylogicalname] = value; }
		}

		/// <summary>
		/// <para>String - MaxLength: 50</para>
		/// <para>suggestion for entity id</para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string msdyn_suggestionforid
		{
			get { return Entity.GetAttributeValue<string>(Fields.msdyn_suggestionforid); }
			set { Entity.Attributes[Fields.msdyn_suggestionforid] = value; }
		}
	}
}
