//---------------------------------------------------------------------------------------------------
// <auto-generated>
//		Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
//		Generated by DynamicsCrm.DevKit - https://github.com/phuocle/Dynamics-Crm-DevKit
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using Microsoft.Xrm.Sdk;
using System;
using System.Diagnostics;

namespace Dev.DevKit.Shared.Entities.UnresolvedAddressOptionSets
{

}

namespace Dev.DevKit.Shared.Entities
{
	[DebuggerNonUserCode()]
	public partial class UnresolvedAddress : EntityBase
	{
		public struct Fields
		{
			public const string EMailAddress = "emailaddress";
			public const string FullName = "fullname";
			public const string Telephone = "telephone";
			public const string UnresolvedAddressId = "unresolvedaddressid";
			public const string VersionNumber = "versionnumber";
		}

		public const string EntityLogicalName = "unresolvedaddress";

		[System.Obsolete("This value is different for each instance. Please don't use it.")]
		public const int EntityTypeCode = 2012;

		[DebuggerNonUserCode()]
		public UnresolvedAddress()
		{
			Entity = new Entity(EntityLogicalName);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public UnresolvedAddress(Guid UnresolvedAddressId)
		{
			Entity = new Entity(EntityLogicalName, UnresolvedAddressId);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public UnresolvedAddress(string keyName, object keyValue)
		{
			Entity = new Entity(EntityLogicalName, keyName, keyValue);
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public UnresolvedAddress(Entity entity)
		{
			Entity = entity;
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public UnresolvedAddress(Entity entity, Entity merge)
		{
			Entity = entity;
			foreach (var property in merge?.Attributes)
			{
				var key = property.Key;
				var value = property.Value;
				Entity[key] = value;
			}
			PreEntity = CloneThisEntity(Entity);
		}

		[DebuggerNonUserCode()]
		public UnresolvedAddress(KeyAttributeCollection keys)
		{
			Entity = new Entity(EntityLogicalName, keys);
			PreEntity = CloneThisEntity(Entity);
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>String - MaxLength: 100</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string EMailAddress
		{
			get { return Entity.GetAttributeValue<string>(Fields.EMailAddress); }
			set { Entity.Attributes[Fields.EMailAddress] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>ReadOnly - String - MaxLength: 160</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string FullName
		{
			get { return Entity.GetAttributeValue<string>(Fields.FullName); }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>String - MaxLength: 50</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public string Telephone
		{
			get { return Entity.GetAttributeValue<string>(Fields.Telephone); }
			set { Entity.Attributes[Fields.Telephone] = value; }
		}

		/// <summary>
		/// <para>For internal use only.</para>
		/// <para>Primary Key - Uniqueidentifier</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public Guid UnresolvedAddressId
		{
			get { return Id; }
			set
			{
				Entity.Attributes[Fields.UnresolvedAddressId] = value;
				Entity.Id = value;
			}
		}

		/// <summary>
		/// <para>ReadOnly - BigInt</para>
		/// <para></para>
		/// </summary>
		[DebuggerNonUserCode()]
		public long? VersionNumber
		{
			get { return Entity.GetAttributeValue<long?>(Fields.VersionNumber); }
		}
	}
}
